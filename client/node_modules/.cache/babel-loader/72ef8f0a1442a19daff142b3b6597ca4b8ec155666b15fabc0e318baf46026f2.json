{"ast":null,"code":"import React from'react';import{Box,Typography,Paper,Grid,TextField,InputAdornment,Divider,Button,Table,TableBody,TableCell,TableContainer,TableHead,TableRow}from'@mui/material';import{createFieldNameHelper,createChangeHandler}from'../utils/formHelpers';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OperatingExpenses=_ref=>{var _values$operatingExpe,_formik$values$operat,_formik$values$operat2,_values$operatingExpe2,_formik$values$operat3,_formik$values$operat4,_values$operatingExpe3,_formik$values$operat5,_formik$values$operat6,_values$operatingExpe4,_formik$values$operat7,_formik$values$operat8,_values$operatingExpe5,_formik$values$operat9,_formik$values$operat10,_values$operatingExpe6,_formik$values$operat11,_formik$values$operat12,_values$operatingExpe7,_formik$values$operat13,_formik$values$operat14,_values$operatingExpe8,_formik$values$operat15,_formik$values$operat16,_values$operatingExpe9,_formik$values$operat17,_formik$values$operat18,_values$operatingExpe10,_formik$values$operat19,_formik$values$operat20,_values$operatingExpe11,_formik$values$operat21,_formik$values$operat22;let{formik}=_ref;// Create helper functions for this component\nconst fieldName=createFieldNameHelper('expenses');const handleChange=createChangeHandler(formik);// Ensure values is initialized\nconst values=formik.values||{};// Calculate totals\nconst calculateTotalOpEx=()=>{const expenses=formik.values.operatingExpenses||{};let total=0;// Add all expense categories\ntotal+=parseFloat(expenses.taxes||0);total+=parseFloat(expenses.insurance||0);total+=parseFloat(expenses.utilities||0);total+=parseFloat(expenses.maintenance||0);total+=parseFloat(expenses.management||0);total+=parseFloat(expenses.administrative||0);total+=parseFloat(expenses.landscaping||0);total+=parseFloat(expenses.security||0);total+=parseFloat(expenses.cleaning||0);total+=parseFloat(expenses.reserves||0);total+=parseFloat(expenses.other||0);return total.toFixed(2);};// Calculate expense ratios\nconst calculateExpenseRatio=expenseValue=>{const effectiveGrossIncome=parseFloat(formik.values.effectiveGrossIncome||0);if(effectiveGrossIncome===0)return'0.00';const ratio=parseFloat(expenseValue||0)/effectiveGrossIncome*100;return ratio.toFixed(2);};// Calculate expense per square foot\nconst calculateExpensePerSqFt=expenseValue=>{const buildingSize=parseFloat(formik.values.buildingSize||0);if(buildingSize===0)return'0.00';const perSqFt=parseFloat(expenseValue||0)/buildingSize;return perSqFt.toFixed(2);};return/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Operating Expenses\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",paragraph:true,children:\"Enter all operating expenses for the property on an annual basis.\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"buildingSize\",name:fieldName('buildingSize'),label:\"Building Size (sq ft)\",type:\"number\",value:values.buildingSize||'',onChange:handleChange})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"effectiveGrossIncome\",name:fieldName('effectiveGrossIncome'),label:\"Effective Gross Income\",type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:values.effectiveGrossIncome||'',disabled:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"expenseYear\",name:fieldName('expenseYear'),label:\"Expense Year\",type:\"number\",value:formik.values.expenseYear||new Date().getFullYear(),onChange:handleChange})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,sx:{mt:2},children:\"Expense Categories\"}),/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Expense Category\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Annual Amount\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"% of EGI\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"$ per sq ft\"})]})}),/*#__PURE__*/_jsxs(TableBody,{children:[/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Real Estate Taxes\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(TextField,{size:\"small\",id:\"operatingExpenses.taxes\",name:fieldName('operatingExpenses.taxes'),type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:((_values$operatingExpe=values.operatingExpenses)===null||_values$operatingExpe===void 0?void 0:_values$operatingExpe.taxes)||'',onChange:handleChange})}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[calculateExpenseRatio((_formik$values$operat=formik.values.operatingExpenses)===null||_formik$values$operat===void 0?void 0:_formik$values$operat.taxes),\"%\"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"$\",calculateExpensePerSqFt((_formik$values$operat2=formik.values.operatingExpenses)===null||_formik$values$operat2===void 0?void 0:_formik$values$operat2.taxes)]})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Insurance\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(TextField,{size:\"small\",id:\"operatingExpenses.insurance\",name:fieldName('operatingExpenses.insurance'),type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:((_values$operatingExpe2=values.operatingExpenses)===null||_values$operatingExpe2===void 0?void 0:_values$operatingExpe2.insurance)||'',onChange:handleChange})}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[calculateExpenseRatio((_formik$values$operat3=formik.values.operatingExpenses)===null||_formik$values$operat3===void 0?void 0:_formik$values$operat3.insurance),\"%\"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"$\",calculateExpensePerSqFt((_formik$values$operat4=formik.values.operatingExpenses)===null||_formik$values$operat4===void 0?void 0:_formik$values$operat4.insurance)]})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Utilities\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(TextField,{size:\"small\",id:\"operatingExpenses.utilities\",name:fieldName('operatingExpenses.utilities'),type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:((_values$operatingExpe3=values.operatingExpenses)===null||_values$operatingExpe3===void 0?void 0:_values$operatingExpe3.utilities)||'',onChange:handleChange})}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[calculateExpenseRatio((_formik$values$operat5=formik.values.operatingExpenses)===null||_formik$values$operat5===void 0?void 0:_formik$values$operat5.utilities),\"%\"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"$\",calculateExpensePerSqFt((_formik$values$operat6=formik.values.operatingExpenses)===null||_formik$values$operat6===void 0?void 0:_formik$values$operat6.utilities)]})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Repairs & Maintenance\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(TextField,{size:\"small\",id:\"operatingExpenses.maintenance\",name:fieldName('operatingExpenses.maintenance'),type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:((_values$operatingExpe4=values.operatingExpenses)===null||_values$operatingExpe4===void 0?void 0:_values$operatingExpe4.maintenance)||'',onChange:handleChange})}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[calculateExpenseRatio((_formik$values$operat7=formik.values.operatingExpenses)===null||_formik$values$operat7===void 0?void 0:_formik$values$operat7.maintenance),\"%\"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"$\",calculateExpensePerSqFt((_formik$values$operat8=formik.values.operatingExpenses)===null||_formik$values$operat8===void 0?void 0:_formik$values$operat8.maintenance)]})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Property Management\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(TextField,{size:\"small\",id:\"operatingExpenses.management\",name:fieldName('operatingExpenses.management'),type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:((_values$operatingExpe5=values.operatingExpenses)===null||_values$operatingExpe5===void 0?void 0:_values$operatingExpe5.management)||'',onChange:handleChange})}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[calculateExpenseRatio((_formik$values$operat9=formik.values.operatingExpenses)===null||_formik$values$operat9===void 0?void 0:_formik$values$operat9.management),\"%\"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"$\",calculateExpensePerSqFt((_formik$values$operat10=formik.values.operatingExpenses)===null||_formik$values$operat10===void 0?void 0:_formik$values$operat10.management)]})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Administrative\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(TextField,{size:\"small\",id:\"operatingExpenses.administrative\",name:fieldName('operatingExpenses.administrative'),type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:((_values$operatingExpe6=values.operatingExpenses)===null||_values$operatingExpe6===void 0?void 0:_values$operatingExpe6.administrative)||'',onChange:handleChange})}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[calculateExpenseRatio((_formik$values$operat11=formik.values.operatingExpenses)===null||_formik$values$operat11===void 0?void 0:_formik$values$operat11.administrative),\"%\"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"$\",calculateExpensePerSqFt((_formik$values$operat12=formik.values.operatingExpenses)===null||_formik$values$operat12===void 0?void 0:_formik$values$operat12.administrative)]})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Landscaping & Grounds\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(TextField,{size:\"small\",id:\"operatingExpenses.landscaping\",name:fieldName('operatingExpenses.landscaping'),type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:((_values$operatingExpe7=values.operatingExpenses)===null||_values$operatingExpe7===void 0?void 0:_values$operatingExpe7.landscaping)||'',onChange:handleChange})}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[calculateExpenseRatio((_formik$values$operat13=formik.values.operatingExpenses)===null||_formik$values$operat13===void 0?void 0:_formik$values$operat13.landscaping),\"%\"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"$\",calculateExpensePerSqFt((_formik$values$operat14=formik.values.operatingExpenses)===null||_formik$values$operat14===void 0?void 0:_formik$values$operat14.landscaping)]})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Security\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(TextField,{size:\"small\",id:\"operatingExpenses.security\",name:fieldName('operatingExpenses.security'),type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:((_values$operatingExpe8=values.operatingExpenses)===null||_values$operatingExpe8===void 0?void 0:_values$operatingExpe8.security)||'',onChange:handleChange})}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[calculateExpenseRatio((_formik$values$operat15=formik.values.operatingExpenses)===null||_formik$values$operat15===void 0?void 0:_formik$values$operat15.security),\"%\"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"$\",calculateExpensePerSqFt((_formik$values$operat16=formik.values.operatingExpenses)===null||_formik$values$operat16===void 0?void 0:_formik$values$operat16.security)]})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Cleaning & Janitorial\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(TextField,{size:\"small\",id:\"operatingExpenses.cleaning\",name:fieldName('operatingExpenses.cleaning'),type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:((_values$operatingExpe9=values.operatingExpenses)===null||_values$operatingExpe9===void 0?void 0:_values$operatingExpe9.cleaning)||'',onChange:handleChange})}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[calculateExpenseRatio((_formik$values$operat17=formik.values.operatingExpenses)===null||_formik$values$operat17===void 0?void 0:_formik$values$operat17.cleaning),\"%\"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"$\",calculateExpensePerSqFt((_formik$values$operat18=formik.values.operatingExpenses)===null||_formik$values$operat18===void 0?void 0:_formik$values$operat18.cleaning)]})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Reserves for Replacement\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(TextField,{size:\"small\",id:\"operatingExpenses.reserves\",name:fieldName('operatingExpenses.reserves'),type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:((_values$operatingExpe10=values.operatingExpenses)===null||_values$operatingExpe10===void 0?void 0:_values$operatingExpe10.reserves)||'',onChange:handleChange})}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[calculateExpenseRatio((_formik$values$operat19=formik.values.operatingExpenses)===null||_formik$values$operat19===void 0?void 0:_formik$values$operat19.reserves),\"%\"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"$\",calculateExpensePerSqFt((_formik$values$operat20=formik.values.operatingExpenses)===null||_formik$values$operat20===void 0?void 0:_formik$values$operat20.reserves)]})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Other Expenses\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(TextField,{size:\"small\",id:\"operatingExpenses.other\",name:fieldName('operatingExpenses.other'),type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:((_values$operatingExpe11=values.operatingExpenses)===null||_values$operatingExpe11===void 0?void 0:_values$operatingExpe11.other)||'',onChange:handleChange})}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[calculateExpenseRatio((_formik$values$operat21=formik.values.operatingExpenses)===null||_formik$values$operat21===void 0?void 0:_formik$values$operat21.other),\"%\"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"$\",calculateExpensePerSqFt((_formik$values$operat22=formik.values.operatingExpenses)===null||_formik$values$operat22===void 0?void 0:_formik$values$operat22.other)]})]}),/*#__PURE__*/_jsxs(TableRow,{sx:{backgroundColor:'#f5f5f5'},children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Total Operating Expenses\"})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"$\",calculateTotalOpEx()]})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsxs(\"strong\",{children:[calculateExpenseRatio(calculateTotalOpEx()),\"%\"]})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"$\",calculateExpensePerSqFt(calculateTotalOpEx())]})})]})]})]})})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Divider,{sx:{my:2}}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mt:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Net Operating Income (NOI)\"}),/*#__PURE__*/_jsx(TextField,{sx:{minWidth:'200px'},id:\"netOperatingIncome\",name:fieldName('netOperatingIncome'),disabled:true,InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:(parseFloat(formik.values.effectiveGrossIncome||0)-parseFloat(calculateTotalOpEx())).toFixed(2)})]})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"expenseNotes\",name:fieldName('expenseNotes'),label:\"Expense Notes\",multiline:true,rows:3,value:values.expenseNotes||'',onChange:handleChange})})]})]});};export default OperatingExpenses;","map":{"version":3,"names":["React","Box","Typography","Paper","Grid","TextField","InputAdornment","Divider","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","createFieldNameHelper","createChangeHandler","jsx","_jsx","jsxs","_jsxs","OperatingExpenses","_ref","_values$operatingExpe","_formik$values$operat","_formik$values$operat2","_values$operatingExpe2","_formik$values$operat3","_formik$values$operat4","_values$operatingExpe3","_formik$values$operat5","_formik$values$operat6","_values$operatingExpe4","_formik$values$operat7","_formik$values$operat8","_values$operatingExpe5","_formik$values$operat9","_formik$values$operat10","_values$operatingExpe6","_formik$values$operat11","_formik$values$operat12","_values$operatingExpe7","_formik$values$operat13","_formik$values$operat14","_values$operatingExpe8","_formik$values$operat15","_formik$values$operat16","_values$operatingExpe9","_formik$values$operat17","_formik$values$operat18","_values$operatingExpe10","_formik$values$operat19","_formik$values$operat20","_values$operatingExpe11","_formik$values$operat21","_formik$values$operat22","formik","fieldName","handleChange","values","calculateTotalOpEx","expenses","operatingExpenses","total","parseFloat","taxes","insurance","utilities","maintenance","management","administrative","landscaping","security","cleaning","reserves","other","toFixed","calculateExpenseRatio","expenseValue","effectiveGrossIncome","ratio","calculateExpensePerSqFt","buildingSize","perSqFt","elevation","sx","p","children","variant","gutterBottom","paragraph","container","spacing","item","xs","md","fullWidth","id","name","label","type","value","onChange","InputProps","startAdornment","position","disabled","expenseYear","Date","getFullYear","mt","align","size","backgroundColor","my","display","justifyContent","alignItems","minWidth","multiline","rows","expenseNotes"],"sources":["C:/Users/sures/Desktop/Valuelyst/client/src/pages/OperatingExpenses.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Grid,\n  TextField,\n  InputAdornment,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@mui/material';\nimport { createFieldNameHelper, createChangeHandler } from '../utils/formHelpers';\n\nconst OperatingExpenses = ({ formik }) => {\n  // Create helper functions for this component\n  const fieldName = createFieldNameHelper('expenses');\n  const handleChange = createChangeHandler(formik);\n  \n  // Ensure values is initialized\n  const values = formik.values || {};\n  // Calculate totals\n  const calculateTotalOpEx = () => {\n    const expenses = formik.values.operatingExpenses || {};\n    let total = 0;\n    \n    // Add all expense categories\n    total += parseFloat(expenses.taxes || 0);\n    total += parseFloat(expenses.insurance || 0);\n    total += parseFloat(expenses.utilities || 0);\n    total += parseFloat(expenses.maintenance || 0);\n    total += parseFloat(expenses.management || 0);\n    total += parseFloat(expenses.administrative || 0);\n    total += parseFloat(expenses.landscaping || 0);\n    total += parseFloat(expenses.security || 0);\n    total += parseFloat(expenses.cleaning || 0);\n    total += parseFloat(expenses.reserves || 0);\n    total += parseFloat(expenses.other || 0);\n    \n    return total.toFixed(2);\n  };\n\n  // Calculate expense ratios\n  const calculateExpenseRatio = (expenseValue) => {\n    const effectiveGrossIncome = parseFloat(formik.values.effectiveGrossIncome || 0);\n    if (effectiveGrossIncome === 0) return '0.00';\n    \n    const ratio = (parseFloat(expenseValue || 0) / effectiveGrossIncome) * 100;\n    return ratio.toFixed(2);\n  };\n\n  // Calculate expense per square foot\n  const calculateExpensePerSqFt = (expenseValue) => {\n    const buildingSize = parseFloat(formik.values.buildingSize || 0);\n    if (buildingSize === 0) return '0.00';\n    \n    const perSqFt = parseFloat(expenseValue || 0) / buildingSize;\n    return perSqFt.toFixed(2);\n  };\n\n  return (\n    <Paper elevation={3} sx={{ p: 3 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Operating Expenses\n      </Typography>\n      <Typography variant=\"body2\" paragraph>\n        Enter all operating expenses for the property on an annual basis.\n      </Typography>\n\n      <Grid container spacing={3}>\n        {/* Basic Property Information */}\n        <Grid item xs={12} md={4}>\n          <TextField\n            fullWidth\n            id=\"buildingSize\"\n            name={fieldName('buildingSize')}\n            label=\"Building Size (sq ft)\"\n            type=\"number\"\n            value={values.buildingSize  || ''}\n            onChange={handleChange}\n          />\n        </Grid>\n        \n        <Grid item xs={12} md={4}>\n          <TextField\n            fullWidth\n            id=\"effectiveGrossIncome\"\n            name={fieldName('effectiveGrossIncome')}\n            label=\"Effective Gross Income\"\n            type=\"number\"\n            InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n            value={values.effectiveGrossIncome  || ''}\n            disabled\n          />\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <TextField\n            fullWidth\n            id=\"expenseYear\"\n            name={fieldName('expenseYear')}\n            label=\"Expense Year\"\n            type=\"number\"\n            value={formik.values.expenseYear || new Date().getFullYear()}\n            onChange={handleChange}\n          />\n        </Grid>\n\n        {/* Expense Categories Table */}\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\n            Expense Categories\n          </Typography>\n          \n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Expense Category</TableCell>\n                  <TableCell align=\"right\">Annual Amount</TableCell>\n                  <TableCell align=\"right\">% of EGI</TableCell>\n                  <TableCell align=\"right\">$ per sq ft</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {/* Real Estate Taxes */}\n                <TableRow>\n                  <TableCell>Real Estate Taxes</TableCell>\n                  <TableCell align=\"right\">\n                    <TextField\n                      size=\"small\"\n                      id=\"operatingExpenses.taxes\"\n                      name={fieldName('operatingExpenses.taxes')}\n                      type=\"number\"\n                      InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                      value={values.operatingExpenses?.taxes  || ''}\n                      onChange={handleChange}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {calculateExpenseRatio(formik.values.operatingExpenses?.taxes)}%\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    ${calculateExpensePerSqFt(formik.values.operatingExpenses?.taxes)}\n                  </TableCell>\n                </TableRow>\n                \n                {/* Insurance */}\n                <TableRow>\n                  <TableCell>Insurance</TableCell>\n                  <TableCell align=\"right\">\n                    <TextField\n                      size=\"small\"\n                      id=\"operatingExpenses.insurance\"\n                      name={fieldName('operatingExpenses.insurance')}\n                      type=\"number\"\n                      InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                      value={values.operatingExpenses?.insurance  || ''}\n                      onChange={handleChange}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {calculateExpenseRatio(formik.values.operatingExpenses?.insurance)}%\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    ${calculateExpensePerSqFt(formik.values.operatingExpenses?.insurance)}\n                  </TableCell>\n                </TableRow>\n                \n                {/* Utilities */}\n                <TableRow>\n                  <TableCell>Utilities</TableCell>\n                  <TableCell align=\"right\">\n                    <TextField\n                      size=\"small\"\n                      id=\"operatingExpenses.utilities\"\n                      name={fieldName('operatingExpenses.utilities')}\n                      type=\"number\"\n                      InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                      value={values.operatingExpenses?.utilities  || ''}\n                      onChange={handleChange}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {calculateExpenseRatio(formik.values.operatingExpenses?.utilities)}%\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    ${calculateExpensePerSqFt(formik.values.operatingExpenses?.utilities)}\n                  </TableCell>\n                </TableRow>\n                \n                {/* Repairs & Maintenance */}\n                <TableRow>\n                  <TableCell>Repairs & Maintenance</TableCell>\n                  <TableCell align=\"right\">\n                    <TextField\n                      size=\"small\"\n                      id=\"operatingExpenses.maintenance\"\n                      name={fieldName('operatingExpenses.maintenance')}\n                      type=\"number\"\n                      InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                      value={values.operatingExpenses?.maintenance  || ''}\n                      onChange={handleChange}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {calculateExpenseRatio(formik.values.operatingExpenses?.maintenance)}%\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    ${calculateExpensePerSqFt(formik.values.operatingExpenses?.maintenance)}\n                  </TableCell>\n                </TableRow>\n                \n                {/* Management */}\n                <TableRow>\n                  <TableCell>Property Management</TableCell>\n                  <TableCell align=\"right\">\n                    <TextField\n                      size=\"small\"\n                      id=\"operatingExpenses.management\"\n                      name={fieldName('operatingExpenses.management')}\n                      type=\"number\"\n                      InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                      value={values.operatingExpenses?.management  || ''}\n                      onChange={handleChange}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {calculateExpenseRatio(formik.values.operatingExpenses?.management)}%\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    ${calculateExpensePerSqFt(formik.values.operatingExpenses?.management)}\n                  </TableCell>\n                </TableRow>\n                \n                {/* Administrative */}\n                <TableRow>\n                  <TableCell>Administrative</TableCell>\n                  <TableCell align=\"right\">\n                    <TextField\n                      size=\"small\"\n                      id=\"operatingExpenses.administrative\"\n                      name={fieldName('operatingExpenses.administrative')}\n                      type=\"number\"\n                      InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                      value={values.operatingExpenses?.administrative  || ''}\n                      onChange={handleChange}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {calculateExpenseRatio(formik.values.operatingExpenses?.administrative)}%\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    ${calculateExpensePerSqFt(formik.values.operatingExpenses?.administrative)}\n                  </TableCell>\n                </TableRow>\n                \n                {/* Landscaping */}\n                <TableRow>\n                  <TableCell>Landscaping & Grounds</TableCell>\n                  <TableCell align=\"right\">\n                    <TextField\n                      size=\"small\"\n                      id=\"operatingExpenses.landscaping\"\n                      name={fieldName('operatingExpenses.landscaping')}\n                      type=\"number\"\n                      InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                      value={values.operatingExpenses?.landscaping  || ''}\n                      onChange={handleChange}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {calculateExpenseRatio(formik.values.operatingExpenses?.landscaping)}%\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    ${calculateExpensePerSqFt(formik.values.operatingExpenses?.landscaping)}\n                  </TableCell>\n                </TableRow>\n                \n                {/* Security */}\n                <TableRow>\n                  <TableCell>Security</TableCell>\n                  <TableCell align=\"right\">\n                    <TextField\n                      size=\"small\"\n                      id=\"operatingExpenses.security\"\n                      name={fieldName('operatingExpenses.security')}\n                      type=\"number\"\n                      InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                      value={values.operatingExpenses?.security  || ''}\n                      onChange={handleChange}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {calculateExpenseRatio(formik.values.operatingExpenses?.security)}%\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    ${calculateExpensePerSqFt(formik.values.operatingExpenses?.security)}\n                  </TableCell>\n                </TableRow>\n                \n                {/* Cleaning */}\n                <TableRow>\n                  <TableCell>Cleaning & Janitorial</TableCell>\n                  <TableCell align=\"right\">\n                    <TextField\n                      size=\"small\"\n                      id=\"operatingExpenses.cleaning\"\n                      name={fieldName('operatingExpenses.cleaning')}\n                      type=\"number\"\n                      InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                      value={values.operatingExpenses?.cleaning  || ''}\n                      onChange={handleChange}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {calculateExpenseRatio(formik.values.operatingExpenses?.cleaning)}%\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    ${calculateExpensePerSqFt(formik.values.operatingExpenses?.cleaning)}\n                  </TableCell>\n                </TableRow>\n                \n                {/* Reserves */}\n                <TableRow>\n                  <TableCell>Reserves for Replacement</TableCell>\n                  <TableCell align=\"right\">\n                    <TextField\n                      size=\"small\"\n                      id=\"operatingExpenses.reserves\"\n                      name={fieldName('operatingExpenses.reserves')}\n                      type=\"number\"\n                      InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                      value={values.operatingExpenses?.reserves  || ''}\n                      onChange={handleChange}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {calculateExpenseRatio(formik.values.operatingExpenses?.reserves)}%\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    ${calculateExpensePerSqFt(formik.values.operatingExpenses?.reserves)}\n                  </TableCell>\n                </TableRow>\n                \n                {/* Other */}\n                <TableRow>\n                  <TableCell>Other Expenses</TableCell>\n                  <TableCell align=\"right\">\n                    <TextField\n                      size=\"small\"\n                      id=\"operatingExpenses.other\"\n                      name={fieldName('operatingExpenses.other')}\n                      type=\"number\"\n                      InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                      value={values.operatingExpenses?.other  || ''}\n                      onChange={handleChange}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {calculateExpenseRatio(formik.values.operatingExpenses?.other)}%\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    ${calculateExpensePerSqFt(formik.values.operatingExpenses?.other)}\n                  </TableCell>\n                </TableRow>\n                \n                {/* Total Row */}\n                <TableRow sx={{ backgroundColor: '#f5f5f5' }}>\n                  <TableCell><strong>Total Operating Expenses</strong></TableCell>\n                  <TableCell align=\"right\">\n                    <strong>${calculateTotalOpEx()}</strong>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <strong>\n                      {calculateExpenseRatio(calculateTotalOpEx())}%\n                    </strong>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <strong>\n                      ${calculateExpensePerSqFt(calculateTotalOpEx())}\n                    </strong>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n\n        {/* Net Operating Income */}\n        <Grid item xs={12}>\n          <Divider sx={{ my: 2 }} />\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 2 }}>\n            <Typography variant=\"h6\">Net Operating Income (NOI)</Typography>\n            <TextField\n              sx={{ minWidth: '200px' }}\n              id=\"netOperatingIncome\"\n              name={fieldName('netOperatingIncome')}\n              disabled\n              InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n              value={\n                (parseFloat(formik.values.effectiveGrossIncome || 0) - parseFloat(calculateTotalOpEx())).toFixed(2)\n              }\n            />\n          </Box>\n        </Grid>\n        \n        {/* Additional Notes */}\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            id=\"expenseNotes\"\n            name={fieldName('expenseNotes')}\n            label=\"Expense Notes\"\n            multiline\n            rows={3}\n            value={values.expenseNotes  || ''}\n            onChange={handleChange}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default OperatingExpenses;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}