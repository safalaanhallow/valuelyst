{"ast":null,"code":"import React,{useState}from'react';import{Box,Typography,Paper,Grid,TextField,InputAdornment,Button,Divider,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,IconButton,FormControl,InputLabel,Select,MenuItem}from'@mui/material';import{createFieldNameHelper,createChangeHandler}from'../utils/formHelpers';import AddIcon from'@mui/icons-material/Add';import DeleteIcon from'@mui/icons-material/Delete';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DebtStructures=_ref=>{let{formik}=_ref;// Create helper functions for this component\nconst fieldName=createFieldNameHelper('debt');const handleChange=createChangeHandler(formik);// Ensure values is initialized\nconst values=formik.values||{};// Function to add a new loan/debt to the property\nconst addDebtItem=()=>{const debts=[...(formik.values.debtStructures||[])];debts.push({lender:'',loanType:'',originalAmount:'',currentBalance:'',interestRate:'',amortizationTerm:'',maturityDate:'',monthlyPayment:'',isInterestOnly:false});formik.setFieldValue('debtStructures',debts);};// Function to remove a debt item\nconst removeDebtItem=index=>{const debts=[...(formik.values.debtStructures||[])];debts.splice(index,1);formik.setFieldValue('debtStructures',debts);};// Function to handle changes to debt structure fields\nconst handleDebtItemChange=(index,field,value)=>{const debts=[...(formik.values.debtStructures||[])];debts[index][field]=value;// Calculate monthly payment if enough data is available\nif(['currentBalance','interestRate','amortizationTerm'].includes(field)){const principal=parseFloat(debts[index].currentBalance)||0;const annualRate=parseFloat(debts[index].interestRate)||0;const amortizationMonths=parseFloat(debts[index].amortizationTerm)*12||0;const isInterestOnly=debts[index].isInterestOnly;if(principal>0&&annualRate>0&&amortizationMonths>0&&!isInterestOnly){// Calculate monthly payment using the mortgage payment formula\nconst monthlyRate=annualRate/100/12;const payment=principal*(monthlyRate*Math.pow(1+monthlyRate,amortizationMonths))/(Math.pow(1+monthlyRate,amortizationMonths)-1);debts[index].monthlyPayment=payment.toFixed(2);}else if(principal>0&&annualRate>0&&isInterestOnly){// Interest only payment\nconst monthlyRate=annualRate/100/12;const payment=principal*monthlyRate;debts[index].monthlyPayment=payment.toFixed(2);}}// Handle interest-only toggle\nif(field==='isInterestOnly'){const principal=parseFloat(debts[index].currentBalance)||0;const annualRate=parseFloat(debts[index].interestRate)||0;if(value&&principal>0&&annualRate>0){// Interest only payment\nconst monthlyRate=annualRate/100/12;const payment=principal*monthlyRate;debts[index].monthlyPayment=payment.toFixed(2);}else if(!value&&principal>0&&annualRate>0){const amortizationMonths=parseFloat(debts[index].amortizationTerm)*12||0;if(amortizationMonths>0){// Amortizing payment\nconst monthlyRate=annualRate/100/12;const payment=principal*(monthlyRate*Math.pow(1+monthlyRate,amortizationMonths))/(Math.pow(1+monthlyRate,amortizationMonths)-1);debts[index].monthlyPayment=payment.toFixed(2);}}}formik.setFieldValue('debtStructures',debts);};// Calculate total debt and debt metrics\nconst calculateTotalDebt=()=>{const debts=formik.values.debtStructures||[];return debts.reduce((total,debt)=>total+parseFloat(debt.currentBalance||0),0).toFixed(2);};const calculateTotalAnnualDebtService=()=>{const debts=formik.values.debtStructures||[];const monthlyTotal=debts.reduce((total,debt)=>total+parseFloat(debt.monthlyPayment||0),0);return(monthlyTotal*12).toFixed(2);};const calculateDebtServiceCoverageRatio=()=>{const noi=parseFloat(formik.values.netOperatingIncome||0);const annualDebtService=parseFloat(calculateTotalAnnualDebtService());if(annualDebtService===0)return'N/A';return(noi/annualDebtService).toFixed(2);};const calculateLoanToValue=()=>{const totalDebt=parseFloat(calculateTotalDebt());const propertyValue=parseFloat(formik.values.estimatedValue||0);if(propertyValue===0)return'N/A';return(totalDebt/propertyValue*100).toFixed(2)+'%';};return/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Debt Structures\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",paragraph:true,children:\"Add details about existing debt and financing on the property.\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"estimatedValue\",name:fieldName('estimatedValue'),label:\"Estimated Property Value\",type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:values.estimatedValue||'',onChange:handleChange})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"netOperatingIncome\",name:fieldName('netOperatingIncome'),label:\"Net Operating Income (NOI)\",type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:values.netOperatingIncome||'',disabled:true})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Divider,{sx:{my:2}}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Financing Details\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:addDebtItem,children:\"Add Loan\"})]}),(formik.values.debtStructures||[]).length===0?/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",align:\"center\",sx:{my:2},children:\"No debt items added. Click \\\"Add Loan\\\" to add property financing details.\"}):/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Lender\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Loan Type\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Current Balance\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Rate\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Amort. Term (Years)\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Maturity Date\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Monthly Payment\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:(formik.values.debtStructures||[]).map((debt,index)=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",value:debt.lender||'',onChange:e=>handleDebtItemChange(index,'lender',e.target.value)})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(FormControl,{fullWidth:true,size:\"small\",children:/*#__PURE__*/_jsxs(Select,{value:debt.loanType||'',onChange:e=>handleDebtItemChange(index,'loanType',e.target.value),displayEmpty:true,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:/*#__PURE__*/_jsx(\"em\",{children:\"Select Type\"})}),/*#__PURE__*/_jsx(MenuItem,{value:\"conventional\",children:\"Conventional\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"construction\",children:\"Construction\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"bridge\",children:\"Bridge\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"mezzanine\",children:\"Mezzanine\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"cmbs\",children:\"CMBS\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"agency\",children:\"Agency\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"other\",children:\"Other\"})]})})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:debt.currentBalance||'',onChange:e=>handleDebtItemChange(index,'currentBalance',e.target.value)})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",type:\"number\",InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:\"%\"})},value:debt.interestRate||'',onChange:e=>handleDebtItemChange(index,'interestRate',e.target.value)})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",type:\"number\",value:debt.amortizationTerm||'',onChange:e=>handleDebtItemChange(index,'amortizationTerm',e.target.value),disabled:debt.isInterestOnly})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",type:\"date\",InputLabelProps:{shrink:true},value:debt.maturityDate||'',onChange:e=>handleDebtItemChange(index,'maturityDate',e.target.value)})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:debt.monthlyPayment||'',onChange:e=>handleDebtItemChange(index,'monthlyPayment',e.target.value)})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>removeDebtItem(index),children:/*#__PURE__*/_jsx(DeleteIcon,{})})})]},index))})]})})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Divider,{sx:{my:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Debt Metrics\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Total Debt\",value:`$${calculateTotalDebt()}`,InputProps:{readOnly:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Annual Debt Service\",value:`$${calculateTotalAnnualDebtService()}`,InputProps:{readOnly:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Debt Service Coverage Ratio\",value:calculateDebtServiceCoverageRatio(),InputProps:{readOnly:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Loan to Value (LTV)\",value:calculateLoanToValue(),InputProps:{readOnly:true}})})]})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"debtNotes\",name:fieldName('debtNotes'),label:\"Debt & Financing Notes\",multiline:true,rows:3,value:values.debtNotes||'',onChange:handleChange})})]})]});};export default DebtStructures;","map":{"version":3,"names":["React","useState","Box","Typography","Paper","Grid","TextField","InputAdornment","Button","Divider","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","FormControl","InputLabel","Select","MenuItem","createFieldNameHelper","createChangeHandler","AddIcon","DeleteIcon","jsx","_jsx","jsxs","_jsxs","DebtStructures","_ref","formik","fieldName","handleChange","values","addDebtItem","debts","debtStructures","push","lender","loanType","originalAmount","currentBalance","interestRate","amortizationTerm","maturityDate","monthlyPayment","isInterestOnly","setFieldValue","removeDebtItem","index","splice","handleDebtItemChange","field","value","includes","principal","parseFloat","annualRate","amortizationMonths","monthlyRate","payment","Math","pow","toFixed","calculateTotalDebt","reduce","total","debt","calculateTotalAnnualDebtService","monthlyTotal","calculateDebtServiceCoverageRatio","noi","netOperatingIncome","annualDebtService","calculateLoanToValue","totalDebt","propertyValue","estimatedValue","elevation","sx","p","children","variant","gutterBottom","paragraph","container","spacing","item","xs","md","fullWidth","id","name","label","type","InputProps","startAdornment","position","onChange","disabled","my","display","justifyContent","alignItems","mb","startIcon","onClick","length","color","align","map","size","e","target","displayEmpty","endAdornment","InputLabelProps","shrink","readOnly","multiline","rows","debtNotes"],"sources":["C:/Users/sures/Desktop/Valuelyst/client/src/pages/DebtStructures.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Grid,\n  TextField,\n  InputAdornment,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from '@mui/material';\nimport { createFieldNameHelper, createChangeHandler } from '../utils/formHelpers';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst DebtStructures = ({ formik }) => {\n  // Create helper functions for this component\n  const fieldName = createFieldNameHelper('debt');\n  const handleChange = createChangeHandler(formik);\n  \n  // Ensure values is initialized\n  const values = formik.values || {};\n  // Function to add a new loan/debt to the property\n  const addDebtItem = () => {\n    const debts = [...(formik.values.debtStructures || [])];\n    debts.push({\n      lender: '',\n      loanType: '',\n      originalAmount: '',\n      currentBalance: '',\n      interestRate: '',\n      amortizationTerm: '',\n      maturityDate: '',\n      monthlyPayment: '',\n      isInterestOnly: false\n    });\n    formik.setFieldValue('debtStructures', debts);\n  };\n\n  // Function to remove a debt item\n  const removeDebtItem = (index) => {\n    const debts = [...(formik.values.debtStructures || [])];\n    debts.splice(index, 1);\n    formik.setFieldValue('debtStructures', debts);\n  };\n\n  // Function to handle changes to debt structure fields\n  const handleDebtItemChange = (index, field, value) => {\n    const debts = [...(formik.values.debtStructures || [])];\n    debts[index][field] = value;\n    \n    // Calculate monthly payment if enough data is available\n    if (['currentBalance', 'interestRate', 'amortizationTerm'].includes(field)) {\n      const principal = parseFloat(debts[index].currentBalance) || 0;\n      const annualRate = parseFloat(debts[index].interestRate) || 0;\n      const amortizationMonths = parseFloat(debts[index].amortizationTerm) * 12 || 0;\n      const isInterestOnly = debts[index].isInterestOnly;\n      \n      if (principal > 0 && annualRate > 0 && amortizationMonths > 0 && !isInterestOnly) {\n        // Calculate monthly payment using the mortgage payment formula\n        const monthlyRate = (annualRate / 100) / 12;\n        const payment = principal * (monthlyRate * Math.pow(1 + monthlyRate, amortizationMonths)) / \n                      (Math.pow(1 + monthlyRate, amortizationMonths) - 1);\n        debts[index].monthlyPayment = payment.toFixed(2);\n      } else if (principal > 0 && annualRate > 0 && isInterestOnly) {\n        // Interest only payment\n        const monthlyRate = (annualRate / 100) / 12;\n        const payment = principal * monthlyRate;\n        debts[index].monthlyPayment = payment.toFixed(2);\n      }\n    }\n    \n    // Handle interest-only toggle\n    if (field === 'isInterestOnly') {\n      const principal = parseFloat(debts[index].currentBalance) || 0;\n      const annualRate = parseFloat(debts[index].interestRate) || 0;\n      \n      if (value && principal > 0 && annualRate > 0) {\n        // Interest only payment\n        const monthlyRate = (annualRate / 100) / 12;\n        const payment = principal * monthlyRate;\n        debts[index].monthlyPayment = payment.toFixed(2);\n      } else if (!value && principal > 0 && annualRate > 0) {\n        const amortizationMonths = parseFloat(debts[index].amortizationTerm) * 12 || 0;\n        if (amortizationMonths > 0) {\n          // Amortizing payment\n          const monthlyRate = (annualRate / 100) / 12;\n          const payment = principal * (monthlyRate * Math.pow(1 + monthlyRate, amortizationMonths)) / \n                        (Math.pow(1 + monthlyRate, amortizationMonths) - 1);\n          debts[index].monthlyPayment = payment.toFixed(2);\n        }\n      }\n    }\n    \n    formik.setFieldValue('debtStructures', debts);\n  };\n\n  // Calculate total debt and debt metrics\n  const calculateTotalDebt = () => {\n    const debts = formik.values.debtStructures || [];\n    return debts.reduce((total, debt) => total + parseFloat(debt.currentBalance || 0), 0).toFixed(2);\n  };\n\n  const calculateTotalAnnualDebtService = () => {\n    const debts = formik.values.debtStructures || [];\n    const monthlyTotal = debts.reduce(\n      (total, debt) => total + parseFloat(debt.monthlyPayment || 0), 0\n    );\n    return (monthlyTotal * 12).toFixed(2);\n  };\n\n  const calculateDebtServiceCoverageRatio = () => {\n    const noi = parseFloat(formik.values.netOperatingIncome || 0);\n    const annualDebtService = parseFloat(calculateTotalAnnualDebtService());\n    if (annualDebtService === 0) return 'N/A';\n    return (noi / annualDebtService).toFixed(2);\n  };\n\n  const calculateLoanToValue = () => {\n    const totalDebt = parseFloat(calculateTotalDebt());\n    const propertyValue = parseFloat(formik.values.estimatedValue || 0);\n    if (propertyValue === 0) return 'N/A';\n    return ((totalDebt / propertyValue) * 100).toFixed(2) + '%';\n  };\n\n  return (\n    <Paper elevation={3} sx={{ p: 3 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Debt Structures\n      </Typography>\n      <Typography variant=\"body2\" paragraph>\n        Add details about existing debt and financing on the property.\n      </Typography>\n\n      <Grid container spacing={3}>\n        {/* Property Value Input */}\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            id=\"estimatedValue\"\n            name={fieldName('estimatedValue')}\n            label=\"Estimated Property Value\"\n            type=\"number\"\n            InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n            value={values.estimatedValue  || ''}\n            onChange={handleChange}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            id=\"netOperatingIncome\"\n            name={fieldName('netOperatingIncome')}\n            label=\"Net Operating Income (NOI)\"\n            type=\"number\"\n            InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n            value={values.netOperatingIncome  || ''}\n            disabled\n          />\n        </Grid>\n\n        {/* Debt Structures Section */}\n        <Grid item xs={12}>\n          <Divider sx={{ my: 2 }} />\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n            <Typography variant=\"h6\">\n              Financing Details\n            </Typography>\n            <Button \n              variant=\"contained\" \n              startIcon={<AddIcon />}\n              onClick={addDebtItem}\n            >\n              Add Loan\n            </Button>\n          </Box>\n          \n          {(formik.values.debtStructures || []).length === 0 ? (\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ my: 2 }}>\n              No debt items added. Click \"Add Loan\" to add property financing details.\n            </Typography>\n          ) : (\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Lender</TableCell>\n                    <TableCell>Loan Type</TableCell>\n                    <TableCell>Current Balance</TableCell>\n                    <TableCell>Rate</TableCell>\n                    <TableCell>Amort. Term (Years)</TableCell>\n                    <TableCell>Maturity Date</TableCell>\n                    <TableCell>Monthly Payment</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {(formik.values.debtStructures || []).map((debt, index) => (\n                    <TableRow key={index}>\n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          value={debt.lender || ''}\n                          onChange={(e) => handleDebtItemChange(index, 'lender', e.target.value)}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <FormControl fullWidth size=\"small\">\n                          <Select\n                            value={debt.loanType || ''}\n                            onChange={(e) => handleDebtItemChange(index, 'loanType', e.target.value)}\n                            displayEmpty\n                          >\n                            <MenuItem value=\"\"><em>Select Type</em></MenuItem>\n                            <MenuItem value=\"conventional\">Conventional</MenuItem>\n                            <MenuItem value=\"construction\">Construction</MenuItem>\n                            <MenuItem value=\"bridge\">Bridge</MenuItem>\n                            <MenuItem value=\"mezzanine\">Mezzanine</MenuItem>\n                            <MenuItem value=\"cmbs\">CMBS</MenuItem>\n                            <MenuItem value=\"agency\">Agency</MenuItem>\n                            <MenuItem value=\"other\">Other</MenuItem>\n                          </Select>\n                        </FormControl>\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"number\"\n                          InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                          value={debt.currentBalance || ''}\n                          onChange={(e) => handleDebtItemChange(index, 'currentBalance', e.target.value)}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"number\"\n                          InputProps={{ endAdornment: <InputAdornment position=\"end\">%</InputAdornment> }}\n                          value={debt.interestRate || ''}\n                          onChange={(e) => handleDebtItemChange(index, 'interestRate', e.target.value)}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"number\"\n                          value={debt.amortizationTerm || ''}\n                          onChange={(e) => handleDebtItemChange(index, 'amortizationTerm', e.target.value)}\n                          disabled={debt.isInterestOnly}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"date\"\n                          InputLabelProps={{ shrink: true }}\n                          value={debt.maturityDate || ''}\n                          onChange={(e) => handleDebtItemChange(index, 'maturityDate', e.target.value)}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"number\"\n                          InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                          value={debt.monthlyPayment || ''}\n                          onChange={(e) => handleDebtItemChange(index, 'monthlyPayment', e.target.value)}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <IconButton\n                          size=\"small\"\n                          onClick={() => removeDebtItem(index)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </Grid>\n\n        {/* Debt Metrics Summary */}\n        <Grid item xs={12}>\n          <Divider sx={{ my: 2 }} />\n          <Typography variant=\"h6\" gutterBottom>\n            Debt Metrics\n          </Typography>\n          \n          <Grid container spacing={2}>\n            <Grid item xs={12} md={3}>\n              <TextField\n                fullWidth\n                label=\"Total Debt\"\n                value={`$${calculateTotalDebt()}`}\n                InputProps={{ readOnly: true }}\n              />\n            </Grid>\n            \n            <Grid item xs={12} md={3}>\n              <TextField\n                fullWidth\n                label=\"Annual Debt Service\"\n                value={`$${calculateTotalAnnualDebtService()}`}\n                InputProps={{ readOnly: true }}\n              />\n            </Grid>\n            \n            <Grid item xs={12} md={3}>\n              <TextField\n                fullWidth\n                label=\"Debt Service Coverage Ratio\"\n                value={calculateDebtServiceCoverageRatio()}\n                InputProps={{ readOnly: true }}\n              />\n            </Grid>\n            \n            <Grid item xs={12} md={3}>\n              <TextField\n                fullWidth\n                label=\"Loan to Value (LTV)\"\n                value={calculateLoanToValue()}\n                InputProps={{ readOnly: true }}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        {/* Additional Notes */}\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            id=\"debtNotes\"\n            name={fieldName('debtNotes')}\n            label=\"Debt & Financing Notes\"\n            multiline\n            rows={3}\n            value={values.debtNotes  || ''}\n            onChange={handleChange}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default DebtStructures;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}