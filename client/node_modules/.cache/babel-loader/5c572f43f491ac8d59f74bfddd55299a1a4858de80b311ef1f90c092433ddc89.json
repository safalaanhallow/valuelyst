{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Typography,Paper,Grid,TextField,Button,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,IconButton,Divider,Card,CardContent,CardMedia,CardActions,Select,MenuItem,FormControl,InputLabel,InputAdornment,Accordion,AccordionSummary,AccordionDetails,Tooltip}from'@mui/material';import{createFieldNameHelper,createChangeHandler}from'../utils/formHelpers';import AddIcon from'@mui/icons-material/Add';import DeleteIcon from'@mui/icons-material/Delete';import EditIcon from'@mui/icons-material/Edit';import ExpandMoreIcon from'@mui/icons-material/ExpandMore';import ArrowUpwardIcon from'@mui/icons-material/ArrowUpward';import ArrowDownwardIcon from'@mui/icons-material/ArrowDownward';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AdjustmentsPage=_ref=>{let{formik}=_ref;// Create helper functions for this component\nconst fieldName=createFieldNameHelper('adjustments');const handleChange=createChangeHandler(formik);// Ensure values is initialized\nconst values=formik.values||{};// State for expanded adjustment categories\nconst[expandedCategory,setExpandedCategory]=useState(null);// State for the selected comp to adjust\nconst[selectedComp,setSelectedComp]=useState(null);// Define the adjustment categories and their fields\nconst adjustmentCategories=[{id:'market',title:'Market Conditions',fields:[{id:'timeAdjustment',label:'Time/Date of Sale',type:'percentage'},{id:'marketTrends',label:'Market Trends',type:'percentage'},{id:'economicChanges',label:'Economic Changes',type:'percentage'}]},{id:'location',title:'Location',fields:[{id:'neighborhood',label:'Neighborhood',type:'percentage'},{id:'accessibility',label:'Accessibility',type:'percentage'},{id:'visibility',label:'Visibility',type:'percentage'},{id:'cornerInfluence',label:'Corner Influence',type:'percentage'}]},{id:'physical',title:'Physical Characteristics',fields:[{id:'size',label:'Size/SF',type:'percentage'},{id:'landToBuilding',label:'Land to Building Ratio',type:'percentage'},{id:'age',label:'Age/Condition',type:'percentage'},{id:'construction',label:'Construction Quality',type:'percentage'},{id:'functionality',label:'Functionality',type:'percentage'},{id:'parking',label:'Parking Ratio',type:'percentage'},{id:'amenities',label:'Amenities',type:'percentage'}]},{id:'economic',title:'Economic Characteristics',fields:[{id:'occupancyRate',label:'Occupancy Rate',type:'percentage'},{id:'tenantQuality',label:'Tenant Quality',type:'percentage'},{id:'leaseTerms',label:'Lease Terms',type:'percentage'},{id:'incomeStability',label:'Income Stability',type:'percentage'},{id:'expenseRatio',label:'Expense Ratio',type:'percentage'}]},{id:'legal',title:'Legal & Zoning',fields:[{id:'zoning',label:'Zoning',type:'percentage'},{id:'entitlements',label:'Entitlements',type:'percentage'},{id:'environmentalIssues',label:'Environmental Issues',type:'percentage'}]},{id:'other',title:'Other Adjustments',fields:[{id:'custom1',label:'Custom Adjustment 1',type:'percentage'},{id:'custom2',label:'Custom Adjustment 2',type:'percentage'}]}];// Function to add a new comp to adjust\nconst addComp=()=>{const comps=[...(formik.values.comps||[])];const newCompId=comps.length>0?Math.max(...comps.map(c=>c.id))+1:1;// Create a new blank comp with empty adjustment values\nconst newComp={id:newCompId,name:`Comparable ${newCompId}`,address:'',saleDate:'',salePrice:'',pricePerSF:'',squareFeet:'',yearBuilt:'',type:'',description:'',image:'',adjustments:{}};// Initialize all adjustment categories and fields\nadjustmentCategories.forEach(category=>{newComp.adjustments[category.id]={};category.fields.forEach(field=>{newComp.adjustments[category.id][field.id]={value:0,notes:''};});});comps.push(newComp);formik.setFieldValue('comps',comps);setSelectedComp(newComp);};// Function to remove a comp\nconst removeComp=id=>{const comps=formik.values.comps.filter(comp=>comp.id!==id);formik.setFieldValue('comps',comps);if(selectedComp&&selectedComp.id===id){setSelectedComp(comps.length>0?comps[0]:null);}};// Function to update a comp's basic info\nconst updateCompInfo=(field,value)=>{if(!selectedComp)return;const comps=[...(formik.values.comps||[])];const compIndex=comps.findIndex(comp=>comp.id===selectedComp.id);if(compIndex>=0){comps[compIndex]={...comps[compIndex],[field]:value};// Auto-calculate price per SF if both price and SF are available\nif(field==='salePrice'||field==='squareFeet'){const price=field==='salePrice'?parseFloat(value):parseFloat(comps[compIndex].salePrice);const sf=field==='squareFeet'?parseFloat(value):parseFloat(comps[compIndex].squareFeet);if(!isNaN(price)&&!isNaN(sf)&&sf>0){comps[compIndex].pricePerSF=(price/sf).toFixed(2);}}formik.setFieldValue('comps',comps);setSelectedComp(comps[compIndex]);}};// Function to update an adjustment value\nconst updateAdjustment=(categoryId,fieldId,subField,value)=>{if(!selectedComp)return;const comps=[...(formik.values.comps||[])];const compIndex=comps.findIndex(comp=>comp.id===selectedComp.id);if(compIndex>=0){// Ensure the adjustment structure exists\nif(!comps[compIndex].adjustments){comps[compIndex].adjustments={};}if(!comps[compIndex].adjustments[categoryId]){comps[compIndex].adjustments[categoryId]={};}if(!comps[compIndex].adjustments[categoryId][fieldId]){comps[compIndex].adjustments[categoryId][fieldId]={value:0,notes:''};}// Update the specified subfield (value or notes)\ncomps[compIndex].adjustments[categoryId][fieldId][subField]=value;formik.setFieldValue('comps',comps);setSelectedComp(comps[compIndex]);}};// Calculate the total adjustment percentage for a comp\nconst calculateTotalAdjustment=comp=>{if(!comp||!comp.adjustments)return 0;let totalAdjustment=0;// Sum up all adjustment values across all categories\nadjustmentCategories.forEach(category=>{if(comp.adjustments[category.id]){category.fields.forEach(field=>{if(comp.adjustments[category.id][field.id]){totalAdjustment+=parseFloat(comp.adjustments[category.id][field.id].value||0);}});}});return totalAdjustment;};// Calculate the adjusted value for a comp\nconst calculateAdjustedValue=comp=>{if(!comp||!comp.pricePerSF)return 0;const baseValue=parseFloat(comp.pricePerSF);if(isNaN(baseValue))return 0;const totalAdjustmentPercent=calculateTotalAdjustment(comp);const adjustmentMultiplier=1+totalAdjustmentPercent/100;return(baseValue*adjustmentMultiplier).toFixed(2);};// Calculate overall statistics for adjusted values\nconst calculateStatistics=()=>{const comps=formik.values.comps||[];if(comps.length===0){return{min:0,max:0,average:0,median:0};}const adjustedValues=comps.map(comp=>parseFloat(calculateAdjustedValue(comp)));const sortedValues=[...adjustedValues].sort((a,b)=>a-b);const min=Math.min(...adjustedValues);const max=Math.max(...adjustedValues);const sum=adjustedValues.reduce((a,b)=>a+b,0);const average=sum/adjustedValues.length;// Calculate median\nlet median;if(sortedValues.length%2===0){median=(sortedValues[sortedValues.length/2-1]+sortedValues[sortedValues.length/2])/2;}else{median=sortedValues[Math.floor(sortedValues.length/2)];}return{min,max,average,median};};// If the comps array is empty or not initialized, set it to an empty array\nuseEffect(()=>{if(!formik.values.comps){formik.setFieldValue('comps',[]);}else if(formik.values.comps.length>0&&!selectedComp){// Auto-select the first comp if none is selected\nsetSelectedComp(formik.values.comps[0]);}},[formik.values.comps]);// Statistics for the adjusted values\nconst stats=calculateStatistics();return/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Comparable Properties Adjustments\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",paragraph:true,children:\"Add comparable properties and make adjustments to calculate the subject property value.\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,sx:{mb:3},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Min Adjusted Value (PSF)\",value:`$${stats.min.toFixed(2)}`,InputProps:{readOnly:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Max Adjusted Value (PSF)\",value:`$${stats.max.toFixed(2)}`,InputProps:{readOnly:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Average Adjusted Value (PSF)\",value:`$${stats.average.toFixed(2)}`,InputProps:{readOnly:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Median Adjusted Value (PSF)\",value:`$${stats.median.toFixed(2)}`,InputProps:{readOnly:true}})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(Paper,{variant:\"outlined\",sx:{p:2,height:'100%'},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Comparable Properties\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:addComp,size:\"small\",children:\"Add Comp\"})]}),(formik.values.comps||[]).length===0?/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{textAlign:'center',my:4},children:\"No comparable properties added yet. Click \\\"Add Comp\\\" to get started.\"}):/*#__PURE__*/_jsx(Box,{sx:{maxHeight:'500px',overflowY:'auto'},children:(formik.values.comps||[]).map(comp=>/*#__PURE__*/_jsx(Card,{variant:\"outlined\",sx:{mb:1,cursor:'pointer',backgroundColor:selectedComp&&selectedComp.id===comp.id?'rgba(25, 118, 210, 0.08)':'transparent'},onClick:()=>setSelectedComp(comp),children:/*#__PURE__*/_jsxs(CardContent,{sx:{py:1},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{fontWeight:selectedComp&&selectedComp.id===comp.id?'bold':'normal'},children:comp.name||`Comparable ${comp.id}`}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",color:\"error\",onClick:e=>{e.stopPropagation();removeComp(comp.id);},children:/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\"})})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[comp.pricePerSF?`$${comp.pricePerSF}/SF`:'',comp.squareFeet?` · ${comp.squareFeet.toLocaleString()} SF`:'']}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",noWrap:true,children:comp.address}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mt:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"primary\",children:[\"Total Adjustment:\",/*#__PURE__*/_jsx(\"span\",{style:{color:calculateTotalAdjustment(comp)>0?'green':calculateTotalAdjustment(comp)<0?'red':'inherit'},children:` ${calculateTotalAdjustment(comp)>0?'+':''}${calculateTotalAdjustment(comp)}%`})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"primary\",children:[\"Adj. Value: \",/*#__PURE__*/_jsxs(\"strong\",{children:[\"$\",calculateAdjustedValue(comp)]})]})]})]})},comp.id))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:/*#__PURE__*/_jsx(Paper,{variant:\"outlined\",sx:{p:2},children:selectedComp?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[\"Adjust: \",selectedComp.name||`Comparable ${selectedComp.id}`]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{mb:3},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Comparable Name\",value:selectedComp.name||'',onChange:e=>updateCompInfo('name',e.target.value)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Property Type\",value:selectedComp.type||'',onChange:e=>updateCompInfo('type',e.target.value)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Address\",value:selectedComp.address||'',onChange:e=>updateCompInfo('address',e.target.value)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Sale Date\",type:\"date\",InputLabelProps:{shrink:true},value:selectedComp.saleDate||'',onChange:e=>updateCompInfo('saleDate',e.target.value)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Sale Price\",type:\"number\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"})},value:selectedComp.salePrice||'',onChange:e=>updateCompInfo('salePrice',e.target.value)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Square Feet\",type:\"number\",value:selectedComp.squareFeet||'',onChange:e=>updateCompInfo('squareFeet',e.target.value)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Price Per SF\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"}),readOnly:true},value:selectedComp.pricePerSF||''})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Year Built\",type:\"number\",value:selectedComp.yearBuilt||'',onChange:e=>updateCompInfo('yearBuilt',e.target.value)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Adjusted Value (PSF)\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"}),readOnly:true},value:calculateAdjustedValue(selectedComp)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Description\",multiline:true,rows:2,value:selectedComp.description||'',onChange:e=>updateCompInfo('description',e.target.value)})})]}),/*#__PURE__*/_jsx(Divider,{sx:{my:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Adjustments\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",paragraph:true,children:\"Enter positive percentages for superior subject property features and negative percentages for inferior features.\"}),adjustmentCategories.map(category=>/*#__PURE__*/_jsxs(Accordion,{expanded:expandedCategory===category.id,onChange:()=>setExpandedCategory(expandedCategory===category.id?null:category.id),sx:{mb:1},children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),children:/*#__PURE__*/_jsx(Typography,{children:category.title})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Adjustment\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",width:\"150px\",children:\"Value (%)\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Notes\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:category.fields.map(field=>{var _selectedComp$adjustm,_selectedComp$adjustm2,_selectedComp$adjustm3,_selectedComp$adjustm4,_selectedComp$adjustm5,_selectedComp$adjustm6;// Get current adjustment value and notes\nconst adjustmentValue=((_selectedComp$adjustm=selectedComp.adjustments)===null||_selectedComp$adjustm===void 0?void 0:(_selectedComp$adjustm2=_selectedComp$adjustm[category.id])===null||_selectedComp$adjustm2===void 0?void 0:(_selectedComp$adjustm3=_selectedComp$adjustm2[field.id])===null||_selectedComp$adjustm3===void 0?void 0:_selectedComp$adjustm3.value)||0;const adjustmentNotes=((_selectedComp$adjustm4=selectedComp.adjustments)===null||_selectedComp$adjustm4===void 0?void 0:(_selectedComp$adjustm5=_selectedComp$adjustm4[category.id])===null||_selectedComp$adjustm5===void 0?void 0:(_selectedComp$adjustm6=_selectedComp$adjustm5[field.id])===null||_selectedComp$adjustm6===void 0?void 0:_selectedComp$adjustm6.notes)||'';return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:field.label}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Decrease by 1%\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>{const newValue=parseFloat(adjustmentValue)-1;updateAdjustment(category.id,field.id,'value',newValue);},children:/*#__PURE__*/_jsx(ArrowDownwardIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(TextField,{size:\"small\",type:\"number\",value:adjustmentValue,onChange:e=>updateAdjustment(category.id,field.id,'value',e.target.value),InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:\"%\"}),inputProps:{style:{textAlign:'right'},step:0.5}},sx:{width:'80px','& input':{textAlign:'right'}}}),/*#__PURE__*/_jsx(Tooltip,{title:\"Increase by 1%\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>{const newValue=parseFloat(adjustmentValue)+1;updateAdjustment(category.id,field.id,'value',newValue);},children:/*#__PURE__*/_jsx(ArrowUpwardIcon,{fontSize:\"small\"})})})]})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",placeholder:\"Justification for adjustment\",value:adjustmentNotes,onChange:e=>updateAdjustment(category.id,field.id,'notes',e.target.value)})})]},field.id);})})]})})})]},category.id)),/*#__PURE__*/_jsxs(Box,{sx:{mt:3,p:2,bgcolor:'background.paper',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Adjustment Summary\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Base Price Per SF\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"}),readOnly:true},value:selectedComp.pricePerSF||'0.00'})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Total Adjustment\",InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:\"%\"}),readOnly:true},value:calculateTotalAdjustment(selectedComp)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Adjusted Value Per SF\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$\"}),readOnly:true},value:calculateAdjustedValue(selectedComp)})})]})]})]}):/*#__PURE__*/_jsx(Box,{sx:{p:4,textAlign:'center'},children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"text.secondary\",children:\"Select a comparable property from the list to make adjustments, or click \\\"Add Comp\\\" to create a new one.\"})})})})]})]});};export default AdjustmentsPage;","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Grid","TextField","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","Divider","Card","CardContent","CardMedia","CardActions","Select","MenuItem","FormControl","InputLabel","InputAdornment","Accordion","AccordionSummary","AccordionDetails","Tooltip","createFieldNameHelper","createChangeHandler","AddIcon","DeleteIcon","EditIcon","ExpandMoreIcon","ArrowUpwardIcon","ArrowDownwardIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AdjustmentsPage","_ref","formik","fieldName","handleChange","values","expandedCategory","setExpandedCategory","selectedComp","setSelectedComp","adjustmentCategories","id","title","fields","label","type","addComp","comps","newCompId","length","Math","max","map","c","newComp","name","address","saleDate","salePrice","pricePerSF","squareFeet","yearBuilt","description","image","adjustments","forEach","category","field","value","notes","push","setFieldValue","removeComp","filter","comp","updateCompInfo","compIndex","findIndex","price","parseFloat","sf","isNaN","toFixed","updateAdjustment","categoryId","fieldId","subField","calculateTotalAdjustment","totalAdjustment","calculateAdjustedValue","baseValue","totalAdjustmentPercent","adjustmentMultiplier","calculateStatistics","min","average","median","adjustedValues","sortedValues","sort","a","b","sum","reduce","floor","stats","elevation","sx","p","children","variant","gutterBottom","paragraph","container","spacing","mb","item","xs","md","fullWidth","InputProps","readOnly","height","display","justifyContent","alignItems","startIcon","onClick","size","color","textAlign","my","maxHeight","overflowY","cursor","backgroundColor","py","fontWeight","e","stopPropagation","fontSize","toLocaleString","noWrap","mt","style","onChange","target","InputLabelProps","shrink","startAdornment","position","multiline","rows","expanded","expandIcon","align","width","_selectedComp$adjustm","_selectedComp$adjustm2","_selectedComp$adjustm3","_selectedComp$adjustm4","_selectedComp$adjustm5","_selectedComp$adjustm6","adjustmentValue","adjustmentNotes","newValue","endAdornment","inputProps","step","placeholder","bgcolor","borderRadius"],"sources":["C:/Users/sures/Desktop/Valuelyst/client/src/pages/AdjustmentsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Grid,\n  TextField,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  Divider,\n  Card,\n  CardContent,\n  CardMedia,\n  CardActions,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  InputAdornment,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Tooltip\n} from '@mui/material';\nimport { createFieldNameHelper, createChangeHandler } from '../utils/formHelpers';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\n\nconst AdjustmentsPage = ({ formik }) => {\n  // Create helper functions for this component\n  const fieldName = createFieldNameHelper('adjustments');\n  const handleChange = createChangeHandler(formik);\n  \n  // Ensure values is initialized\n  const values = formik.values || {};\n  // State for expanded adjustment categories\n  const [expandedCategory, setExpandedCategory] = useState(null);\n  // State for the selected comp to adjust\n  const [selectedComp, setSelectedComp] = useState(null);\n\n  // Define the adjustment categories and their fields\n  const adjustmentCategories = [\n    {\n      id: 'market',\n      title: 'Market Conditions',\n      fields: [\n        { id: 'timeAdjustment', label: 'Time/Date of Sale', type: 'percentage' },\n        { id: 'marketTrends', label: 'Market Trends', type: 'percentage' },\n        { id: 'economicChanges', label: 'Economic Changes', type: 'percentage' }\n      ]\n    },\n    {\n      id: 'location',\n      title: 'Location',\n      fields: [\n        { id: 'neighborhood', label: 'Neighborhood', type: 'percentage' },\n        { id: 'accessibility', label: 'Accessibility', type: 'percentage' },\n        { id: 'visibility', label: 'Visibility', type: 'percentage' },\n        { id: 'cornerInfluence', label: 'Corner Influence', type: 'percentage' }\n      ]\n    },\n    {\n      id: 'physical',\n      title: 'Physical Characteristics',\n      fields: [\n        { id: 'size', label: 'Size/SF', type: 'percentage' },\n        { id: 'landToBuilding', label: 'Land to Building Ratio', type: 'percentage' },\n        { id: 'age', label: 'Age/Condition', type: 'percentage' },\n        { id: 'construction', label: 'Construction Quality', type: 'percentage' },\n        { id: 'functionality', label: 'Functionality', type: 'percentage' },\n        { id: 'parking', label: 'Parking Ratio', type: 'percentage' },\n        { id: 'amenities', label: 'Amenities', type: 'percentage' }\n      ]\n    },\n    {\n      id: 'economic',\n      title: 'Economic Characteristics',\n      fields: [\n        { id: 'occupancyRate', label: 'Occupancy Rate', type: 'percentage' },\n        { id: 'tenantQuality', label: 'Tenant Quality', type: 'percentage' },\n        { id: 'leaseTerms', label: 'Lease Terms', type: 'percentage' },\n        { id: 'incomeStability', label: 'Income Stability', type: 'percentage' },\n        { id: 'expenseRatio', label: 'Expense Ratio', type: 'percentage' }\n      ]\n    },\n    {\n      id: 'legal',\n      title: 'Legal & Zoning',\n      fields: [\n        { id: 'zoning', label: 'Zoning', type: 'percentage' },\n        { id: 'entitlements', label: 'Entitlements', type: 'percentage' },\n        { id: 'environmentalIssues', label: 'Environmental Issues', type: 'percentage' }\n      ]\n    },\n    {\n      id: 'other',\n      title: 'Other Adjustments',\n      fields: [\n        { id: 'custom1', label: 'Custom Adjustment 1', type: 'percentage' },\n        { id: 'custom2', label: 'Custom Adjustment 2', type: 'percentage' }\n      ]\n    }\n  ];\n\n  // Function to add a new comp to adjust\n  const addComp = () => {\n    const comps = [...(formik.values.comps || [])];\n    const newCompId = comps.length > 0 ? Math.max(...comps.map(c => c.id)) + 1 : 1;\n\n    // Create a new blank comp with empty adjustment values\n    const newComp = {\n      id: newCompId,\n      name: `Comparable ${newCompId}`,\n      address: '',\n      saleDate: '',\n      salePrice: '',\n      pricePerSF: '',\n      squareFeet: '',\n      yearBuilt: '',\n      type: '',\n      description: '',\n      image: '',\n      adjustments: {}\n    };\n    \n    // Initialize all adjustment categories and fields\n    adjustmentCategories.forEach(category => {\n      newComp.adjustments[category.id] = {};\n      category.fields.forEach(field => {\n        newComp.adjustments[category.id][field.id] = {\n          value: 0,\n          notes: ''\n        };\n      });\n    });\n\n    comps.push(newComp);\n    formik.setFieldValue('comps', comps);\n    setSelectedComp(newComp);\n  };\n\n  // Function to remove a comp\n  const removeComp = (id) => {\n    const comps = formik.values.comps.filter(comp => comp.id !== id);\n    formik.setFieldValue('comps', comps);\n    if (selectedComp && selectedComp.id === id) {\n      setSelectedComp(comps.length > 0 ? comps[0] : null);\n    }\n  };\n\n  // Function to update a comp's basic info\n  const updateCompInfo = (field, value) => {\n    if (!selectedComp) return;\n\n    const comps = [...(formik.values.comps || [])];\n    const compIndex = comps.findIndex(comp => comp.id === selectedComp.id);\n    \n    if (compIndex >= 0) {\n      comps[compIndex] = {\n        ...comps[compIndex],\n        [field]: value\n      };\n\n      // Auto-calculate price per SF if both price and SF are available\n      if (field === 'salePrice' || field === 'squareFeet') {\n        const price = field === 'salePrice' ? parseFloat(value) : parseFloat(comps[compIndex].salePrice);\n        const sf = field === 'squareFeet' ? parseFloat(value) : parseFloat(comps[compIndex].squareFeet);\n        \n        if (!isNaN(price) && !isNaN(sf) && sf > 0) {\n          comps[compIndex].pricePerSF = (price / sf).toFixed(2);\n        }\n      }\n\n      formik.setFieldValue('comps', comps);\n      setSelectedComp(comps[compIndex]);\n    }\n  };\n\n  // Function to update an adjustment value\n  const updateAdjustment = (categoryId, fieldId, subField, value) => {\n    if (!selectedComp) return;\n\n    const comps = [...(formik.values.comps || [])];\n    const compIndex = comps.findIndex(comp => comp.id === selectedComp.id);\n    \n    if (compIndex >= 0) {\n      // Ensure the adjustment structure exists\n      if (!comps[compIndex].adjustments) {\n        comps[compIndex].adjustments = {};\n      }\n      if (!comps[compIndex].adjustments[categoryId]) {\n        comps[compIndex].adjustments[categoryId] = {};\n      }\n      if (!comps[compIndex].adjustments[categoryId][fieldId]) {\n        comps[compIndex].adjustments[categoryId][fieldId] = { value: 0, notes: '' };\n      }\n\n      // Update the specified subfield (value or notes)\n      comps[compIndex].adjustments[categoryId][fieldId][subField] = value;\n      \n      formik.setFieldValue('comps', comps);\n      setSelectedComp(comps[compIndex]);\n    }\n  };\n\n  // Calculate the total adjustment percentage for a comp\n  const calculateTotalAdjustment = (comp) => {\n    if (!comp || !comp.adjustments) return 0;\n\n    let totalAdjustment = 0;\n    \n    // Sum up all adjustment values across all categories\n    adjustmentCategories.forEach(category => {\n      if (comp.adjustments[category.id]) {\n        category.fields.forEach(field => {\n          if (comp.adjustments[category.id][field.id]) {\n            totalAdjustment += parseFloat(comp.adjustments[category.id][field.id].value || 0);\n          }\n        });\n      }\n    });\n\n    return totalAdjustment;\n  };\n\n  // Calculate the adjusted value for a comp\n  const calculateAdjustedValue = (comp) => {\n    if (!comp || !comp.pricePerSF) return 0;\n    \n    const baseValue = parseFloat(comp.pricePerSF);\n    if (isNaN(baseValue)) return 0;\n    \n    const totalAdjustmentPercent = calculateTotalAdjustment(comp);\n    const adjustmentMultiplier = 1 + (totalAdjustmentPercent / 100);\n    \n    return (baseValue * adjustmentMultiplier).toFixed(2);\n  };\n\n  // Calculate overall statistics for adjusted values\n  const calculateStatistics = () => {\n    const comps = formik.values.comps || [];\n    \n    if (comps.length === 0) {\n      return { min: 0, max: 0, average: 0, median: 0 };\n    }\n    \n    const adjustedValues = comps.map(comp => parseFloat(calculateAdjustedValue(comp)));\n    const sortedValues = [...adjustedValues].sort((a, b) => a - b);\n    \n    const min = Math.min(...adjustedValues);\n    const max = Math.max(...adjustedValues);\n    const sum = adjustedValues.reduce((a, b) => a + b, 0);\n    const average = sum / adjustedValues.length;\n    \n    // Calculate median\n    let median;\n    if (sortedValues.length % 2 === 0) {\n      median = (sortedValues[sortedValues.length / 2 - 1] + sortedValues[sortedValues.length / 2]) / 2;\n    } else {\n      median = sortedValues[Math.floor(sortedValues.length / 2)];\n    }\n    \n    return { min, max, average, median };\n  };\n\n  // If the comps array is empty or not initialized, set it to an empty array\n  useEffect(() => {\n    if (!formik.values.comps) {\n      formik.setFieldValue('comps', []);\n    } else if (formik.values.comps.length > 0 && !selectedComp) {\n      // Auto-select the first comp if none is selected\n      setSelectedComp(formik.values.comps[0]);\n    }\n  }, [formik.values.comps]);\n\n  // Statistics for the adjusted values\n  const stats = calculateStatistics();\n\n  return (\n    <Paper elevation={3} sx={{ p: 3 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Comparable Properties Adjustments\n      </Typography>\n      <Typography variant=\"body2\" paragraph>\n        Add comparable properties and make adjustments to calculate the subject property value.\n      </Typography>\n\n      {/* Summary Statistics */}\n      <Grid container spacing={3} sx={{ mb: 3 }}>\n        <Grid item xs={12} md={3}>\n          <TextField\n            fullWidth\n            label=\"Min Adjusted Value (PSF)\"\n            value={`$${stats.min.toFixed(2)}`}\n            InputProps={{ readOnly: true }}\n          />\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <TextField\n            fullWidth\n            label=\"Max Adjusted Value (PSF)\"\n            value={`$${stats.max.toFixed(2)}`}\n            InputProps={{ readOnly: true }}\n          />\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <TextField\n            fullWidth\n            label=\"Average Adjusted Value (PSF)\"\n            value={`$${stats.average.toFixed(2)}`}\n            InputProps={{ readOnly: true }}\n          />\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <TextField\n            fullWidth\n            label=\"Median Adjusted Value (PSF)\"\n            value={`$${stats.median.toFixed(2)}`}\n            InputProps={{ readOnly: true }}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3}>\n        {/* Left side - List of comps */}\n        <Grid item xs={12} md={4}>\n          <Paper variant=\"outlined\" sx={{ p: 2, height: '100%' }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\">Comparable Properties</Typography>\n              <Button \n                variant=\"contained\" \n                startIcon={<AddIcon />}\n                onClick={addComp}\n                size=\"small\"\n              >\n                Add Comp\n              </Button>\n            </Box>\n\n            {/* List of comps */}\n            {(formik.values.comps || []).length === 0 ? (\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign: 'center', my: 4 }}>\n                No comparable properties added yet. Click \"Add Comp\" to get started.\n              </Typography>\n            ) : (\n              <Box sx={{ maxHeight: '500px', overflowY: 'auto' }}>\n                {(formik.values.comps || []).map((comp) => (\n                  <Card \n                    key={comp.id} \n                    variant=\"outlined\" \n                    sx={{ \n                      mb: 1, \n                      cursor: 'pointer',\n                      backgroundColor: selectedComp && selectedComp.id === comp.id ? 'rgba(25, 118, 210, 0.08)' : 'transparent'\n                    }}\n                    onClick={() => setSelectedComp(comp)}\n                  >\n                    <CardContent sx={{ py: 1 }}>\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <Typography variant=\"subtitle1\" sx={{ fontWeight: selectedComp && selectedComp.id === comp.id ? 'bold' : 'normal' }}>\n                          {comp.name || `Comparable ${comp.id}`}\n                        </Typography>\n                        <IconButton \n                          size=\"small\" \n                          color=\"error\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            removeComp(comp.id);\n                          }}\n                        >\n                          <DeleteIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {comp.pricePerSF ? `$${comp.pricePerSF}/SF` : ''}\n                        {comp.squareFeet ? ` · ${comp.squareFeet.toLocaleString()} SF` : ''}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                        {comp.address}\n                      </Typography>\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1 }}>\n                        <Typography variant=\"body2\" color=\"primary\">\n                          Total Adjustment: \n                          <span style={{ \n                            color: calculateTotalAdjustment(comp) > 0 ? 'green' : \n                                  calculateTotalAdjustment(comp) < 0 ? 'red' : 'inherit' \n                          }}>\n                            {` ${calculateTotalAdjustment(comp) > 0 ? '+' : ''}${calculateTotalAdjustment(comp)}%`}\n                          </span>\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"primary\">\n                          Adj. Value: <strong>${calculateAdjustedValue(comp)}</strong>\n                        </Typography>\n                      </Box>\n                    </CardContent>\n                  </Card>\n                ))}\n              </Box>\n            )}\n          </Paper>\n        </Grid>\n\n        {/* Right side - Adjustment details */}\n        <Grid item xs={12} md={8}>\n          <Paper variant=\"outlined\" sx={{ p: 2 }}>\n            {selectedComp ? (\n              <>\n                <Typography variant=\"h6\" gutterBottom>\n                  Adjust: {selectedComp.name || `Comparable ${selectedComp.id}`}\n                </Typography>\n                \n                {/* Basic comp info */}\n                <Grid container spacing={2} sx={{ mb: 3 }}>\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Comparable Name\"\n                      value={selectedComp.name || ''}\n                      onChange={(e) => updateCompInfo('name', e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Property Type\"\n                      value={selectedComp.type || ''}\n                      onChange={(e) => updateCompInfo('type', e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Address\"\n                      value={selectedComp.address || ''}\n                      onChange={(e) => updateCompInfo('address', e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      fullWidth\n                      label=\"Sale Date\"\n                      type=\"date\"\n                      InputLabelProps={{ shrink: true }}\n                      value={selectedComp.saleDate || ''}\n                      onChange={(e) => updateCompInfo('saleDate', e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      fullWidth\n                      label=\"Sale Price\"\n                      type=\"number\"\n                      InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                      value={selectedComp.salePrice || ''}\n                      onChange={(e) => updateCompInfo('salePrice', e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      fullWidth\n                      label=\"Square Feet\"\n                      type=\"number\"\n                      value={selectedComp.squareFeet || ''}\n                      onChange={(e) => updateCompInfo('squareFeet', e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      fullWidth\n                      label=\"Price Per SF\"\n                      InputProps={{ \n                        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                        readOnly: true\n                      }}\n                      value={selectedComp.pricePerSF || ''}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      fullWidth\n                      label=\"Year Built\"\n                      type=\"number\"\n                      value={selectedComp.yearBuilt || ''}\n                      onChange={(e) => updateCompInfo('yearBuilt', e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      fullWidth\n                      label=\"Adjusted Value (PSF)\"\n                      InputProps={{ \n                        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                        readOnly: true\n                      }}\n                      value={calculateAdjustedValue(selectedComp)}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Description\"\n                      multiline\n                      rows={2}\n                      value={selectedComp.description || ''}\n                      onChange={(e) => updateCompInfo('description', e.target.value)}\n                    />\n                  </Grid>\n                </Grid>\n\n                <Divider sx={{ my: 2 }} />\n                \n                {/* Adjustments */}\n                <Typography variant=\"h6\" gutterBottom>\n                  Adjustments\n                </Typography>\n                <Typography variant=\"body2\" paragraph>\n                  Enter positive percentages for superior subject property features and negative percentages for inferior features.\n                </Typography>\n\n                {/* Adjustment accordions by category */}\n                {adjustmentCategories.map((category) => (\n                  <Accordion \n                    key={category.id}\n                    expanded={expandedCategory === category.id}\n                    onChange={() => setExpandedCategory(expandedCategory === category.id ? null : category.id)}\n                    sx={{ mb: 1 }}\n                  >\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                      <Typography>{category.title}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <TableContainer>\n                        <Table size=\"small\">\n                          <TableHead>\n                            <TableRow>\n                              <TableCell>Adjustment</TableCell>\n                              <TableCell align=\"right\" width=\"150px\">Value (%)</TableCell>\n                              <TableCell>Notes</TableCell>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {category.fields.map((field) => {\n                              // Get current adjustment value and notes\n                              const adjustmentValue = selectedComp.adjustments?.[category.id]?.[field.id]?.value || 0;\n                              const adjustmentNotes = selectedComp.adjustments?.[category.id]?.[field.id]?.notes || '';\n                              \n                              return (\n                                <TableRow key={field.id}>\n                                  <TableCell>{field.label}</TableCell>\n                                  <TableCell align=\"right\">\n                                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                      <Tooltip title=\"Decrease by 1%\">\n                                        <IconButton \n                                          size=\"small\"\n                                          onClick={() => {\n                                            const newValue = parseFloat(adjustmentValue) - 1;\n                                            updateAdjustment(category.id, field.id, 'value', newValue);\n                                          }}\n                                        >\n                                          <ArrowDownwardIcon fontSize=\"small\" />\n                                        </IconButton>\n                                      </Tooltip>\n                                      <TextField\n                                        size=\"small\"\n                                        type=\"number\"\n                                        value={adjustmentValue}\n                                        onChange={(e) => updateAdjustment(category.id, field.id, 'value', e.target.value)}\n                                        InputProps={{\n                                          endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n                                          inputProps: { \n                                            style: { textAlign: 'right' },\n                                            step: 0.5 \n                                          }\n                                        }}\n                                        sx={{ width: '80px', '& input': { textAlign: 'right' } }}\n                                      />\n                                      <Tooltip title=\"Increase by 1%\">\n                                        <IconButton \n                                          size=\"small\"\n                                          onClick={() => {\n                                            const newValue = parseFloat(adjustmentValue) + 1;\n                                            updateAdjustment(category.id, field.id, 'value', newValue);\n                                          }}\n                                        >\n                                          <ArrowUpwardIcon fontSize=\"small\" />\n                                        </IconButton>\n                                      </Tooltip>\n                                    </Box>\n                                  </TableCell>\n                                  <TableCell>\n                                    <TextField\n                                      fullWidth\n                                      size=\"small\"\n                                      placeholder=\"Justification for adjustment\"\n                                      value={adjustmentNotes}\n                                      onChange={(e) => updateAdjustment(category.id, field.id, 'notes', e.target.value)}\n                                    />\n                                  </TableCell>\n                                </TableRow>\n                              );\n                            })}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n                    </AccordionDetails>\n                  </Accordion>\n                ))}\n\n                {/* Total adjustments summary */}\n                <Box sx={{ mt: 3, p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Adjustment Summary\n                  </Typography>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} md={4}>\n                      <TextField\n                        fullWidth\n                        label=\"Base Price Per SF\"\n                        InputProps={{ \n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                          readOnly: true\n                        }}\n                        value={selectedComp.pricePerSF || '0.00'}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <TextField\n                        fullWidth\n                        label=\"Total Adjustment\"\n                        InputProps={{ \n                          endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n                          readOnly: true\n                        }}\n                        value={calculateTotalAdjustment(selectedComp)}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <TextField\n                        fullWidth\n                        label=\"Adjusted Value Per SF\"\n                        InputProps={{ \n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                          readOnly: true\n                        }}\n                        value={calculateAdjustedValue(selectedComp)}\n                      />\n                    </Grid>\n                  </Grid>\n                </Box>\n              </>\n            ) : (\n              <Box sx={{ p: 4, textAlign: 'center' }}>\n                <Typography variant=\"body1\" color=\"text.secondary\">\n                  Select a comparable property from the list to make adjustments,\n                  or click \"Add Comp\" to create a new one.\n                </Typography>\n              </Box>\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default AdjustmentsPage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OACEC,GAAG,CACHC,UAAU,CACVC,KAAK,CACLC,IAAI,CACJC,SAAS,CACTC,MAAM,CACNC,KAAK,CACLC,SAAS,CACTC,SAAS,CACTC,cAAc,CACdC,SAAS,CACTC,QAAQ,CACRC,UAAU,CACVC,OAAO,CACPC,IAAI,CACJC,WAAW,CACXC,SAAS,CACTC,WAAW,CACXC,MAAM,CACNC,QAAQ,CACRC,WAAW,CACXC,UAAU,CACVC,cAAc,CACdC,SAAS,CACTC,gBAAgB,CAChBC,gBAAgB,CAChBC,OAAO,KACF,eAAe,CACtB,OAASC,qBAAqB,CAAEC,mBAAmB,KAAQ,sBAAsB,CACjF,MAAO,CAAAC,OAAO,KAAM,yBAAyB,CAC7C,MAAO,CAAAC,UAAU,KAAM,4BAA4B,CACnD,MAAO,CAAAC,QAAQ,KAAM,0BAA0B,CAC/C,MAAO,CAAAC,cAAc,KAAM,gCAAgC,CAC3D,MAAO,CAAAC,eAAe,KAAM,iCAAiC,CAC7D,MAAO,CAAAC,iBAAiB,KAAM,mCAAmC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAElE,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAAgB,IAAf,CAAEC,MAAO,CAAC,CAAAD,IAAA,CACjC;AACA,KAAM,CAAAE,SAAS,CAAGjB,qBAAqB,CAAC,aAAa,CAAC,CACtD,KAAM,CAAAkB,YAAY,CAAGjB,mBAAmB,CAACe,MAAM,CAAC,CAEhD;AACA,KAAM,CAAAG,MAAM,CAAGH,MAAM,CAACG,MAAM,EAAI,CAAC,CAAC,CAClC;AACA,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGlD,QAAQ,CAAC,IAAI,CAAC,CAC9D;AACA,KAAM,CAACmD,YAAY,CAAEC,eAAe,CAAC,CAAGpD,QAAQ,CAAC,IAAI,CAAC,CAEtD;AACA,KAAM,CAAAqD,oBAAoB,CAAG,CAC3B,CACEC,EAAE,CAAE,QAAQ,CACZC,KAAK,CAAE,mBAAmB,CAC1BC,MAAM,CAAE,CACN,CAAEF,EAAE,CAAE,gBAAgB,CAAEG,KAAK,CAAE,mBAAmB,CAAEC,IAAI,CAAE,YAAa,CAAC,CACxE,CAAEJ,EAAE,CAAE,cAAc,CAAEG,KAAK,CAAE,eAAe,CAAEC,IAAI,CAAE,YAAa,CAAC,CAClE,CAAEJ,EAAE,CAAE,iBAAiB,CAAEG,KAAK,CAAE,kBAAkB,CAAEC,IAAI,CAAE,YAAa,CAAC,CAE5E,CAAC,CACD,CACEJ,EAAE,CAAE,UAAU,CACdC,KAAK,CAAE,UAAU,CACjBC,MAAM,CAAE,CACN,CAAEF,EAAE,CAAE,cAAc,CAAEG,KAAK,CAAE,cAAc,CAAEC,IAAI,CAAE,YAAa,CAAC,CACjE,CAAEJ,EAAE,CAAE,eAAe,CAAEG,KAAK,CAAE,eAAe,CAAEC,IAAI,CAAE,YAAa,CAAC,CACnE,CAAEJ,EAAE,CAAE,YAAY,CAAEG,KAAK,CAAE,YAAY,CAAEC,IAAI,CAAE,YAAa,CAAC,CAC7D,CAAEJ,EAAE,CAAE,iBAAiB,CAAEG,KAAK,CAAE,kBAAkB,CAAEC,IAAI,CAAE,YAAa,CAAC,CAE5E,CAAC,CACD,CACEJ,EAAE,CAAE,UAAU,CACdC,KAAK,CAAE,0BAA0B,CACjCC,MAAM,CAAE,CACN,CAAEF,EAAE,CAAE,MAAM,CAAEG,KAAK,CAAE,SAAS,CAAEC,IAAI,CAAE,YAAa,CAAC,CACpD,CAAEJ,EAAE,CAAE,gBAAgB,CAAEG,KAAK,CAAE,wBAAwB,CAAEC,IAAI,CAAE,YAAa,CAAC,CAC7E,CAAEJ,EAAE,CAAE,KAAK,CAAEG,KAAK,CAAE,eAAe,CAAEC,IAAI,CAAE,YAAa,CAAC,CACzD,CAAEJ,EAAE,CAAE,cAAc,CAAEG,KAAK,CAAE,sBAAsB,CAAEC,IAAI,CAAE,YAAa,CAAC,CACzE,CAAEJ,EAAE,CAAE,eAAe,CAAEG,KAAK,CAAE,eAAe,CAAEC,IAAI,CAAE,YAAa,CAAC,CACnE,CAAEJ,EAAE,CAAE,SAAS,CAAEG,KAAK,CAAE,eAAe,CAAEC,IAAI,CAAE,YAAa,CAAC,CAC7D,CAAEJ,EAAE,CAAE,WAAW,CAAEG,KAAK,CAAE,WAAW,CAAEC,IAAI,CAAE,YAAa,CAAC,CAE/D,CAAC,CACD,CACEJ,EAAE,CAAE,UAAU,CACdC,KAAK,CAAE,0BAA0B,CACjCC,MAAM,CAAE,CACN,CAAEF,EAAE,CAAE,eAAe,CAAEG,KAAK,CAAE,gBAAgB,CAAEC,IAAI,CAAE,YAAa,CAAC,CACpE,CAAEJ,EAAE,CAAE,eAAe,CAAEG,KAAK,CAAE,gBAAgB,CAAEC,IAAI,CAAE,YAAa,CAAC,CACpE,CAAEJ,EAAE,CAAE,YAAY,CAAEG,KAAK,CAAE,aAAa,CAAEC,IAAI,CAAE,YAAa,CAAC,CAC9D,CAAEJ,EAAE,CAAE,iBAAiB,CAAEG,KAAK,CAAE,kBAAkB,CAAEC,IAAI,CAAE,YAAa,CAAC,CACxE,CAAEJ,EAAE,CAAE,cAAc,CAAEG,KAAK,CAAE,eAAe,CAAEC,IAAI,CAAE,YAAa,CAAC,CAEtE,CAAC,CACD,CACEJ,EAAE,CAAE,OAAO,CACXC,KAAK,CAAE,gBAAgB,CACvBC,MAAM,CAAE,CACN,CAAEF,EAAE,CAAE,QAAQ,CAAEG,KAAK,CAAE,QAAQ,CAAEC,IAAI,CAAE,YAAa,CAAC,CACrD,CAAEJ,EAAE,CAAE,cAAc,CAAEG,KAAK,CAAE,cAAc,CAAEC,IAAI,CAAE,YAAa,CAAC,CACjE,CAAEJ,EAAE,CAAE,qBAAqB,CAAEG,KAAK,CAAE,sBAAsB,CAAEC,IAAI,CAAE,YAAa,CAAC,CAEpF,CAAC,CACD,CACEJ,EAAE,CAAE,OAAO,CACXC,KAAK,CAAE,mBAAmB,CAC1BC,MAAM,CAAE,CACN,CAAEF,EAAE,CAAE,SAAS,CAAEG,KAAK,CAAE,qBAAqB,CAAEC,IAAI,CAAE,YAAa,CAAC,CACnE,CAAEJ,EAAE,CAAE,SAAS,CAAEG,KAAK,CAAE,qBAAqB,CAAEC,IAAI,CAAE,YAAa,CAAC,CAEvE,CAAC,CACF,CAED;AACA,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAAAC,KAAK,CAAG,CAAC,IAAIf,MAAM,CAACG,MAAM,CAACY,KAAK,EAAI,EAAE,CAAC,CAAC,CAC9C,KAAM,CAAAC,SAAS,CAAGD,KAAK,CAACE,MAAM,CAAG,CAAC,CAAGC,IAAI,CAACC,GAAG,CAAC,GAAGJ,KAAK,CAACK,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACZ,EAAE,CAAC,CAAC,CAAG,CAAC,CAAG,CAAC,CAE9E;AACA,KAAM,CAAAa,OAAO,CAAG,CACdb,EAAE,CAAEO,SAAS,CACbO,IAAI,CAAE,cAAcP,SAAS,EAAE,CAC/BQ,OAAO,CAAE,EAAE,CACXC,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,EAAE,CACbC,UAAU,CAAE,EAAE,CACdC,UAAU,CAAE,EAAE,CACdC,SAAS,CAAE,EAAE,CACbhB,IAAI,CAAE,EAAE,CACRiB,WAAW,CAAE,EAAE,CACfC,KAAK,CAAE,EAAE,CACTC,WAAW,CAAE,CAAC,CAChB,CAAC,CAED;AACAxB,oBAAoB,CAACyB,OAAO,CAACC,QAAQ,EAAI,CACvCZ,OAAO,CAACU,WAAW,CAACE,QAAQ,CAACzB,EAAE,CAAC,CAAG,CAAC,CAAC,CACrCyB,QAAQ,CAACvB,MAAM,CAACsB,OAAO,CAACE,KAAK,EAAI,CAC/Bb,OAAO,CAACU,WAAW,CAACE,QAAQ,CAACzB,EAAE,CAAC,CAAC0B,KAAK,CAAC1B,EAAE,CAAC,CAAG,CAC3C2B,KAAK,CAAE,CAAC,CACRC,KAAK,CAAE,EACT,CAAC,CACH,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFtB,KAAK,CAACuB,IAAI,CAAChB,OAAO,CAAC,CACnBtB,MAAM,CAACuC,aAAa,CAAC,OAAO,CAAExB,KAAK,CAAC,CACpCR,eAAe,CAACe,OAAO,CAAC,CAC1B,CAAC,CAED;AACA,KAAM,CAAAkB,UAAU,CAAI/B,EAAE,EAAK,CACzB,KAAM,CAAAM,KAAK,CAAGf,MAAM,CAACG,MAAM,CAACY,KAAK,CAAC0B,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACjC,EAAE,GAAKA,EAAE,CAAC,CAChET,MAAM,CAACuC,aAAa,CAAC,OAAO,CAAExB,KAAK,CAAC,CACpC,GAAIT,YAAY,EAAIA,YAAY,CAACG,EAAE,GAAKA,EAAE,CAAE,CAC1CF,eAAe,CAACQ,KAAK,CAACE,MAAM,CAAG,CAAC,CAAGF,KAAK,CAAC,CAAC,CAAC,CAAG,IAAI,CAAC,CACrD,CACF,CAAC,CAED;AACA,KAAM,CAAA4B,cAAc,CAAGA,CAACR,KAAK,CAAEC,KAAK,GAAK,CACvC,GAAI,CAAC9B,YAAY,CAAE,OAEnB,KAAM,CAAAS,KAAK,CAAG,CAAC,IAAIf,MAAM,CAACG,MAAM,CAACY,KAAK,EAAI,EAAE,CAAC,CAAC,CAC9C,KAAM,CAAA6B,SAAS,CAAG7B,KAAK,CAAC8B,SAAS,CAACH,IAAI,EAAIA,IAAI,CAACjC,EAAE,GAAKH,YAAY,CAACG,EAAE,CAAC,CAEtE,GAAImC,SAAS,EAAI,CAAC,CAAE,CAClB7B,KAAK,CAAC6B,SAAS,CAAC,CAAG,CACjB,GAAG7B,KAAK,CAAC6B,SAAS,CAAC,CACnB,CAACT,KAAK,EAAGC,KACX,CAAC,CAED;AACA,GAAID,KAAK,GAAK,WAAW,EAAIA,KAAK,GAAK,YAAY,CAAE,CACnD,KAAM,CAAAW,KAAK,CAAGX,KAAK,GAAK,WAAW,CAAGY,UAAU,CAACX,KAAK,CAAC,CAAGW,UAAU,CAAChC,KAAK,CAAC6B,SAAS,CAAC,CAAClB,SAAS,CAAC,CAChG,KAAM,CAAAsB,EAAE,CAAGb,KAAK,GAAK,YAAY,CAAGY,UAAU,CAACX,KAAK,CAAC,CAAGW,UAAU,CAAChC,KAAK,CAAC6B,SAAS,CAAC,CAAChB,UAAU,CAAC,CAE/F,GAAI,CAACqB,KAAK,CAACH,KAAK,CAAC,EAAI,CAACG,KAAK,CAACD,EAAE,CAAC,EAAIA,EAAE,CAAG,CAAC,CAAE,CACzCjC,KAAK,CAAC6B,SAAS,CAAC,CAACjB,UAAU,CAAG,CAACmB,KAAK,CAAGE,EAAE,EAAEE,OAAO,CAAC,CAAC,CAAC,CACvD,CACF,CAEAlD,MAAM,CAACuC,aAAa,CAAC,OAAO,CAAExB,KAAK,CAAC,CACpCR,eAAe,CAACQ,KAAK,CAAC6B,SAAS,CAAC,CAAC,CACnC,CACF,CAAC,CAED;AACA,KAAM,CAAAO,gBAAgB,CAAGA,CAACC,UAAU,CAAEC,OAAO,CAAEC,QAAQ,CAAElB,KAAK,GAAK,CACjE,GAAI,CAAC9B,YAAY,CAAE,OAEnB,KAAM,CAAAS,KAAK,CAAG,CAAC,IAAIf,MAAM,CAACG,MAAM,CAACY,KAAK,EAAI,EAAE,CAAC,CAAC,CAC9C,KAAM,CAAA6B,SAAS,CAAG7B,KAAK,CAAC8B,SAAS,CAACH,IAAI,EAAIA,IAAI,CAACjC,EAAE,GAAKH,YAAY,CAACG,EAAE,CAAC,CAEtE,GAAImC,SAAS,EAAI,CAAC,CAAE,CAClB;AACA,GAAI,CAAC7B,KAAK,CAAC6B,SAAS,CAAC,CAACZ,WAAW,CAAE,CACjCjB,KAAK,CAAC6B,SAAS,CAAC,CAACZ,WAAW,CAAG,CAAC,CAAC,CACnC,CACA,GAAI,CAACjB,KAAK,CAAC6B,SAAS,CAAC,CAACZ,WAAW,CAACoB,UAAU,CAAC,CAAE,CAC7CrC,KAAK,CAAC6B,SAAS,CAAC,CAACZ,WAAW,CAACoB,UAAU,CAAC,CAAG,CAAC,CAAC,CAC/C,CACA,GAAI,CAACrC,KAAK,CAAC6B,SAAS,CAAC,CAACZ,WAAW,CAACoB,UAAU,CAAC,CAACC,OAAO,CAAC,CAAE,CACtDtC,KAAK,CAAC6B,SAAS,CAAC,CAACZ,WAAW,CAACoB,UAAU,CAAC,CAACC,OAAO,CAAC,CAAG,CAAEjB,KAAK,CAAE,CAAC,CAAEC,KAAK,CAAE,EAAG,CAAC,CAC7E,CAEA;AACAtB,KAAK,CAAC6B,SAAS,CAAC,CAACZ,WAAW,CAACoB,UAAU,CAAC,CAACC,OAAO,CAAC,CAACC,QAAQ,CAAC,CAAGlB,KAAK,CAEnEpC,MAAM,CAACuC,aAAa,CAAC,OAAO,CAAExB,KAAK,CAAC,CACpCR,eAAe,CAACQ,KAAK,CAAC6B,SAAS,CAAC,CAAC,CACnC,CACF,CAAC,CAED;AACA,KAAM,CAAAW,wBAAwB,CAAIb,IAAI,EAAK,CACzC,GAAI,CAACA,IAAI,EAAI,CAACA,IAAI,CAACV,WAAW,CAAE,MAAO,EAAC,CAExC,GAAI,CAAAwB,eAAe,CAAG,CAAC,CAEvB;AACAhD,oBAAoB,CAACyB,OAAO,CAACC,QAAQ,EAAI,CACvC,GAAIQ,IAAI,CAACV,WAAW,CAACE,QAAQ,CAACzB,EAAE,CAAC,CAAE,CACjCyB,QAAQ,CAACvB,MAAM,CAACsB,OAAO,CAACE,KAAK,EAAI,CAC/B,GAAIO,IAAI,CAACV,WAAW,CAACE,QAAQ,CAACzB,EAAE,CAAC,CAAC0B,KAAK,CAAC1B,EAAE,CAAC,CAAE,CAC3C+C,eAAe,EAAIT,UAAU,CAACL,IAAI,CAACV,WAAW,CAACE,QAAQ,CAACzB,EAAE,CAAC,CAAC0B,KAAK,CAAC1B,EAAE,CAAC,CAAC2B,KAAK,EAAI,CAAC,CAAC,CACnF,CACF,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEF,MAAO,CAAAoB,eAAe,CACxB,CAAC,CAED;AACA,KAAM,CAAAC,sBAAsB,CAAIf,IAAI,EAAK,CACvC,GAAI,CAACA,IAAI,EAAI,CAACA,IAAI,CAACf,UAAU,CAAE,MAAO,EAAC,CAEvC,KAAM,CAAA+B,SAAS,CAAGX,UAAU,CAACL,IAAI,CAACf,UAAU,CAAC,CAC7C,GAAIsB,KAAK,CAACS,SAAS,CAAC,CAAE,MAAO,EAAC,CAE9B,KAAM,CAAAC,sBAAsB,CAAGJ,wBAAwB,CAACb,IAAI,CAAC,CAC7D,KAAM,CAAAkB,oBAAoB,CAAG,CAAC,CAAID,sBAAsB,CAAG,GAAI,CAE/D,MAAO,CAACD,SAAS,CAAGE,oBAAoB,EAAEV,OAAO,CAAC,CAAC,CAAC,CACtD,CAAC,CAED;AACA,KAAM,CAAAW,mBAAmB,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAA9C,KAAK,CAAGf,MAAM,CAACG,MAAM,CAACY,KAAK,EAAI,EAAE,CAEvC,GAAIA,KAAK,CAACE,MAAM,GAAK,CAAC,CAAE,CACtB,MAAO,CAAE6C,GAAG,CAAE,CAAC,CAAE3C,GAAG,CAAE,CAAC,CAAE4C,OAAO,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAE,CAAC,CAClD,CAEA,KAAM,CAAAC,cAAc,CAAGlD,KAAK,CAACK,GAAG,CAACsB,IAAI,EAAIK,UAAU,CAACU,sBAAsB,CAACf,IAAI,CAAC,CAAC,CAAC,CAClF,KAAM,CAAAwB,YAAY,CAAG,CAAC,GAAGD,cAAc,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAAGC,CAAC,CAAC,CAE9D,KAAM,CAAAP,GAAG,CAAG5C,IAAI,CAAC4C,GAAG,CAAC,GAAGG,cAAc,CAAC,CACvC,KAAM,CAAA9C,GAAG,CAAGD,IAAI,CAACC,GAAG,CAAC,GAAG8C,cAAc,CAAC,CACvC,KAAM,CAAAK,GAAG,CAAGL,cAAc,CAACM,MAAM,CAAC,CAACH,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAAGC,CAAC,CAAE,CAAC,CAAC,CACrD,KAAM,CAAAN,OAAO,CAAGO,GAAG,CAAGL,cAAc,CAAChD,MAAM,CAE3C;AACA,GAAI,CAAA+C,MAAM,CACV,GAAIE,YAAY,CAACjD,MAAM,CAAG,CAAC,GAAK,CAAC,CAAE,CACjC+C,MAAM,CAAG,CAACE,YAAY,CAACA,YAAY,CAACjD,MAAM,CAAG,CAAC,CAAG,CAAC,CAAC,CAAGiD,YAAY,CAACA,YAAY,CAACjD,MAAM,CAAG,CAAC,CAAC,EAAI,CAAC,CAClG,CAAC,IAAM,CACL+C,MAAM,CAAGE,YAAY,CAAChD,IAAI,CAACsD,KAAK,CAACN,YAAY,CAACjD,MAAM,CAAG,CAAC,CAAC,CAAC,CAC5D,CAEA,MAAO,CAAE6C,GAAG,CAAE3C,GAAG,CAAE4C,OAAO,CAAEC,MAAO,CAAC,CACtC,CAAC,CAED;AACA5G,SAAS,CAAC,IAAM,CACd,GAAI,CAAC4C,MAAM,CAACG,MAAM,CAACY,KAAK,CAAE,CACxBf,MAAM,CAACuC,aAAa,CAAC,OAAO,CAAE,EAAE,CAAC,CACnC,CAAC,IAAM,IAAIvC,MAAM,CAACG,MAAM,CAACY,KAAK,CAACE,MAAM,CAAG,CAAC,EAAI,CAACX,YAAY,CAAE,CAC1D;AACAC,eAAe,CAACP,MAAM,CAACG,MAAM,CAACY,KAAK,CAAC,CAAC,CAAC,CAAC,CACzC,CACF,CAAC,CAAE,CAACf,MAAM,CAACG,MAAM,CAACY,KAAK,CAAC,CAAC,CAEzB;AACA,KAAM,CAAA0D,KAAK,CAAGZ,mBAAmB,CAAC,CAAC,CAEnC,mBACElE,KAAA,CAACpC,KAAK,EAACmH,SAAS,CAAE,CAAE,CAACC,EAAE,CAAE,CAAEC,CAAC,CAAE,CAAE,CAAE,CAAAC,QAAA,eAChCpF,IAAA,CAACnC,UAAU,EAACwH,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAF,QAAA,CAAC,mCAEtC,CAAY,CAAC,cACbpF,IAAA,CAACnC,UAAU,EAACwH,OAAO,CAAC,OAAO,CAACE,SAAS,MAAAH,QAAA,CAAC,yFAEtC,CAAY,CAAC,cAGblF,KAAA,CAACnC,IAAI,EAACyH,SAAS,MAACC,OAAO,CAAE,CAAE,CAACP,EAAE,CAAE,CAAEQ,EAAE,CAAE,CAAE,CAAE,CAAAN,QAAA,eACxCpF,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,0BAA0B,CAChCwB,KAAK,CAAE,IAAIqC,KAAK,CAACX,GAAG,CAACZ,OAAO,CAAC,CAAC,CAAC,EAAG,CAClCsC,UAAU,CAAE,CAAEC,QAAQ,CAAE,IAAK,CAAE,CAChC,CAAC,CACE,CAAC,cACPhG,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,0BAA0B,CAChCwB,KAAK,CAAE,IAAIqC,KAAK,CAACtD,GAAG,CAAC+B,OAAO,CAAC,CAAC,CAAC,EAAG,CAClCsC,UAAU,CAAE,CAAEC,QAAQ,CAAE,IAAK,CAAE,CAChC,CAAC,CACE,CAAC,cACPhG,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,8BAA8B,CACpCwB,KAAK,CAAE,IAAIqC,KAAK,CAACV,OAAO,CAACb,OAAO,CAAC,CAAC,CAAC,EAAG,CACtCsC,UAAU,CAAE,CAAEC,QAAQ,CAAE,IAAK,CAAE,CAChC,CAAC,CACE,CAAC,cACPhG,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,6BAA6B,CACnCwB,KAAK,CAAE,IAAIqC,KAAK,CAACT,MAAM,CAACd,OAAO,CAAC,CAAC,CAAC,EAAG,CACrCsC,UAAU,CAAE,CAAEC,QAAQ,CAAE,IAAK,CAAE,CAChC,CAAC,CACE,CAAC,EACH,CAAC,cAEP9F,KAAA,CAACnC,IAAI,EAACyH,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAL,QAAA,eAEzBpF,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBlF,KAAA,CAACpC,KAAK,EAACuH,OAAO,CAAC,UAAU,CAACH,EAAE,CAAE,CAAEC,CAAC,CAAE,CAAC,CAAEc,MAAM,CAAE,MAAO,CAAE,CAAAb,QAAA,eACrDlF,KAAA,CAACtC,GAAG,EAACsH,EAAE,CAAE,CAAEgB,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,eAAe,CAAEC,UAAU,CAAE,QAAQ,CAAEV,EAAE,CAAE,CAAE,CAAE,CAAAN,QAAA,eACzFpF,IAAA,CAACnC,UAAU,EAACwH,OAAO,CAAC,IAAI,CAAAD,QAAA,CAAC,uBAAqB,CAAY,CAAC,cAC3DpF,IAAA,CAAC/B,MAAM,EACLoH,OAAO,CAAC,WAAW,CACnBgB,SAAS,cAAErG,IAAA,CAACP,OAAO,GAAE,CAAE,CACvB6G,OAAO,CAAEjF,OAAQ,CACjBkF,IAAI,CAAC,OAAO,CAAAnB,QAAA,CACb,UAED,CAAQ,CAAC,EACN,CAAC,CAGL,CAAC7E,MAAM,CAACG,MAAM,CAACY,KAAK,EAAI,EAAE,EAAEE,MAAM,GAAK,CAAC,cACvCxB,IAAA,CAACnC,UAAU,EAACwH,OAAO,CAAC,OAAO,CAACmB,KAAK,CAAC,gBAAgB,CAACtB,EAAE,CAAE,CAAEuB,SAAS,CAAE,QAAQ,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAtB,QAAA,CAAC,wEAEvF,CAAY,CAAC,cAEbpF,IAAA,CAACpC,GAAG,EAACsH,EAAE,CAAE,CAAEyB,SAAS,CAAE,OAAO,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAxB,QAAA,CAChD,CAAC7E,MAAM,CAACG,MAAM,CAACY,KAAK,EAAI,EAAE,EAAEK,GAAG,CAAEsB,IAAI,eACpCjD,IAAA,CAACtB,IAAI,EAEH2G,OAAO,CAAC,UAAU,CAClBH,EAAE,CAAE,CACFQ,EAAE,CAAE,CAAC,CACLmB,MAAM,CAAE,SAAS,CACjBC,eAAe,CAAEjG,YAAY,EAAIA,YAAY,CAACG,EAAE,GAAKiC,IAAI,CAACjC,EAAE,CAAG,0BAA0B,CAAG,aAC9F,CAAE,CACFsF,OAAO,CAAEA,CAAA,GAAMxF,eAAe,CAACmC,IAAI,CAAE,CAAAmC,QAAA,cAErClF,KAAA,CAACvB,WAAW,EAACuG,EAAE,CAAE,CAAE6B,EAAE,CAAE,CAAE,CAAE,CAAA3B,QAAA,eACzBlF,KAAA,CAACtC,GAAG,EAACsH,EAAE,CAAE,CAAEgB,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,eAAe,CAAEC,UAAU,CAAE,QAAS,CAAE,CAAAhB,QAAA,eAClFpF,IAAA,CAACnC,UAAU,EAACwH,OAAO,CAAC,WAAW,CAACH,EAAE,CAAE,CAAE8B,UAAU,CAAEnG,YAAY,EAAIA,YAAY,CAACG,EAAE,GAAKiC,IAAI,CAACjC,EAAE,CAAG,MAAM,CAAG,QAAS,CAAE,CAAAoE,QAAA,CACjHnC,IAAI,CAACnB,IAAI,EAAI,cAAcmB,IAAI,CAACjC,EAAE,EAAE,CAC3B,CAAC,cACbhB,IAAA,CAACxB,UAAU,EACT+H,IAAI,CAAC,OAAO,CACZC,KAAK,CAAC,OAAO,CACbF,OAAO,CAAGW,CAAC,EAAK,CACdA,CAAC,CAACC,eAAe,CAAC,CAAC,CACnBnE,UAAU,CAACE,IAAI,CAACjC,EAAE,CAAC,CACrB,CAAE,CAAAoE,QAAA,cAEFpF,IAAA,CAACN,UAAU,EAACyH,QAAQ,CAAC,OAAO,CAAE,CAAC,CACrB,CAAC,EACV,CAAC,cACNjH,KAAA,CAACrC,UAAU,EAACwH,OAAO,CAAC,OAAO,CAACmB,KAAK,CAAC,gBAAgB,CAAApB,QAAA,EAC/CnC,IAAI,CAACf,UAAU,CAAG,IAAIe,IAAI,CAACf,UAAU,KAAK,CAAG,EAAE,CAC/Ce,IAAI,CAACd,UAAU,CAAG,MAAMc,IAAI,CAACd,UAAU,CAACiF,cAAc,CAAC,CAAC,KAAK,CAAG,EAAE,EACzD,CAAC,cACbpH,IAAA,CAACnC,UAAU,EAACwH,OAAO,CAAC,OAAO,CAACmB,KAAK,CAAC,gBAAgB,CAACa,MAAM,MAAAjC,QAAA,CACtDnC,IAAI,CAAClB,OAAO,CACH,CAAC,cACb7B,KAAA,CAACtC,GAAG,EAACsH,EAAE,CAAE,CAAEgB,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,eAAe,CAAEmB,EAAE,CAAE,CAAE,CAAE,CAAAlC,QAAA,eACnElF,KAAA,CAACrC,UAAU,EAACwH,OAAO,CAAC,OAAO,CAACmB,KAAK,CAAC,SAAS,CAAApB,QAAA,EAAC,mBAE1C,cAAApF,IAAA,SAAMuH,KAAK,CAAE,CACXf,KAAK,CAAE1C,wBAAwB,CAACb,IAAI,CAAC,CAAG,CAAC,CAAG,OAAO,CAC7Ca,wBAAwB,CAACb,IAAI,CAAC,CAAG,CAAC,CAAG,KAAK,CAAG,SACrD,CAAE,CAAAmC,QAAA,CACC,IAAItB,wBAAwB,CAACb,IAAI,CAAC,CAAG,CAAC,CAAG,GAAG,CAAG,EAAE,GAAGa,wBAAwB,CAACb,IAAI,CAAC,GAAG,CAClF,CAAC,EACG,CAAC,cACb/C,KAAA,CAACrC,UAAU,EAACwH,OAAO,CAAC,OAAO,CAACmB,KAAK,CAAC,SAAS,CAAApB,QAAA,EAAC,cAC9B,cAAAlF,KAAA,WAAAkF,QAAA,EAAQ,GAAC,CAACpB,sBAAsB,CAACf,IAAI,CAAC,EAAS,CAAC,EAClD,CAAC,EACV,CAAC,EACK,CAAC,EA9CTA,IAAI,CAACjC,EA+CN,CACP,CAAC,CACC,CACN,EACI,CAAC,CACJ,CAAC,cAGPhB,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBpF,IAAA,CAAClC,KAAK,EAACuH,OAAO,CAAC,UAAU,CAACH,EAAE,CAAE,CAAEC,CAAC,CAAE,CAAE,CAAE,CAAAC,QAAA,CACpCvE,YAAY,cACXX,KAAA,CAAAE,SAAA,EAAAgF,QAAA,eACElF,KAAA,CAACrC,UAAU,EAACwH,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAF,QAAA,EAAC,UAC5B,CAACvE,YAAY,CAACiB,IAAI,EAAI,cAAcjB,YAAY,CAACG,EAAE,EAAE,EACnD,CAAC,cAGbd,KAAA,CAACnC,IAAI,EAACyH,SAAS,MAACC,OAAO,CAAE,CAAE,CAACP,EAAE,CAAE,CAAEQ,EAAE,CAAE,CAAE,CAAE,CAAAN,QAAA,eACxCpF,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,iBAAiB,CACvBwB,KAAK,CAAE9B,YAAY,CAACiB,IAAI,EAAI,EAAG,CAC/B0F,QAAQ,CAAGP,CAAC,EAAK/D,cAAc,CAAC,MAAM,CAAE+D,CAAC,CAACQ,MAAM,CAAC9E,KAAK,CAAE,CACzD,CAAC,CACE,CAAC,cACP3C,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,eAAe,CACrBwB,KAAK,CAAE9B,YAAY,CAACO,IAAI,EAAI,EAAG,CAC/BoG,QAAQ,CAAGP,CAAC,EAAK/D,cAAc,CAAC,MAAM,CAAE+D,CAAC,CAACQ,MAAM,CAAC9E,KAAK,CAAE,CACzD,CAAC,CACE,CAAC,cACP3C,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAR,QAAA,cAChBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,SAAS,CACfwB,KAAK,CAAE9B,YAAY,CAACkB,OAAO,EAAI,EAAG,CAClCyF,QAAQ,CAAGP,CAAC,EAAK/D,cAAc,CAAC,SAAS,CAAE+D,CAAC,CAACQ,MAAM,CAAC9E,KAAK,CAAE,CAC5D,CAAC,CACE,CAAC,cACP3C,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,WAAW,CACjBC,IAAI,CAAC,MAAM,CACXsG,eAAe,CAAE,CAAEC,MAAM,CAAE,IAAK,CAAE,CAClChF,KAAK,CAAE9B,YAAY,CAACmB,QAAQ,EAAI,EAAG,CACnCwF,QAAQ,CAAGP,CAAC,EAAK/D,cAAc,CAAC,UAAU,CAAE+D,CAAC,CAACQ,MAAM,CAAC9E,KAAK,CAAE,CAC7D,CAAC,CACE,CAAC,cACP3C,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,YAAY,CAClBC,IAAI,CAAC,QAAQ,CACb2E,UAAU,CAAE,CAAE6B,cAAc,cAAE5H,IAAA,CAACd,cAAc,EAAC2I,QAAQ,CAAC,OAAO,CAAAzC,QAAA,CAAC,GAAC,CAAgB,CAAE,CAAE,CACpFzC,KAAK,CAAE9B,YAAY,CAACoB,SAAS,EAAI,EAAG,CACpCuF,QAAQ,CAAGP,CAAC,EAAK/D,cAAc,CAAC,WAAW,CAAE+D,CAAC,CAACQ,MAAM,CAAC9E,KAAK,CAAE,CAC9D,CAAC,CACE,CAAC,cACP3C,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,aAAa,CACnBC,IAAI,CAAC,QAAQ,CACbuB,KAAK,CAAE9B,YAAY,CAACsB,UAAU,EAAI,EAAG,CACrCqF,QAAQ,CAAGP,CAAC,EAAK/D,cAAc,CAAC,YAAY,CAAE+D,CAAC,CAACQ,MAAM,CAAC9E,KAAK,CAAE,CAC/D,CAAC,CACE,CAAC,cACP3C,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,cAAc,CACpB4E,UAAU,CAAE,CACV6B,cAAc,cAAE5H,IAAA,CAACd,cAAc,EAAC2I,QAAQ,CAAC,OAAO,CAAAzC,QAAA,CAAC,GAAC,CAAgB,CAAC,CACnEY,QAAQ,CAAE,IACZ,CAAE,CACFrD,KAAK,CAAE9B,YAAY,CAACqB,UAAU,EAAI,EAAG,CACtC,CAAC,CACE,CAAC,cACPlC,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,YAAY,CAClBC,IAAI,CAAC,QAAQ,CACbuB,KAAK,CAAE9B,YAAY,CAACuB,SAAS,EAAI,EAAG,CACpCoF,QAAQ,CAAGP,CAAC,EAAK/D,cAAc,CAAC,WAAW,CAAE+D,CAAC,CAACQ,MAAM,CAAC9E,KAAK,CAAE,CAC9D,CAAC,CACE,CAAC,cACP3C,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,sBAAsB,CAC5B4E,UAAU,CAAE,CACV6B,cAAc,cAAE5H,IAAA,CAACd,cAAc,EAAC2I,QAAQ,CAAC,OAAO,CAAAzC,QAAA,CAAC,GAAC,CAAgB,CAAC,CACnEY,QAAQ,CAAE,IACZ,CAAE,CACFrD,KAAK,CAAEqB,sBAAsB,CAACnD,YAAY,CAAE,CAC7C,CAAC,CACE,CAAC,cACPb,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAR,QAAA,cAChBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,aAAa,CACnB2G,SAAS,MACTC,IAAI,CAAE,CAAE,CACRpF,KAAK,CAAE9B,YAAY,CAACwB,WAAW,EAAI,EAAG,CACtCmF,QAAQ,CAAGP,CAAC,EAAK/D,cAAc,CAAC,aAAa,CAAE+D,CAAC,CAACQ,MAAM,CAAC9E,KAAK,CAAE,CAChE,CAAC,CACE,CAAC,EACH,CAAC,cAEP3C,IAAA,CAACvB,OAAO,EAACyG,EAAE,CAAE,CAAEwB,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cAG1B1G,IAAA,CAACnC,UAAU,EAACwH,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAF,QAAA,CAAC,aAEtC,CAAY,CAAC,cACbpF,IAAA,CAACnC,UAAU,EAACwH,OAAO,CAAC,OAAO,CAACE,SAAS,MAAAH,QAAA,CAAC,mHAEtC,CAAY,CAAC,CAGZrE,oBAAoB,CAACY,GAAG,CAAEc,QAAQ,eACjCvC,KAAA,CAACf,SAAS,EAER6I,QAAQ,CAAErH,gBAAgB,GAAK8B,QAAQ,CAACzB,EAAG,CAC3CwG,QAAQ,CAAEA,CAAA,GAAM5G,mBAAmB,CAACD,gBAAgB,GAAK8B,QAAQ,CAACzB,EAAE,CAAG,IAAI,CAAGyB,QAAQ,CAACzB,EAAE,CAAE,CAC3FkE,EAAE,CAAE,CAAEQ,EAAE,CAAE,CAAE,CAAE,CAAAN,QAAA,eAEdpF,IAAA,CAACZ,gBAAgB,EAAC6I,UAAU,cAAEjI,IAAA,CAACJ,cAAc,GAAE,CAAE,CAAAwF,QAAA,cAC/CpF,IAAA,CAACnC,UAAU,EAAAuH,QAAA,CAAE3C,QAAQ,CAACxB,KAAK,CAAa,CAAC,CACzB,CAAC,cACnBjB,IAAA,CAACX,gBAAgB,EAAA+F,QAAA,cACfpF,IAAA,CAAC3B,cAAc,EAAA+G,QAAA,cACblF,KAAA,CAAChC,KAAK,EAACqI,IAAI,CAAC,OAAO,CAAAnB,QAAA,eACjBpF,IAAA,CAAC1B,SAAS,EAAA8G,QAAA,cACRlF,KAAA,CAAC3B,QAAQ,EAAA6G,QAAA,eACPpF,IAAA,CAAC5B,SAAS,EAAAgH,QAAA,CAAC,YAAU,CAAW,CAAC,cACjCpF,IAAA,CAAC5B,SAAS,EAAC8J,KAAK,CAAC,OAAO,CAACC,KAAK,CAAC,OAAO,CAAA/C,QAAA,CAAC,WAAS,CAAW,CAAC,cAC5DpF,IAAA,CAAC5B,SAAS,EAAAgH,QAAA,CAAC,OAAK,CAAW,CAAC,EACpB,CAAC,CACF,CAAC,cACZpF,IAAA,CAAC7B,SAAS,EAAAiH,QAAA,CACP3C,QAAQ,CAACvB,MAAM,CAACS,GAAG,CAAEe,KAAK,EAAK,KAAA0F,qBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAC9B;AACA,KAAM,CAAAC,eAAe,CAAG,EAAAN,qBAAA,CAAAvH,YAAY,CAAC0B,WAAW,UAAA6F,qBAAA,kBAAAC,sBAAA,CAAxBD,qBAAA,CAA2B3F,QAAQ,CAACzB,EAAE,CAAC,UAAAqH,sBAAA,kBAAAC,sBAAA,CAAvCD,sBAAA,CAA0C3F,KAAK,CAAC1B,EAAE,CAAC,UAAAsH,sBAAA,iBAAnDA,sBAAA,CAAqD3F,KAAK,GAAI,CAAC,CACvF,KAAM,CAAAgG,eAAe,CAAG,EAAAJ,sBAAA,CAAA1H,YAAY,CAAC0B,WAAW,UAAAgG,sBAAA,kBAAAC,sBAAA,CAAxBD,sBAAA,CAA2B9F,QAAQ,CAACzB,EAAE,CAAC,UAAAwH,sBAAA,kBAAAC,sBAAA,CAAvCD,sBAAA,CAA0C9F,KAAK,CAAC1B,EAAE,CAAC,UAAAyH,sBAAA,iBAAnDA,sBAAA,CAAqD7F,KAAK,GAAI,EAAE,CAExF,mBACE1C,KAAA,CAAC3B,QAAQ,EAAA6G,QAAA,eACPpF,IAAA,CAAC5B,SAAS,EAAAgH,QAAA,CAAE1C,KAAK,CAACvB,KAAK,CAAY,CAAC,cACpCnB,IAAA,CAAC5B,SAAS,EAAC8J,KAAK,CAAC,OAAO,CAAA9C,QAAA,cACtBlF,KAAA,CAACtC,GAAG,EAACsH,EAAE,CAAE,CAAEgB,OAAO,CAAE,MAAM,CAAEE,UAAU,CAAE,QAAS,CAAE,CAAAhB,QAAA,eACjDpF,IAAA,CAACV,OAAO,EAAC2B,KAAK,CAAC,gBAAgB,CAAAmE,QAAA,cAC7BpF,IAAA,CAACxB,UAAU,EACT+H,IAAI,CAAC,OAAO,CACZD,OAAO,CAAEA,CAAA,GAAM,CACb,KAAM,CAAAsC,QAAQ,CAAGtF,UAAU,CAACoF,eAAe,CAAC,CAAG,CAAC,CAChDhF,gBAAgB,CAACjB,QAAQ,CAACzB,EAAE,CAAE0B,KAAK,CAAC1B,EAAE,CAAE,OAAO,CAAE4H,QAAQ,CAAC,CAC5D,CAAE,CAAAxD,QAAA,cAEFpF,IAAA,CAACF,iBAAiB,EAACqH,QAAQ,CAAC,OAAO,CAAE,CAAC,CAC5B,CAAC,CACN,CAAC,cACVnH,IAAA,CAAChC,SAAS,EACRuI,IAAI,CAAC,OAAO,CACZnF,IAAI,CAAC,QAAQ,CACbuB,KAAK,CAAE+F,eAAgB,CACvBlB,QAAQ,CAAGP,CAAC,EAAKvD,gBAAgB,CAACjB,QAAQ,CAACzB,EAAE,CAAE0B,KAAK,CAAC1B,EAAE,CAAE,OAAO,CAAEiG,CAAC,CAACQ,MAAM,CAAC9E,KAAK,CAAE,CAClFoD,UAAU,CAAE,CACV8C,YAAY,cAAE7I,IAAA,CAACd,cAAc,EAAC2I,QAAQ,CAAC,KAAK,CAAAzC,QAAA,CAAC,GAAC,CAAgB,CAAC,CAC/D0D,UAAU,CAAE,CACVvB,KAAK,CAAE,CAAEd,SAAS,CAAE,OAAQ,CAAC,CAC7BsC,IAAI,CAAE,GACR,CACF,CAAE,CACF7D,EAAE,CAAE,CAAEiD,KAAK,CAAE,MAAM,CAAE,SAAS,CAAE,CAAE1B,SAAS,CAAE,OAAQ,CAAE,CAAE,CAC1D,CAAC,cACFzG,IAAA,CAACV,OAAO,EAAC2B,KAAK,CAAC,gBAAgB,CAAAmE,QAAA,cAC7BpF,IAAA,CAACxB,UAAU,EACT+H,IAAI,CAAC,OAAO,CACZD,OAAO,CAAEA,CAAA,GAAM,CACb,KAAM,CAAAsC,QAAQ,CAAGtF,UAAU,CAACoF,eAAe,CAAC,CAAG,CAAC,CAChDhF,gBAAgB,CAACjB,QAAQ,CAACzB,EAAE,CAAE0B,KAAK,CAAC1B,EAAE,CAAE,OAAO,CAAE4H,QAAQ,CAAC,CAC5D,CAAE,CAAAxD,QAAA,cAEFpF,IAAA,CAACH,eAAe,EAACsH,QAAQ,CAAC,OAAO,CAAE,CAAC,CAC1B,CAAC,CACN,CAAC,EACP,CAAC,CACG,CAAC,cACZnH,IAAA,CAAC5B,SAAS,EAAAgH,QAAA,cACRpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACTS,IAAI,CAAC,OAAO,CACZyC,WAAW,CAAC,8BAA8B,CAC1CrG,KAAK,CAAEgG,eAAgB,CACvBnB,QAAQ,CAAGP,CAAC,EAAKvD,gBAAgB,CAACjB,QAAQ,CAACzB,EAAE,CAAE0B,KAAK,CAAC1B,EAAE,CAAE,OAAO,CAAEiG,CAAC,CAACQ,MAAM,CAAC9E,KAAK,CAAE,CACnF,CAAC,CACO,CAAC,GAlDCD,KAAK,CAAC1B,EAmDX,CAAC,CAEf,CAAC,CAAC,CACO,CAAC,EACP,CAAC,CACM,CAAC,CACD,CAAC,GAlFdyB,QAAQ,CAACzB,EAmFL,CACZ,CAAC,cAGFd,KAAA,CAACtC,GAAG,EAACsH,EAAE,CAAE,CAAEoC,EAAE,CAAE,CAAC,CAAEnC,CAAC,CAAE,CAAC,CAAE8D,OAAO,CAAE,kBAAkB,CAAEC,YAAY,CAAE,CAAE,CAAE,CAAA9D,QAAA,eACrEpF,IAAA,CAACnC,UAAU,EAACwH,OAAO,CAAC,WAAW,CAACC,YAAY,MAAAF,QAAA,CAAC,oBAE7C,CAAY,CAAC,cACblF,KAAA,CAACnC,IAAI,EAACyH,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAL,QAAA,eACzBpF,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,mBAAmB,CACzB4E,UAAU,CAAE,CACV6B,cAAc,cAAE5H,IAAA,CAACd,cAAc,EAAC2I,QAAQ,CAAC,OAAO,CAAAzC,QAAA,CAAC,GAAC,CAAgB,CAAC,CACnEY,QAAQ,CAAE,IACZ,CAAE,CACFrD,KAAK,CAAE9B,YAAY,CAACqB,UAAU,EAAI,MAAO,CAC1C,CAAC,CACE,CAAC,cACPlC,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,kBAAkB,CACxB4E,UAAU,CAAE,CACV8C,YAAY,cAAE7I,IAAA,CAACd,cAAc,EAAC2I,QAAQ,CAAC,KAAK,CAAAzC,QAAA,CAAC,GAAC,CAAgB,CAAC,CAC/DY,QAAQ,CAAE,IACZ,CAAE,CACFrD,KAAK,CAAEmB,wBAAwB,CAACjD,YAAY,CAAE,CAC/C,CAAC,CACE,CAAC,cACPb,IAAA,CAACjC,IAAI,EAAC4H,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAT,QAAA,cACvBpF,IAAA,CAAChC,SAAS,EACR8H,SAAS,MACT3E,KAAK,CAAC,uBAAuB,CAC7B4E,UAAU,CAAE,CACV6B,cAAc,cAAE5H,IAAA,CAACd,cAAc,EAAC2I,QAAQ,CAAC,OAAO,CAAAzC,QAAA,CAAC,GAAC,CAAgB,CAAC,CACnEY,QAAQ,CAAE,IACZ,CAAE,CACFrD,KAAK,CAAEqB,sBAAsB,CAACnD,YAAY,CAAE,CAC7C,CAAC,CACE,CAAC,EACH,CAAC,EACJ,CAAC,EACN,CAAC,cAEHb,IAAA,CAACpC,GAAG,EAACsH,EAAE,CAAE,CAAEC,CAAC,CAAE,CAAC,CAAEsB,SAAS,CAAE,QAAS,CAAE,CAAArB,QAAA,cACrCpF,IAAA,CAACnC,UAAU,EAACwH,OAAO,CAAC,OAAO,CAACmB,KAAK,CAAC,gBAAgB,CAAApB,QAAA,CAAC,4GAGnD,CAAY,CAAC,CACV,CACN,CACI,CAAC,CACJ,CAAC,EACH,CAAC,EACF,CAAC,CAEZ,CAAC,CAED,cAAe,CAAA/E,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}