{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sures\\\\Desktop\\\\Valuelyst\\\\client\\\\src\\\\pages\\\\DebtStructures.jsx\";\nimport React, { useState } from 'react';\nimport { Box, Typography, Paper, Grid, TextField, InputAdornment, Button, Divider, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DebtStructures = ({\n  formik\n}) => {\n  // Function to add a new loan/debt to the property\n  const addDebtItem = () => {\n    const debts = [...(formik.values.debtStructures || [])];\n    debts.push({\n      lender: '',\n      loanType: '',\n      originalAmount: '',\n      currentBalance: '',\n      interestRate: '',\n      amortizationTerm: '',\n      maturityDate: '',\n      monthlyPayment: '',\n      isInterestOnly: false\n    });\n    formik.setFieldValue('debtStructures', debts);\n  };\n\n  // Function to remove a debt item\n  const removeDebtItem = index => {\n    const debts = [...(formik.values.debtStructures || [])];\n    debts.splice(index, 1);\n    formik.setFieldValue('debtStructures', debts);\n  };\n\n  // Function to handle changes to debt structure fields\n  const handleDebtItemChange = (index, field, value) => {\n    const debts = [...(formik.values.debtStructures || [])];\n    debts[index][field] = value;\n\n    // Calculate monthly payment if enough data is available\n    if (['currentBalance', 'interestRate', 'amortizationTerm'].includes(field)) {\n      const principal = parseFloat(debts[index].currentBalance) || 0;\n      const annualRate = parseFloat(debts[index].interestRate) || 0;\n      const amortizationMonths = parseFloat(debts[index].amortizationTerm) * 12 || 0;\n      const isInterestOnly = debts[index].isInterestOnly;\n      if (principal > 0 && annualRate > 0 && amortizationMonths > 0 && !isInterestOnly) {\n        // Calculate monthly payment using the mortgage payment formula\n        const monthlyRate = annualRate / 100 / 12;\n        const payment = principal * (monthlyRate * Math.pow(1 + monthlyRate, amortizationMonths)) / (Math.pow(1 + monthlyRate, amortizationMonths) - 1);\n        debts[index].monthlyPayment = payment.toFixed(2);\n      } else if (principal > 0 && annualRate > 0 && isInterestOnly) {\n        // Interest only payment\n        const monthlyRate = annualRate / 100 / 12;\n        const payment = principal * monthlyRate;\n        debts[index].monthlyPayment = payment.toFixed(2);\n      }\n    }\n\n    // Handle interest-only toggle\n    if (field === 'isInterestOnly') {\n      const principal = parseFloat(debts[index].currentBalance) || 0;\n      const annualRate = parseFloat(debts[index].interestRate) || 0;\n      if (value && principal > 0 && annualRate > 0) {\n        // Interest only payment\n        const monthlyRate = annualRate / 100 / 12;\n        const payment = principal * monthlyRate;\n        debts[index].monthlyPayment = payment.toFixed(2);\n      } else if (!value && principal > 0 && annualRate > 0) {\n        const amortizationMonths = parseFloat(debts[index].amortizationTerm) * 12 || 0;\n        if (amortizationMonths > 0) {\n          // Amortizing payment\n          const monthlyRate = annualRate / 100 / 12;\n          const payment = principal * (monthlyRate * Math.pow(1 + monthlyRate, amortizationMonths)) / (Math.pow(1 + monthlyRate, amortizationMonths) - 1);\n          debts[index].monthlyPayment = payment.toFixed(2);\n        }\n      }\n    }\n    formik.setFieldValue('debtStructures', debts);\n  };\n\n  // Calculate total debt and debt metrics\n  const calculateTotalDebt = () => {\n    const debts = formik.values.debtStructures || [];\n    return debts.reduce((total, debt) => total + parseFloat(debt.currentBalance || 0), 0).toFixed(2);\n  };\n  const calculateTotalAnnualDebtService = () => {\n    const debts = formik.values.debtStructures || [];\n    const monthlyTotal = debts.reduce((total, debt) => total + parseFloat(debt.monthlyPayment || 0), 0);\n    return (monthlyTotal * 12).toFixed(2);\n  };\n  const calculateDebtServiceCoverageRatio = () => {\n    const noi = parseFloat(formik.values.netOperatingIncome || 0);\n    const annualDebtService = parseFloat(calculateTotalAnnualDebtService());\n    if (annualDebtService === 0) return 'N/A';\n    return (noi / annualDebtService).toFixed(2);\n  };\n  const calculateLoanToValue = () => {\n    const totalDebt = parseFloat(calculateTotalDebt());\n    const propertyValue = parseFloat(formik.values.estimatedValue || 0);\n    if (propertyValue === 0) return 'N/A';\n    return (totalDebt / propertyValue * 100).toFixed(2) + '%';\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Debt Structures\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      paragraph: true,\n      children: \"Add details about existing debt and financing on the property.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"estimatedValue\",\n          name: \"estimatedValue\",\n          label: \"Estimated Property Value\",\n          type: \"number\",\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: \"$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 43\n            }, this)\n          },\n          value: formik.values.estimatedValue || '',\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"netOperatingIncome\",\n          name: \"netOperatingIncome\",\n          label: \"Net Operating Income (NOI)\",\n          type: \"number\",\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: \"$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 43\n            }, this)\n          },\n          value: formik.values.netOperatingIncome || '',\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            my: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Financing Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 26\n            }, this),\n            onClick: addDebtItem,\n            children: \"Add Loan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), (formik.values.debtStructures || []).length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          align: \"center\",\n          sx: {\n            my: 2\n          },\n          children: \"No debt items added. Click \\\"Add Loan\\\" to add property financing details.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Lender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Loan Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Current Balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Rate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Amort. Term (Years)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Maturity Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Monthly Payment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: (formik.values.debtStructures || []).map((debt, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    size: \"small\",\n                    value: debt.lender || '',\n                    onChange: e => handleDebtItemChange(index, 'lender', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    size: \"small\",\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      value: debt.loanType || '',\n                      onChange: e => handleDebtItemChange(index, 'loanType', e.target.value),\n                      displayEmpty: true,\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"\",\n                        children: /*#__PURE__*/_jsxDEV(\"em\", {\n                          children: \"Select Type\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 220,\n                          columnNumber: 48\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"conventional\",\n                        children: \"Conventional\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"construction\",\n                        children: \"Construction\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"bridge\",\n                        children: \"Bridge\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"mezzanine\",\n                        children: \"Mezzanine\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"cmbs\",\n                        children: \"CMBS\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"agency\",\n                        children: \"Agency\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"other\",\n                        children: \"Other\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    size: \"small\",\n                    type: \"number\",\n                    InputProps: {\n                      startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"start\",\n                        children: \"$\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 57\n                      }, this)\n                    },\n                    value: debt.currentBalance || '',\n                    onChange: e => handleDebtItemChange(index, 'currentBalance', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    size: \"small\",\n                    type: \"number\",\n                    InputProps: {\n                      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"end\",\n                        children: \"%\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 55\n                      }, this)\n                    },\n                    value: debt.interestRate || '',\n                    onChange: e => handleDebtItemChange(index, 'interestRate', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    size: \"small\",\n                    type: \"number\",\n                    value: debt.amortizationTerm || '',\n                    onChange: e => handleDebtItemChange(index, 'amortizationTerm', e.target.value),\n                    disabled: debt.isInterestOnly\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    size: \"small\",\n                    type: \"date\",\n                    InputLabelProps: {\n                      shrink: true\n                    },\n                    value: debt.maturityDate || '',\n                    onChange: e => handleDebtItemChange(index, 'maturityDate', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    size: \"small\",\n                    type: \"number\",\n                    InputProps: {\n                      startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"start\",\n                        children: \"$\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 276,\n                        columnNumber: 57\n                      }, this)\n                    },\n                    value: debt.monthlyPayment || '',\n                    onChange: e => handleDebtItemChange(index, 'monthlyPayment', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: () => removeDebtItem(index),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            my: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Debt Metrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Total Debt\",\n              value: `$${calculateTotalDebt()}`,\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Annual Debt Service\",\n              value: `$${calculateTotalAnnualDebtService()}`,\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Debt Service Coverage Ratio\",\n              value: calculateDebtServiceCoverageRatio(),\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Loan to Value (LTV)\",\n              value: calculateLoanToValue(),\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"debtNotes\",\n          name: \"debtNotes\",\n          label: \"Debt & Financing Notes\",\n          multiline: true,\n          rows: 3,\n          value: formik.values.debtNotes || '',\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_c = DebtStructures;\nexport default DebtStructures;\nvar _c;\n$RefreshReg$(_c, \"DebtStructures\");","map":{"version":3,"names":["React","useState","Box","Typography","Paper","Grid","TextField","InputAdornment","Button","Divider","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","FormControl","InputLabel","Select","MenuItem","AddIcon","DeleteIcon","jsxDEV","_jsxDEV","DebtStructures","formik","addDebtItem","debts","values","debtStructures","push","lender","loanType","originalAmount","currentBalance","interestRate","amortizationTerm","maturityDate","monthlyPayment","isInterestOnly","setFieldValue","removeDebtItem","index","splice","handleDebtItemChange","field","value","includes","principal","parseFloat","annualRate","amortizationMonths","monthlyRate","payment","Math","pow","toFixed","calculateTotalDebt","reduce","total","debt","calculateTotalAnnualDebtService","monthlyTotal","calculateDebtServiceCoverageRatio","noi","netOperatingIncome","annualDebtService","calculateLoanToValue","totalDebt","propertyValue","estimatedValue","elevation","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","paragraph","container","spacing","item","xs","md","fullWidth","id","name","label","type","InputProps","startAdornment","position","onChange","handleChange","disabled","my","display","justifyContent","alignItems","mb","startIcon","onClick","length","color","align","map","size","e","target","displayEmpty","endAdornment","InputLabelProps","shrink","readOnly","multiline","rows","debtNotes","_c","$RefreshReg$"],"sources":["C:/Users/sures/Desktop/Valuelyst/client/src/pages/DebtStructures.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Grid,\n  TextField,\n  InputAdornment,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst DebtStructures = ({ formik }) => {\n  // Function to add a new loan/debt to the property\n  const addDebtItem = () => {\n    const debts = [...(formik.values.debtStructures || [])];\n    debts.push({\n      lender: '',\n      loanType: '',\n      originalAmount: '',\n      currentBalance: '',\n      interestRate: '',\n      amortizationTerm: '',\n      maturityDate: '',\n      monthlyPayment: '',\n      isInterestOnly: false\n    });\n    formik.setFieldValue('debtStructures', debts);\n  };\n\n  // Function to remove a debt item\n  const removeDebtItem = (index) => {\n    const debts = [...(formik.values.debtStructures || [])];\n    debts.splice(index, 1);\n    formik.setFieldValue('debtStructures', debts);\n  };\n\n  // Function to handle changes to debt structure fields\n  const handleDebtItemChange = (index, field, value) => {\n    const debts = [...(formik.values.debtStructures || [])];\n    debts[index][field] = value;\n    \n    // Calculate monthly payment if enough data is available\n    if (['currentBalance', 'interestRate', 'amortizationTerm'].includes(field)) {\n      const principal = parseFloat(debts[index].currentBalance) || 0;\n      const annualRate = parseFloat(debts[index].interestRate) || 0;\n      const amortizationMonths = parseFloat(debts[index].amortizationTerm) * 12 || 0;\n      const isInterestOnly = debts[index].isInterestOnly;\n      \n      if (principal > 0 && annualRate > 0 && amortizationMonths > 0 && !isInterestOnly) {\n        // Calculate monthly payment using the mortgage payment formula\n        const monthlyRate = (annualRate / 100) / 12;\n        const payment = principal * (monthlyRate * Math.pow(1 + monthlyRate, amortizationMonths)) / \n                      (Math.pow(1 + monthlyRate, amortizationMonths) - 1);\n        debts[index].monthlyPayment = payment.toFixed(2);\n      } else if (principal > 0 && annualRate > 0 && isInterestOnly) {\n        // Interest only payment\n        const monthlyRate = (annualRate / 100) / 12;\n        const payment = principal * monthlyRate;\n        debts[index].monthlyPayment = payment.toFixed(2);\n      }\n    }\n    \n    // Handle interest-only toggle\n    if (field === 'isInterestOnly') {\n      const principal = parseFloat(debts[index].currentBalance) || 0;\n      const annualRate = parseFloat(debts[index].interestRate) || 0;\n      \n      if (value && principal > 0 && annualRate > 0) {\n        // Interest only payment\n        const monthlyRate = (annualRate / 100) / 12;\n        const payment = principal * monthlyRate;\n        debts[index].monthlyPayment = payment.toFixed(2);\n      } else if (!value && principal > 0 && annualRate > 0) {\n        const amortizationMonths = parseFloat(debts[index].amortizationTerm) * 12 || 0;\n        if (amortizationMonths > 0) {\n          // Amortizing payment\n          const monthlyRate = (annualRate / 100) / 12;\n          const payment = principal * (monthlyRate * Math.pow(1 + monthlyRate, amortizationMonths)) / \n                        (Math.pow(1 + monthlyRate, amortizationMonths) - 1);\n          debts[index].monthlyPayment = payment.toFixed(2);\n        }\n      }\n    }\n    \n    formik.setFieldValue('debtStructures', debts);\n  };\n\n  // Calculate total debt and debt metrics\n  const calculateTotalDebt = () => {\n    const debts = formik.values.debtStructures || [];\n    return debts.reduce((total, debt) => total + parseFloat(debt.currentBalance || 0), 0).toFixed(2);\n  };\n\n  const calculateTotalAnnualDebtService = () => {\n    const debts = formik.values.debtStructures || [];\n    const monthlyTotal = debts.reduce(\n      (total, debt) => total + parseFloat(debt.monthlyPayment || 0), 0\n    );\n    return (monthlyTotal * 12).toFixed(2);\n  };\n\n  const calculateDebtServiceCoverageRatio = () => {\n    const noi = parseFloat(formik.values.netOperatingIncome || 0);\n    const annualDebtService = parseFloat(calculateTotalAnnualDebtService());\n    if (annualDebtService === 0) return 'N/A';\n    return (noi / annualDebtService).toFixed(2);\n  };\n\n  const calculateLoanToValue = () => {\n    const totalDebt = parseFloat(calculateTotalDebt());\n    const propertyValue = parseFloat(formik.values.estimatedValue || 0);\n    if (propertyValue === 0) return 'N/A';\n    return ((totalDebt / propertyValue) * 100).toFixed(2) + '%';\n  };\n\n  return (\n    <Paper elevation={3} sx={{ p: 3 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Debt Structures\n      </Typography>\n      <Typography variant=\"body2\" paragraph>\n        Add details about existing debt and financing on the property.\n      </Typography>\n\n      <Grid container spacing={3}>\n        {/* Property Value Input */}\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            id=\"estimatedValue\"\n            name=\"estimatedValue\"\n            label=\"Estimated Property Value\"\n            type=\"number\"\n            InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n            value={formik.values.estimatedValue || ''}\n            onChange={formik.handleChange}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            id=\"netOperatingIncome\"\n            name=\"netOperatingIncome\"\n            label=\"Net Operating Income (NOI)\"\n            type=\"number\"\n            InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n            value={formik.values.netOperatingIncome || ''}\n            disabled\n          />\n        </Grid>\n\n        {/* Debt Structures Section */}\n        <Grid item xs={12}>\n          <Divider sx={{ my: 2 }} />\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n            <Typography variant=\"h6\">\n              Financing Details\n            </Typography>\n            <Button \n              variant=\"contained\" \n              startIcon={<AddIcon />}\n              onClick={addDebtItem}\n            >\n              Add Loan\n            </Button>\n          </Box>\n          \n          {(formik.values.debtStructures || []).length === 0 ? (\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ my: 2 }}>\n              No debt items added. Click \"Add Loan\" to add property financing details.\n            </Typography>\n          ) : (\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Lender</TableCell>\n                    <TableCell>Loan Type</TableCell>\n                    <TableCell>Current Balance</TableCell>\n                    <TableCell>Rate</TableCell>\n                    <TableCell>Amort. Term (Years)</TableCell>\n                    <TableCell>Maturity Date</TableCell>\n                    <TableCell>Monthly Payment</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {(formik.values.debtStructures || []).map((debt, index) => (\n                    <TableRow key={index}>\n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          value={debt.lender || ''}\n                          onChange={(e) => handleDebtItemChange(index, 'lender', e.target.value)}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <FormControl fullWidth size=\"small\">\n                          <Select\n                            value={debt.loanType || ''}\n                            onChange={(e) => handleDebtItemChange(index, 'loanType', e.target.value)}\n                            displayEmpty\n                          >\n                            <MenuItem value=\"\"><em>Select Type</em></MenuItem>\n                            <MenuItem value=\"conventional\">Conventional</MenuItem>\n                            <MenuItem value=\"construction\">Construction</MenuItem>\n                            <MenuItem value=\"bridge\">Bridge</MenuItem>\n                            <MenuItem value=\"mezzanine\">Mezzanine</MenuItem>\n                            <MenuItem value=\"cmbs\">CMBS</MenuItem>\n                            <MenuItem value=\"agency\">Agency</MenuItem>\n                            <MenuItem value=\"other\">Other</MenuItem>\n                          </Select>\n                        </FormControl>\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"number\"\n                          InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                          value={debt.currentBalance || ''}\n                          onChange={(e) => handleDebtItemChange(index, 'currentBalance', e.target.value)}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"number\"\n                          InputProps={{ endAdornment: <InputAdornment position=\"end\">%</InputAdornment> }}\n                          value={debt.interestRate || ''}\n                          onChange={(e) => handleDebtItemChange(index, 'interestRate', e.target.value)}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"number\"\n                          value={debt.amortizationTerm || ''}\n                          onChange={(e) => handleDebtItemChange(index, 'amortizationTerm', e.target.value)}\n                          disabled={debt.isInterestOnly}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"date\"\n                          InputLabelProps={{ shrink: true }}\n                          value={debt.maturityDate || ''}\n                          onChange={(e) => handleDebtItemChange(index, 'maturityDate', e.target.value)}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          fullWidth\n                          size=\"small\"\n                          type=\"number\"\n                          InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                          value={debt.monthlyPayment || ''}\n                          onChange={(e) => handleDebtItemChange(index, 'monthlyPayment', e.target.value)}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <IconButton\n                          size=\"small\"\n                          onClick={() => removeDebtItem(index)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </Grid>\n\n        {/* Debt Metrics Summary */}\n        <Grid item xs={12}>\n          <Divider sx={{ my: 2 }} />\n          <Typography variant=\"h6\" gutterBottom>\n            Debt Metrics\n          </Typography>\n          \n          <Grid container spacing={2}>\n            <Grid item xs={12} md={3}>\n              <TextField\n                fullWidth\n                label=\"Total Debt\"\n                value={`$${calculateTotalDebt()}`}\n                InputProps={{ readOnly: true }}\n              />\n            </Grid>\n            \n            <Grid item xs={12} md={3}>\n              <TextField\n                fullWidth\n                label=\"Annual Debt Service\"\n                value={`$${calculateTotalAnnualDebtService()}`}\n                InputProps={{ readOnly: true }}\n              />\n            </Grid>\n            \n            <Grid item xs={12} md={3}>\n              <TextField\n                fullWidth\n                label=\"Debt Service Coverage Ratio\"\n                value={calculateDebtServiceCoverageRatio()}\n                InputProps={{ readOnly: true }}\n              />\n            </Grid>\n            \n            <Grid item xs={12} md={3}>\n              <TextField\n                fullWidth\n                label=\"Loan to Value (LTV)\"\n                value={calculateLoanToValue()}\n                InputProps={{ readOnly: true }}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        {/* Additional Notes */}\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            id=\"debtNotes\"\n            name=\"debtNotes\"\n            label=\"Debt & Financing Notes\"\n            multiline\n            rows={3}\n            value={formik.values.debtNotes || ''}\n            onChange={formik.handleChange}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default DebtStructures;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}