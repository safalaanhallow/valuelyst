{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sures\\\\Desktop\\\\Valuelyst\\\\client\\\\src\\\\pages\\\\AdjustmentsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Paper, Grid, TextField, Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton, Divider, Card, CardContent, CardMedia, CardActions, Select, MenuItem, FormControl, InputLabel, InputAdornment, Accordion, AccordionSummary, AccordionDetails, Tooltip } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdjustmentsPage = ({\n  formik\n}) => {\n  _s();\n  // State for expanded adjustment categories\n  const [expandedCategory, setExpandedCategory] = useState(null);\n  // State for the selected comp to adjust\n  const [selectedComp, setSelectedComp] = useState(null);\n\n  // Define the adjustment categories and their fields\n  const adjustmentCategories = [{\n    id: 'market',\n    title: 'Market Conditions',\n    fields: [{\n      id: 'timeAdjustment',\n      label: 'Time/Date of Sale',\n      type: 'percentage'\n    }, {\n      id: 'marketTrends',\n      label: 'Market Trends',\n      type: 'percentage'\n    }, {\n      id: 'economicChanges',\n      label: 'Economic Changes',\n      type: 'percentage'\n    }]\n  }, {\n    id: 'location',\n    title: 'Location',\n    fields: [{\n      id: 'neighborhood',\n      label: 'Neighborhood',\n      type: 'percentage'\n    }, {\n      id: 'accessibility',\n      label: 'Accessibility',\n      type: 'percentage'\n    }, {\n      id: 'visibility',\n      label: 'Visibility',\n      type: 'percentage'\n    }, {\n      id: 'cornerInfluence',\n      label: 'Corner Influence',\n      type: 'percentage'\n    }]\n  }, {\n    id: 'physical',\n    title: 'Physical Characteristics',\n    fields: [{\n      id: 'size',\n      label: 'Size/SF',\n      type: 'percentage'\n    }, {\n      id: 'landToBuilding',\n      label: 'Land to Building Ratio',\n      type: 'percentage'\n    }, {\n      id: 'age',\n      label: 'Age/Condition',\n      type: 'percentage'\n    }, {\n      id: 'construction',\n      label: 'Construction Quality',\n      type: 'percentage'\n    }, {\n      id: 'functionality',\n      label: 'Functionality',\n      type: 'percentage'\n    }, {\n      id: 'parking',\n      label: 'Parking Ratio',\n      type: 'percentage'\n    }, {\n      id: 'amenities',\n      label: 'Amenities',\n      type: 'percentage'\n    }]\n  }, {\n    id: 'economic',\n    title: 'Economic Characteristics',\n    fields: [{\n      id: 'occupancyRate',\n      label: 'Occupancy Rate',\n      type: 'percentage'\n    }, {\n      id: 'tenantQuality',\n      label: 'Tenant Quality',\n      type: 'percentage'\n    }, {\n      id: 'leaseTerms',\n      label: 'Lease Terms',\n      type: 'percentage'\n    }, {\n      id: 'incomeStability',\n      label: 'Income Stability',\n      type: 'percentage'\n    }, {\n      id: 'expenseRatio',\n      label: 'Expense Ratio',\n      type: 'percentage'\n    }]\n  }, {\n    id: 'legal',\n    title: 'Legal & Zoning',\n    fields: [{\n      id: 'zoning',\n      label: 'Zoning',\n      type: 'percentage'\n    }, {\n      id: 'entitlements',\n      label: 'Entitlements',\n      type: 'percentage'\n    }, {\n      id: 'environmentalIssues',\n      label: 'Environmental Issues',\n      type: 'percentage'\n    }]\n  }, {\n    id: 'other',\n    title: 'Other Adjustments',\n    fields: [{\n      id: 'custom1',\n      label: 'Custom Adjustment 1',\n      type: 'percentage'\n    }, {\n      id: 'custom2',\n      label: 'Custom Adjustment 2',\n      type: 'percentage'\n    }]\n  }];\n\n  // Function to add a new comp to adjust\n  const addComp = () => {\n    const comps = [...(formik.values.comps || [])];\n    const newCompId = comps.length > 0 ? Math.max(...comps.map(c => c.id)) + 1 : 1;\n\n    // Create a new blank comp with empty adjustment values\n    const newComp = {\n      id: newCompId,\n      name: `Comparable ${newCompId}`,\n      address: '',\n      saleDate: '',\n      salePrice: '',\n      pricePerSF: '',\n      squareFeet: '',\n      yearBuilt: '',\n      type: '',\n      description: '',\n      image: '',\n      adjustments: {}\n    };\n\n    // Initialize all adjustment categories and fields\n    adjustmentCategories.forEach(category => {\n      newComp.adjustments[category.id] = {};\n      category.fields.forEach(field => {\n        newComp.adjustments[category.id][field.id] = {\n          value: 0,\n          notes: ''\n        };\n      });\n    });\n    comps.push(newComp);\n    formik.setFieldValue('comps', comps);\n    setSelectedComp(newComp);\n  };\n\n  // Function to remove a comp\n  const removeComp = id => {\n    const comps = formik.values.comps.filter(comp => comp.id !== id);\n    formik.setFieldValue('comps', comps);\n    if (selectedComp && selectedComp.id === id) {\n      setSelectedComp(comps.length > 0 ? comps[0] : null);\n    }\n  };\n\n  // Function to update a comp's basic info\n  const updateCompInfo = (field, value) => {\n    if (!selectedComp) return;\n    const comps = [...(formik.values.comps || [])];\n    const compIndex = comps.findIndex(comp => comp.id === selectedComp.id);\n    if (compIndex >= 0) {\n      comps[compIndex] = {\n        ...comps[compIndex],\n        [field]: value\n      };\n\n      // Auto-calculate price per SF if both price and SF are available\n      if (field === 'salePrice' || field === 'squareFeet') {\n        const price = field === 'salePrice' ? parseFloat(value) : parseFloat(comps[compIndex].salePrice);\n        const sf = field === 'squareFeet' ? parseFloat(value) : parseFloat(comps[compIndex].squareFeet);\n        if (!isNaN(price) && !isNaN(sf) && sf > 0) {\n          comps[compIndex].pricePerSF = (price / sf).toFixed(2);\n        }\n      }\n      formik.setFieldValue('comps', comps);\n      setSelectedComp(comps[compIndex]);\n    }\n  };\n\n  // Function to update an adjustment value\n  const updateAdjustment = (categoryId, fieldId, subField, value) => {\n    if (!selectedComp) return;\n    const comps = [...(formik.values.comps || [])];\n    const compIndex = comps.findIndex(comp => comp.id === selectedComp.id);\n    if (compIndex >= 0) {\n      // Ensure the adjustment structure exists\n      if (!comps[compIndex].adjustments) {\n        comps[compIndex].adjustments = {};\n      }\n      if (!comps[compIndex].adjustments[categoryId]) {\n        comps[compIndex].adjustments[categoryId] = {};\n      }\n      if (!comps[compIndex].adjustments[categoryId][fieldId]) {\n        comps[compIndex].adjustments[categoryId][fieldId] = {\n          value: 0,\n          notes: ''\n        };\n      }\n\n      // Update the specified subfield (value or notes)\n      comps[compIndex].adjustments[categoryId][fieldId][subField] = value;\n      formik.setFieldValue('comps', comps);\n      setSelectedComp(comps[compIndex]);\n    }\n  };\n\n  // Calculate the total adjustment percentage for a comp\n  const calculateTotalAdjustment = comp => {\n    if (!comp || !comp.adjustments) return 0;\n    let totalAdjustment = 0;\n\n    // Sum up all adjustment values across all categories\n    adjustmentCategories.forEach(category => {\n      if (comp.adjustments[category.id]) {\n        category.fields.forEach(field => {\n          if (comp.adjustments[category.id][field.id]) {\n            totalAdjustment += parseFloat(comp.adjustments[category.id][field.id].value || 0);\n          }\n        });\n      }\n    });\n    return totalAdjustment;\n  };\n\n  // Calculate the adjusted value for a comp\n  const calculateAdjustedValue = comp => {\n    if (!comp || !comp.pricePerSF) return 0;\n    const baseValue = parseFloat(comp.pricePerSF);\n    if (isNaN(baseValue)) return 0;\n    const totalAdjustmentPercent = calculateTotalAdjustment(comp);\n    const adjustmentMultiplier = 1 + totalAdjustmentPercent / 100;\n    return (baseValue * adjustmentMultiplier).toFixed(2);\n  };\n\n  // Calculate overall statistics for adjusted values\n  const calculateStatistics = () => {\n    const comps = formik.values.comps || [];\n    if (comps.length === 0) {\n      return {\n        min: 0,\n        max: 0,\n        average: 0,\n        median: 0\n      };\n    }\n    const adjustedValues = comps.map(comp => parseFloat(calculateAdjustedValue(comp)));\n    const sortedValues = [...adjustedValues].sort((a, b) => a - b);\n    const min = Math.min(...adjustedValues);\n    const max = Math.max(...adjustedValues);\n    const sum = adjustedValues.reduce((a, b) => a + b, 0);\n    const average = sum / adjustedValues.length;\n\n    // Calculate median\n    let median;\n    if (sortedValues.length % 2 === 0) {\n      median = (sortedValues[sortedValues.length / 2 - 1] + sortedValues[sortedValues.length / 2]) / 2;\n    } else {\n      median = sortedValues[Math.floor(sortedValues.length / 2)];\n    }\n    return {\n      min,\n      max,\n      average,\n      median\n    };\n  };\n\n  // If the comps array is empty or not initialized, set it to an empty array\n  useEffect(() => {\n    if (!formik.values.comps) {\n      formik.setFieldValue('comps', []);\n    } else if (formik.values.comps.length > 0 && !selectedComp) {\n      // Auto-select the first comp if none is selected\n      setSelectedComp(formik.values.comps[0]);\n    }\n  }, [formik.values.comps]);\n\n  // Statistics for the adjusted values\n  const stats = calculateStatistics();\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Comparable Properties Adjustments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      paragraph: true,\n      children: \"Add comparable properties and make adjustments to calculate the subject property value.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Min Adjusted Value (PSF)\",\n          value: `$${stats.min.toFixed(2)}`,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Max Adjusted Value (PSF)\",\n          value: `$${stats.max.toFixed(2)}`,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Average Adjusted Value (PSF)\",\n          value: `$${stats.average.toFixed(2)}`,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Median Adjusted Value (PSF)\",\n          value: `$${stats.median.toFixed(2)}`,\n          InputProps: {\n            readOnly: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          variant: \"outlined\",\n          sx: {\n            p: 2,\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Comparable Properties\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 28\n              }, this),\n              onClick: addComp,\n              size: \"small\",\n              children: \"Add Comp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), (formik.values.comps || []).length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            sx: {\n              textAlign: 'center',\n              my: 4\n            },\n            children: \"No comparable properties added yet. Click \\\"Add Comp\\\" to get started.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              maxHeight: '500px',\n              overflowY: 'auto'\n            },\n            children: (formik.values.comps || []).map(comp => /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              sx: {\n                mb: 1,\n                cursor: 'pointer',\n                backgroundColor: selectedComp && selectedComp.id === comp.id ? 'rgba(25, 118, 210, 0.08)' : 'transparent'\n              },\n              onClick: () => setSelectedComp(comp),\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                sx: {\n                  py: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    sx: {\n                      fontWeight: selectedComp && selectedComp.id === comp.id ? 'bold' : 'normal'\n                    },\n                    children: comp.name || `Comparable ${comp.id}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    color: \"error\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      removeComp(comp.id);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [comp.pricePerSF ? `$${comp.pricePerSF}/SF` : '', comp.squareFeet ? ` · ${comp.squareFeet.toLocaleString()} SF` : '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  noWrap: true,\n                  children: comp.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    mt: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"primary\",\n                    children: [\"Total Adjustment:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: calculateTotalAdjustment(comp) > 0 ? 'green' : calculateTotalAdjustment(comp) < 0 ? 'red' : 'inherit'\n                      },\n                      children: ` ${calculateTotalAdjustment(comp) > 0 ? '+' : ''}${calculateTotalAdjustment(comp)}%`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"primary\",\n                    children: [\"Adj. Value: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [\"$\", calculateAdjustedValue(comp)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 39\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 21\n              }, this)\n            }, comp.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          variant: \"outlined\",\n          sx: {\n            p: 2\n          },\n          children: selectedComp ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: [\"Adjust: \", selectedComp.name || `Comparable ${selectedComp.id}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              sx: {\n                mb: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Comparable Name\",\n                  value: selectedComp.name || '',\n                  onChange: e => updateCompInfo('name', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Property Type\",\n                  value: selectedComp.type || '',\n                  onChange: e => updateCompInfo('type', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Address\",\n                  value: selectedComp.address || '',\n                  onChange: e => updateCompInfo('address', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Sale Date\",\n                  type: \"date\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  value: selectedComp.saleDate || '',\n                  onChange: e => updateCompInfo('saleDate', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Sale Price\",\n                  type: \"number\",\n                  InputProps: {\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: \"$\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 53\n                    }, this)\n                  },\n                  value: selectedComp.salePrice || '',\n                  onChange: e => updateCompInfo('salePrice', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Square Feet\",\n                  type: \"number\",\n                  value: selectedComp.squareFeet || '',\n                  onChange: e => updateCompInfo('squareFeet', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Price Per SF\",\n                  InputProps: {\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: \"$\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 475,\n                      columnNumber: 41\n                    }, this),\n                    readOnly: true\n                  },\n                  value: selectedComp.pricePerSF || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Year Built\",\n                  type: \"number\",\n                  value: selectedComp.yearBuilt || '',\n                  onChange: e => updateCompInfo('yearBuilt', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Adjusted Value (PSF)\",\n                  InputProps: {\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: \"$\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 41\n                    }, this),\n                    readOnly: true\n                  },\n                  value: calculateAdjustedValue(selectedComp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Description\",\n                  multiline: true,\n                  rows: 2,\n                  value: selectedComp.description || '',\n                  onChange: e => updateCompInfo('description', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                my: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Adjustments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              paragraph: true,\n              children: \"Enter positive percentages for superior subject property features and negative percentages for inferior features.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this), adjustmentCategories.map(category => /*#__PURE__*/_jsxDEV(Accordion, {\n              expanded: expandedCategory === category.id,\n              onChange: () => setExpandedCategory(expandedCategory === category.id ? null : category.id),\n              sx: {\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 51\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: category.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    size: \"small\",\n                    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                      children: /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          children: \"Adjustment\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 539,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"right\",\n                          width: \"150px\",\n                          children: \"Value (%)\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 540,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          children: \"Notes\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 541,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 538,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 537,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                      children: category.fields.map(field => {\n                        var _selectedComp$adjustm, _selectedComp$adjustm2, _selectedComp$adjustm3, _selectedComp$adjustm4, _selectedComp$adjustm5, _selectedComp$adjustm6;\n                        // Get current adjustment value and notes\n                        const adjustmentValue = ((_selectedComp$adjustm = selectedComp.adjustments) === null || _selectedComp$adjustm === void 0 ? void 0 : (_selectedComp$adjustm2 = _selectedComp$adjustm[category.id]) === null || _selectedComp$adjustm2 === void 0 ? void 0 : (_selectedComp$adjustm3 = _selectedComp$adjustm2[field.id]) === null || _selectedComp$adjustm3 === void 0 ? void 0 : _selectedComp$adjustm3.value) || 0;\n                        const adjustmentNotes = ((_selectedComp$adjustm4 = selectedComp.adjustments) === null || _selectedComp$adjustm4 === void 0 ? void 0 : (_selectedComp$adjustm5 = _selectedComp$adjustm4[category.id]) === null || _selectedComp$adjustm5 === void 0 ? void 0 : (_selectedComp$adjustm6 = _selectedComp$adjustm5[field.id]) === null || _selectedComp$adjustm6 === void 0 ? void 0 : _selectedComp$adjustm6.notes) || '';\n                        return /*#__PURE__*/_jsxDEV(TableRow, {\n                          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                            children: field.label\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 552,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            align: \"right\",\n                            children: /*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                display: 'flex',\n                                alignItems: 'center'\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                                title: \"Decrease by 1%\",\n                                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                                  size: \"small\",\n                                  onClick: () => {\n                                    const newValue = parseFloat(adjustmentValue) - 1;\n                                    updateAdjustment(category.id, field.id, 'value', newValue);\n                                  },\n                                  children: /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {\n                                    fontSize: \"small\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 563,\n                                    columnNumber: 43\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 556,\n                                  columnNumber: 41\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 555,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                size: \"small\",\n                                type: \"number\",\n                                value: adjustmentValue,\n                                onChange: e => updateAdjustment(category.id, field.id, 'value', e.target.value),\n                                InputProps: {\n                                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                                    position: \"end\",\n                                    children: \"%\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 572,\n                                    columnNumber: 57\n                                  }, this),\n                                  inputProps: {\n                                    style: {\n                                      textAlign: 'right'\n                                    },\n                                    step: 0.5\n                                  }\n                                },\n                                sx: {\n                                  width: '80px',\n                                  '& input': {\n                                    textAlign: 'right'\n                                  }\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 566,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                                title: \"Increase by 1%\",\n                                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                                  size: \"small\",\n                                  onClick: () => {\n                                    const newValue = parseFloat(adjustmentValue) + 1;\n                                    updateAdjustment(category.id, field.id, 'value', newValue);\n                                  },\n                                  children: /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {\n                                    fontSize: \"small\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 588,\n                                    columnNumber: 43\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 581,\n                                  columnNumber: 41\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 580,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 554,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 553,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            children: /*#__PURE__*/_jsxDEV(TextField, {\n                              fullWidth: true,\n                              size: \"small\",\n                              placeholder: \"Justification for adjustment\",\n                              value: adjustmentNotes,\n                              onChange: e => updateAdjustment(category.id, field.id, 'notes', e.target.value)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 594,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 593,\n                            columnNumber: 35\n                          }, this)]\n                        }, field.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 551,\n                          columnNumber: 33\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 544,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 21\n              }, this)]\n            }, category.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 3,\n                p: 2,\n                bgcolor: 'background.paper',\n                borderRadius: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: \"Adjustment Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Base Price Per SF\",\n                    InputProps: {\n                      startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"start\",\n                        children: \"$\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 623,\n                        columnNumber: 43\n                      }, this),\n                      readOnly: true\n                    },\n                    value: selectedComp.pricePerSF || '0.00'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 619,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Total Adjustment\",\n                    InputProps: {\n                      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"end\",\n                        children: \"%\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 634,\n                        columnNumber: 41\n                      }, this),\n                      readOnly: true\n                    },\n                    value: calculateTotalAdjustment(selectedComp)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 630,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Adjusted Value Per SF\",\n                    InputProps: {\n                      startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"start\",\n                        children: \"$\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 645,\n                        columnNumber: 43\n                      }, this),\n                      readOnly: true\n                    },\n                    value: calculateAdjustedValue(selectedComp)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 641,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 4,\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              children: \"Select a comparable property from the list to make adjustments, or click \\\"Add Comp\\\" to create a new one.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n};\n_s(AdjustmentsPage, \"PxvC9c2zTRhzSsAQW9q1MyqEqT0=\");\n_c = AdjustmentsPage;\nexport default AdjustmentsPage;\nvar _c;\n$RefreshReg$(_c, \"AdjustmentsPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Grid","TextField","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","Divider","Card","CardContent","CardMedia","CardActions","Select","MenuItem","FormControl","InputLabel","InputAdornment","Accordion","AccordionSummary","AccordionDetails","Tooltip","AddIcon","DeleteIcon","EditIcon","ExpandMoreIcon","ArrowUpwardIcon","ArrowDownwardIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","AdjustmentsPage","formik","_s","expandedCategory","setExpandedCategory","selectedComp","setSelectedComp","adjustmentCategories","id","title","fields","label","type","addComp","comps","values","newCompId","length","Math","max","map","c","newComp","name","address","saleDate","salePrice","pricePerSF","squareFeet","yearBuilt","description","image","adjustments","forEach","category","field","value","notes","push","setFieldValue","removeComp","filter","comp","updateCompInfo","compIndex","findIndex","price","parseFloat","sf","isNaN","toFixed","updateAdjustment","categoryId","fieldId","subField","calculateTotalAdjustment","totalAdjustment","calculateAdjustedValue","baseValue","totalAdjustmentPercent","adjustmentMultiplier","calculateStatistics","min","average","median","adjustedValues","sortedValues","sort","a","b","sum","reduce","floor","stats","elevation","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","paragraph","container","spacing","mb","item","xs","md","fullWidth","InputProps","readOnly","height","display","justifyContent","alignItems","startIcon","onClick","size","color","textAlign","my","maxHeight","overflowY","cursor","backgroundColor","py","fontWeight","e","stopPropagation","fontSize","toLocaleString","noWrap","mt","style","onChange","target","InputLabelProps","shrink","startAdornment","position","multiline","rows","expanded","expandIcon","align","width","_selectedComp$adjustm","_selectedComp$adjustm2","_selectedComp$adjustm3","_selectedComp$adjustm4","_selectedComp$adjustm5","_selectedComp$adjustm6","adjustmentValue","adjustmentNotes","newValue","endAdornment","inputProps","step","placeholder","bgcolor","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/sures/Desktop/Valuelyst/client/src/pages/AdjustmentsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Grid,\n  TextField,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  Divider,\n  Card,\n  CardContent,\n  CardMedia,\n  CardActions,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  InputAdornment,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Tooltip\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\n\nconst AdjustmentsPage = ({ formik }) => {\n  // State for expanded adjustment categories\n  const [expandedCategory, setExpandedCategory] = useState(null);\n  // State for the selected comp to adjust\n  const [selectedComp, setSelectedComp] = useState(null);\n\n  // Define the adjustment categories and their fields\n  const adjustmentCategories = [\n    {\n      id: 'market',\n      title: 'Market Conditions',\n      fields: [\n        { id: 'timeAdjustment', label: 'Time/Date of Sale', type: 'percentage' },\n        { id: 'marketTrends', label: 'Market Trends', type: 'percentage' },\n        { id: 'economicChanges', label: 'Economic Changes', type: 'percentage' }\n      ]\n    },\n    {\n      id: 'location',\n      title: 'Location',\n      fields: [\n        { id: 'neighborhood', label: 'Neighborhood', type: 'percentage' },\n        { id: 'accessibility', label: 'Accessibility', type: 'percentage' },\n        { id: 'visibility', label: 'Visibility', type: 'percentage' },\n        { id: 'cornerInfluence', label: 'Corner Influence', type: 'percentage' }\n      ]\n    },\n    {\n      id: 'physical',\n      title: 'Physical Characteristics',\n      fields: [\n        { id: 'size', label: 'Size/SF', type: 'percentage' },\n        { id: 'landToBuilding', label: 'Land to Building Ratio', type: 'percentage' },\n        { id: 'age', label: 'Age/Condition', type: 'percentage' },\n        { id: 'construction', label: 'Construction Quality', type: 'percentage' },\n        { id: 'functionality', label: 'Functionality', type: 'percentage' },\n        { id: 'parking', label: 'Parking Ratio', type: 'percentage' },\n        { id: 'amenities', label: 'Amenities', type: 'percentage' }\n      ]\n    },\n    {\n      id: 'economic',\n      title: 'Economic Characteristics',\n      fields: [\n        { id: 'occupancyRate', label: 'Occupancy Rate', type: 'percentage' },\n        { id: 'tenantQuality', label: 'Tenant Quality', type: 'percentage' },\n        { id: 'leaseTerms', label: 'Lease Terms', type: 'percentage' },\n        { id: 'incomeStability', label: 'Income Stability', type: 'percentage' },\n        { id: 'expenseRatio', label: 'Expense Ratio', type: 'percentage' }\n      ]\n    },\n    {\n      id: 'legal',\n      title: 'Legal & Zoning',\n      fields: [\n        { id: 'zoning', label: 'Zoning', type: 'percentage' },\n        { id: 'entitlements', label: 'Entitlements', type: 'percentage' },\n        { id: 'environmentalIssues', label: 'Environmental Issues', type: 'percentage' }\n      ]\n    },\n    {\n      id: 'other',\n      title: 'Other Adjustments',\n      fields: [\n        { id: 'custom1', label: 'Custom Adjustment 1', type: 'percentage' },\n        { id: 'custom2', label: 'Custom Adjustment 2', type: 'percentage' }\n      ]\n    }\n  ];\n\n  // Function to add a new comp to adjust\n  const addComp = () => {\n    const comps = [...(formik.values.comps || [])];\n    const newCompId = comps.length > 0 ? Math.max(...comps.map(c => c.id)) + 1 : 1;\n\n    // Create a new blank comp with empty adjustment values\n    const newComp = {\n      id: newCompId,\n      name: `Comparable ${newCompId}`,\n      address: '',\n      saleDate: '',\n      salePrice: '',\n      pricePerSF: '',\n      squareFeet: '',\n      yearBuilt: '',\n      type: '',\n      description: '',\n      image: '',\n      adjustments: {}\n    };\n    \n    // Initialize all adjustment categories and fields\n    adjustmentCategories.forEach(category => {\n      newComp.adjustments[category.id] = {};\n      category.fields.forEach(field => {\n        newComp.adjustments[category.id][field.id] = {\n          value: 0,\n          notes: ''\n        };\n      });\n    });\n\n    comps.push(newComp);\n    formik.setFieldValue('comps', comps);\n    setSelectedComp(newComp);\n  };\n\n  // Function to remove a comp\n  const removeComp = (id) => {\n    const comps = formik.values.comps.filter(comp => comp.id !== id);\n    formik.setFieldValue('comps', comps);\n    if (selectedComp && selectedComp.id === id) {\n      setSelectedComp(comps.length > 0 ? comps[0] : null);\n    }\n  };\n\n  // Function to update a comp's basic info\n  const updateCompInfo = (field, value) => {\n    if (!selectedComp) return;\n\n    const comps = [...(formik.values.comps || [])];\n    const compIndex = comps.findIndex(comp => comp.id === selectedComp.id);\n    \n    if (compIndex >= 0) {\n      comps[compIndex] = {\n        ...comps[compIndex],\n        [field]: value\n      };\n\n      // Auto-calculate price per SF if both price and SF are available\n      if (field === 'salePrice' || field === 'squareFeet') {\n        const price = field === 'salePrice' ? parseFloat(value) : parseFloat(comps[compIndex].salePrice);\n        const sf = field === 'squareFeet' ? parseFloat(value) : parseFloat(comps[compIndex].squareFeet);\n        \n        if (!isNaN(price) && !isNaN(sf) && sf > 0) {\n          comps[compIndex].pricePerSF = (price / sf).toFixed(2);\n        }\n      }\n\n      formik.setFieldValue('comps', comps);\n      setSelectedComp(comps[compIndex]);\n    }\n  };\n\n  // Function to update an adjustment value\n  const updateAdjustment = (categoryId, fieldId, subField, value) => {\n    if (!selectedComp) return;\n\n    const comps = [...(formik.values.comps || [])];\n    const compIndex = comps.findIndex(comp => comp.id === selectedComp.id);\n    \n    if (compIndex >= 0) {\n      // Ensure the adjustment structure exists\n      if (!comps[compIndex].adjustments) {\n        comps[compIndex].adjustments = {};\n      }\n      if (!comps[compIndex].adjustments[categoryId]) {\n        comps[compIndex].adjustments[categoryId] = {};\n      }\n      if (!comps[compIndex].adjustments[categoryId][fieldId]) {\n        comps[compIndex].adjustments[categoryId][fieldId] = { value: 0, notes: '' };\n      }\n\n      // Update the specified subfield (value or notes)\n      comps[compIndex].adjustments[categoryId][fieldId][subField] = value;\n      \n      formik.setFieldValue('comps', comps);\n      setSelectedComp(comps[compIndex]);\n    }\n  };\n\n  // Calculate the total adjustment percentage for a comp\n  const calculateTotalAdjustment = (comp) => {\n    if (!comp || !comp.adjustments) return 0;\n\n    let totalAdjustment = 0;\n    \n    // Sum up all adjustment values across all categories\n    adjustmentCategories.forEach(category => {\n      if (comp.adjustments[category.id]) {\n        category.fields.forEach(field => {\n          if (comp.adjustments[category.id][field.id]) {\n            totalAdjustment += parseFloat(comp.adjustments[category.id][field.id].value || 0);\n          }\n        });\n      }\n    });\n\n    return totalAdjustment;\n  };\n\n  // Calculate the adjusted value for a comp\n  const calculateAdjustedValue = (comp) => {\n    if (!comp || !comp.pricePerSF) return 0;\n    \n    const baseValue = parseFloat(comp.pricePerSF);\n    if (isNaN(baseValue)) return 0;\n    \n    const totalAdjustmentPercent = calculateTotalAdjustment(comp);\n    const adjustmentMultiplier = 1 + (totalAdjustmentPercent / 100);\n    \n    return (baseValue * adjustmentMultiplier).toFixed(2);\n  };\n\n  // Calculate overall statistics for adjusted values\n  const calculateStatistics = () => {\n    const comps = formik.values.comps || [];\n    \n    if (comps.length === 0) {\n      return { min: 0, max: 0, average: 0, median: 0 };\n    }\n    \n    const adjustedValues = comps.map(comp => parseFloat(calculateAdjustedValue(comp)));\n    const sortedValues = [...adjustedValues].sort((a, b) => a - b);\n    \n    const min = Math.min(...adjustedValues);\n    const max = Math.max(...adjustedValues);\n    const sum = adjustedValues.reduce((a, b) => a + b, 0);\n    const average = sum / adjustedValues.length;\n    \n    // Calculate median\n    let median;\n    if (sortedValues.length % 2 === 0) {\n      median = (sortedValues[sortedValues.length / 2 - 1] + sortedValues[sortedValues.length / 2]) / 2;\n    } else {\n      median = sortedValues[Math.floor(sortedValues.length / 2)];\n    }\n    \n    return { min, max, average, median };\n  };\n\n  // If the comps array is empty or not initialized, set it to an empty array\n  useEffect(() => {\n    if (!formik.values.comps) {\n      formik.setFieldValue('comps', []);\n    } else if (formik.values.comps.length > 0 && !selectedComp) {\n      // Auto-select the first comp if none is selected\n      setSelectedComp(formik.values.comps[0]);\n    }\n  }, [formik.values.comps]);\n\n  // Statistics for the adjusted values\n  const stats = calculateStatistics();\n\n  return (\n    <Paper elevation={3} sx={{ p: 3 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Comparable Properties Adjustments\n      </Typography>\n      <Typography variant=\"body2\" paragraph>\n        Add comparable properties and make adjustments to calculate the subject property value.\n      </Typography>\n\n      {/* Summary Statistics */}\n      <Grid container spacing={3} sx={{ mb: 3 }}>\n        <Grid item xs={12} md={3}>\n          <TextField\n            fullWidth\n            label=\"Min Adjusted Value (PSF)\"\n            value={`$${stats.min.toFixed(2)}`}\n            InputProps={{ readOnly: true }}\n          />\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <TextField\n            fullWidth\n            label=\"Max Adjusted Value (PSF)\"\n            value={`$${stats.max.toFixed(2)}`}\n            InputProps={{ readOnly: true }}\n          />\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <TextField\n            fullWidth\n            label=\"Average Adjusted Value (PSF)\"\n            value={`$${stats.average.toFixed(2)}`}\n            InputProps={{ readOnly: true }}\n          />\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <TextField\n            fullWidth\n            label=\"Median Adjusted Value (PSF)\"\n            value={`$${stats.median.toFixed(2)}`}\n            InputProps={{ readOnly: true }}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3}>\n        {/* Left side - List of comps */}\n        <Grid item xs={12} md={4}>\n          <Paper variant=\"outlined\" sx={{ p: 2, height: '100%' }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\">Comparable Properties</Typography>\n              <Button \n                variant=\"contained\" \n                startIcon={<AddIcon />}\n                onClick={addComp}\n                size=\"small\"\n              >\n                Add Comp\n              </Button>\n            </Box>\n\n            {/* List of comps */}\n            {(formik.values.comps || []).length === 0 ? (\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign: 'center', my: 4 }}>\n                No comparable properties added yet. Click \"Add Comp\" to get started.\n              </Typography>\n            ) : (\n              <Box sx={{ maxHeight: '500px', overflowY: 'auto' }}>\n                {(formik.values.comps || []).map((comp) => (\n                  <Card \n                    key={comp.id} \n                    variant=\"outlined\" \n                    sx={{ \n                      mb: 1, \n                      cursor: 'pointer',\n                      backgroundColor: selectedComp && selectedComp.id === comp.id ? 'rgba(25, 118, 210, 0.08)' : 'transparent'\n                    }}\n                    onClick={() => setSelectedComp(comp)}\n                  >\n                    <CardContent sx={{ py: 1 }}>\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <Typography variant=\"subtitle1\" sx={{ fontWeight: selectedComp && selectedComp.id === comp.id ? 'bold' : 'normal' }}>\n                          {comp.name || `Comparable ${comp.id}`}\n                        </Typography>\n                        <IconButton \n                          size=\"small\" \n                          color=\"error\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            removeComp(comp.id);\n                          }}\n                        >\n                          <DeleteIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {comp.pricePerSF ? `$${comp.pricePerSF}/SF` : ''}\n                        {comp.squareFeet ? ` · ${comp.squareFeet.toLocaleString()} SF` : ''}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                        {comp.address}\n                      </Typography>\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1 }}>\n                        <Typography variant=\"body2\" color=\"primary\">\n                          Total Adjustment: \n                          <span style={{ \n                            color: calculateTotalAdjustment(comp) > 0 ? 'green' : \n                                  calculateTotalAdjustment(comp) < 0 ? 'red' : 'inherit' \n                          }}>\n                            {` ${calculateTotalAdjustment(comp) > 0 ? '+' : ''}${calculateTotalAdjustment(comp)}%`}\n                          </span>\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"primary\">\n                          Adj. Value: <strong>${calculateAdjustedValue(comp)}</strong>\n                        </Typography>\n                      </Box>\n                    </CardContent>\n                  </Card>\n                ))}\n              </Box>\n            )}\n          </Paper>\n        </Grid>\n\n        {/* Right side - Adjustment details */}\n        <Grid item xs={12} md={8}>\n          <Paper variant=\"outlined\" sx={{ p: 2 }}>\n            {selectedComp ? (\n              <>\n                <Typography variant=\"h6\" gutterBottom>\n                  Adjust: {selectedComp.name || `Comparable ${selectedComp.id}`}\n                </Typography>\n                \n                {/* Basic comp info */}\n                <Grid container spacing={2} sx={{ mb: 3 }}>\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Comparable Name\"\n                      value={selectedComp.name || ''}\n                      onChange={(e) => updateCompInfo('name', e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Property Type\"\n                      value={selectedComp.type || ''}\n                      onChange={(e) => updateCompInfo('type', e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Address\"\n                      value={selectedComp.address || ''}\n                      onChange={(e) => updateCompInfo('address', e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      fullWidth\n                      label=\"Sale Date\"\n                      type=\"date\"\n                      InputLabelProps={{ shrink: true }}\n                      value={selectedComp.saleDate || ''}\n                      onChange={(e) => updateCompInfo('saleDate', e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      fullWidth\n                      label=\"Sale Price\"\n                      type=\"number\"\n                      InputProps={{ startAdornment: <InputAdornment position=\"start\">$</InputAdornment> }}\n                      value={selectedComp.salePrice || ''}\n                      onChange={(e) => updateCompInfo('salePrice', e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      fullWidth\n                      label=\"Square Feet\"\n                      type=\"number\"\n                      value={selectedComp.squareFeet || ''}\n                      onChange={(e) => updateCompInfo('squareFeet', e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      fullWidth\n                      label=\"Price Per SF\"\n                      InputProps={{ \n                        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                        readOnly: true\n                      }}\n                      value={selectedComp.pricePerSF || ''}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      fullWidth\n                      label=\"Year Built\"\n                      type=\"number\"\n                      value={selectedComp.yearBuilt || ''}\n                      onChange={(e) => updateCompInfo('yearBuilt', e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      fullWidth\n                      label=\"Adjusted Value (PSF)\"\n                      InputProps={{ \n                        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                        readOnly: true\n                      }}\n                      value={calculateAdjustedValue(selectedComp)}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Description\"\n                      multiline\n                      rows={2}\n                      value={selectedComp.description || ''}\n                      onChange={(e) => updateCompInfo('description', e.target.value)}\n                    />\n                  </Grid>\n                </Grid>\n\n                <Divider sx={{ my: 2 }} />\n                \n                {/* Adjustments */}\n                <Typography variant=\"h6\" gutterBottom>\n                  Adjustments\n                </Typography>\n                <Typography variant=\"body2\" paragraph>\n                  Enter positive percentages for superior subject property features and negative percentages for inferior features.\n                </Typography>\n\n                {/* Adjustment accordions by category */}\n                {adjustmentCategories.map((category) => (\n                  <Accordion \n                    key={category.id}\n                    expanded={expandedCategory === category.id}\n                    onChange={() => setExpandedCategory(expandedCategory === category.id ? null : category.id)}\n                    sx={{ mb: 1 }}\n                  >\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                      <Typography>{category.title}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <TableContainer>\n                        <Table size=\"small\">\n                          <TableHead>\n                            <TableRow>\n                              <TableCell>Adjustment</TableCell>\n                              <TableCell align=\"right\" width=\"150px\">Value (%)</TableCell>\n                              <TableCell>Notes</TableCell>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {category.fields.map((field) => {\n                              // Get current adjustment value and notes\n                              const adjustmentValue = selectedComp.adjustments?.[category.id]?.[field.id]?.value || 0;\n                              const adjustmentNotes = selectedComp.adjustments?.[category.id]?.[field.id]?.notes || '';\n                              \n                              return (\n                                <TableRow key={field.id}>\n                                  <TableCell>{field.label}</TableCell>\n                                  <TableCell align=\"right\">\n                                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                      <Tooltip title=\"Decrease by 1%\">\n                                        <IconButton \n                                          size=\"small\"\n                                          onClick={() => {\n                                            const newValue = parseFloat(adjustmentValue) - 1;\n                                            updateAdjustment(category.id, field.id, 'value', newValue);\n                                          }}\n                                        >\n                                          <ArrowDownwardIcon fontSize=\"small\" />\n                                        </IconButton>\n                                      </Tooltip>\n                                      <TextField\n                                        size=\"small\"\n                                        type=\"number\"\n                                        value={adjustmentValue}\n                                        onChange={(e) => updateAdjustment(category.id, field.id, 'value', e.target.value)}\n                                        InputProps={{\n                                          endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n                                          inputProps: { \n                                            style: { textAlign: 'right' },\n                                            step: 0.5 \n                                          }\n                                        }}\n                                        sx={{ width: '80px', '& input': { textAlign: 'right' } }}\n                                      />\n                                      <Tooltip title=\"Increase by 1%\">\n                                        <IconButton \n                                          size=\"small\"\n                                          onClick={() => {\n                                            const newValue = parseFloat(adjustmentValue) + 1;\n                                            updateAdjustment(category.id, field.id, 'value', newValue);\n                                          }}\n                                        >\n                                          <ArrowUpwardIcon fontSize=\"small\" />\n                                        </IconButton>\n                                      </Tooltip>\n                                    </Box>\n                                  </TableCell>\n                                  <TableCell>\n                                    <TextField\n                                      fullWidth\n                                      size=\"small\"\n                                      placeholder=\"Justification for adjustment\"\n                                      value={adjustmentNotes}\n                                      onChange={(e) => updateAdjustment(category.id, field.id, 'notes', e.target.value)}\n                                    />\n                                  </TableCell>\n                                </TableRow>\n                              );\n                            })}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n                    </AccordionDetails>\n                  </Accordion>\n                ))}\n\n                {/* Total adjustments summary */}\n                <Box sx={{ mt: 3, p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Adjustment Summary\n                  </Typography>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} md={4}>\n                      <TextField\n                        fullWidth\n                        label=\"Base Price Per SF\"\n                        InputProps={{ \n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                          readOnly: true\n                        }}\n                        value={selectedComp.pricePerSF || '0.00'}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <TextField\n                        fullWidth\n                        label=\"Total Adjustment\"\n                        InputProps={{ \n                          endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n                          readOnly: true\n                        }}\n                        value={calculateTotalAdjustment(selectedComp)}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                      <TextField\n                        fullWidth\n                        label=\"Adjusted Value Per SF\"\n                        InputProps={{ \n                          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                          readOnly: true\n                        }}\n                        value={calculateAdjustedValue(selectedComp)}\n                      />\n                    </Grid>\n                  </Grid>\n                </Box>\n              </>\n            ) : (\n              <Box sx={{ p: 4, textAlign: 'center' }}>\n                <Typography variant=\"body1\" color=\"text.secondary\">\n                  Select a comparable property from the list to make adjustments,\n                  or click \"Add Comp\" to create a new one.\n                </Typography>\n              </Box>\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default AdjustmentsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,UAAU,EACVC,KAAK,EACLC,IAAI,EACJC,SAAS,EACTC,MAAM,EACNC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,SAAS,EACTC,QAAQ,EACRC,UAAU,EACVC,OAAO,EACPC,IAAI,EACJC,WAAW,EACXC,SAAS,EACTC,WAAW,EACXC,MAAM,EACNC,QAAQ,EACRC,WAAW,EACXC,UAAU,EACVC,cAAc,EACdC,SAAS,EACTC,gBAAgB,EAChBC,gBAAgB,EAChBC,OAAO,QACF,eAAe;AACtB,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,iBAAiB,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElE,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACtC;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EAC9D;EACA,MAAM,CAAC4C,YAAY,EAAEC,eAAe,CAAC,GAAG7C,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAM8C,oBAAoB,GAAG,CAC3B;IACEC,EAAE,EAAE,QAAQ;IACZC,KAAK,EAAE,mBAAmB;IAC1BC,MAAM,EAAE,CACN;MAAEF,EAAE,EAAE,gBAAgB;MAAEG,KAAK,EAAE,mBAAmB;MAAEC,IAAI,EAAE;IAAa,CAAC,EACxE;MAAEJ,EAAE,EAAE,cAAc;MAAEG,KAAK,EAAE,eAAe;MAAEC,IAAI,EAAE;IAAa,CAAC,EAClE;MAAEJ,EAAE,EAAE,iBAAiB;MAAEG,KAAK,EAAE,kBAAkB;MAAEC,IAAI,EAAE;IAAa,CAAC;EAE5E,CAAC,EACD;IACEJ,EAAE,EAAE,UAAU;IACdC,KAAK,EAAE,UAAU;IACjBC,MAAM,EAAE,CACN;MAAEF,EAAE,EAAE,cAAc;MAAEG,KAAK,EAAE,cAAc;MAAEC,IAAI,EAAE;IAAa,CAAC,EACjE;MAAEJ,EAAE,EAAE,eAAe;MAAEG,KAAK,EAAE,eAAe;MAAEC,IAAI,EAAE;IAAa,CAAC,EACnE;MAAEJ,EAAE,EAAE,YAAY;MAAEG,KAAK,EAAE,YAAY;MAAEC,IAAI,EAAE;IAAa,CAAC,EAC7D;MAAEJ,EAAE,EAAE,iBAAiB;MAAEG,KAAK,EAAE,kBAAkB;MAAEC,IAAI,EAAE;IAAa,CAAC;EAE5E,CAAC,EACD;IACEJ,EAAE,EAAE,UAAU;IACdC,KAAK,EAAE,0BAA0B;IACjCC,MAAM,EAAE,CACN;MAAEF,EAAE,EAAE,MAAM;MAAEG,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAa,CAAC,EACpD;MAAEJ,EAAE,EAAE,gBAAgB;MAAEG,KAAK,EAAE,wBAAwB;MAAEC,IAAI,EAAE;IAAa,CAAC,EAC7E;MAAEJ,EAAE,EAAE,KAAK;MAAEG,KAAK,EAAE,eAAe;MAAEC,IAAI,EAAE;IAAa,CAAC,EACzD;MAAEJ,EAAE,EAAE,cAAc;MAAEG,KAAK,EAAE,sBAAsB;MAAEC,IAAI,EAAE;IAAa,CAAC,EACzE;MAAEJ,EAAE,EAAE,eAAe;MAAEG,KAAK,EAAE,eAAe;MAAEC,IAAI,EAAE;IAAa,CAAC,EACnE;MAAEJ,EAAE,EAAE,SAAS;MAAEG,KAAK,EAAE,eAAe;MAAEC,IAAI,EAAE;IAAa,CAAC,EAC7D;MAAEJ,EAAE,EAAE,WAAW;MAAEG,KAAK,EAAE,WAAW;MAAEC,IAAI,EAAE;IAAa,CAAC;EAE/D,CAAC,EACD;IACEJ,EAAE,EAAE,UAAU;IACdC,KAAK,EAAE,0BAA0B;IACjCC,MAAM,EAAE,CACN;MAAEF,EAAE,EAAE,eAAe;MAAEG,KAAK,EAAE,gBAAgB;MAAEC,IAAI,EAAE;IAAa,CAAC,EACpE;MAAEJ,EAAE,EAAE,eAAe;MAAEG,KAAK,EAAE,gBAAgB;MAAEC,IAAI,EAAE;IAAa,CAAC,EACpE;MAAEJ,EAAE,EAAE,YAAY;MAAEG,KAAK,EAAE,aAAa;MAAEC,IAAI,EAAE;IAAa,CAAC,EAC9D;MAAEJ,EAAE,EAAE,iBAAiB;MAAEG,KAAK,EAAE,kBAAkB;MAAEC,IAAI,EAAE;IAAa,CAAC,EACxE;MAAEJ,EAAE,EAAE,cAAc;MAAEG,KAAK,EAAE,eAAe;MAAEC,IAAI,EAAE;IAAa,CAAC;EAEtE,CAAC,EACD;IACEJ,EAAE,EAAE,OAAO;IACXC,KAAK,EAAE,gBAAgB;IACvBC,MAAM,EAAE,CACN;MAAEF,EAAE,EAAE,QAAQ;MAAEG,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAa,CAAC,EACrD;MAAEJ,EAAE,EAAE,cAAc;MAAEG,KAAK,EAAE,cAAc;MAAEC,IAAI,EAAE;IAAa,CAAC,EACjE;MAAEJ,EAAE,EAAE,qBAAqB;MAAEG,KAAK,EAAE,sBAAsB;MAAEC,IAAI,EAAE;IAAa,CAAC;EAEpF,CAAC,EACD;IACEJ,EAAE,EAAE,OAAO;IACXC,KAAK,EAAE,mBAAmB;IAC1BC,MAAM,EAAE,CACN;MAAEF,EAAE,EAAE,SAAS;MAAEG,KAAK,EAAE,qBAAqB;MAAEC,IAAI,EAAE;IAAa,CAAC,EACnE;MAAEJ,EAAE,EAAE,SAAS;MAAEG,KAAK,EAAE,qBAAqB;MAAEC,IAAI,EAAE;IAAa,CAAC;EAEvE,CAAC,CACF;;EAED;EACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,MAAMC,KAAK,GAAG,CAAC,IAAIb,MAAM,CAACc,MAAM,CAACD,KAAK,IAAI,EAAE,CAAC,CAAC;IAC9C,MAAME,SAAS,GAAGF,KAAK,CAACG,MAAM,GAAG,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGL,KAAK,CAACM,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACb,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;;IAE9E;IACA,MAAMc,OAAO,GAAG;MACdd,EAAE,EAAEQ,SAAS;MACbO,IAAI,EAAE,cAAcP,SAAS,EAAE;MAC/BQ,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE,EAAE;MACbjB,IAAI,EAAE,EAAE;MACRkB,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,CAAC;IAChB,CAAC;;IAED;IACAzB,oBAAoB,CAAC0B,OAAO,CAACC,QAAQ,IAAI;MACvCZ,OAAO,CAACU,WAAW,CAACE,QAAQ,CAAC1B,EAAE,CAAC,GAAG,CAAC,CAAC;MACrC0B,QAAQ,CAACxB,MAAM,CAACuB,OAAO,CAACE,KAAK,IAAI;QAC/Bb,OAAO,CAACU,WAAW,CAACE,QAAQ,CAAC1B,EAAE,CAAC,CAAC2B,KAAK,CAAC3B,EAAE,CAAC,GAAG;UAC3C4B,KAAK,EAAE,CAAC;UACRC,KAAK,EAAE;QACT,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFvB,KAAK,CAACwB,IAAI,CAAChB,OAAO,CAAC;IACnBrB,MAAM,CAACsC,aAAa,CAAC,OAAO,EAAEzB,KAAK,CAAC;IACpCR,eAAe,CAACgB,OAAO,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMkB,UAAU,GAAIhC,EAAE,IAAK;IACzB,MAAMM,KAAK,GAAGb,MAAM,CAACc,MAAM,CAACD,KAAK,CAAC2B,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAClC,EAAE,KAAKA,EAAE,CAAC;IAChEP,MAAM,CAACsC,aAAa,CAAC,OAAO,EAAEzB,KAAK,CAAC;IACpC,IAAIT,YAAY,IAAIA,YAAY,CAACG,EAAE,KAAKA,EAAE,EAAE;MAC1CF,eAAe,CAACQ,KAAK,CAACG,MAAM,GAAG,CAAC,GAAGH,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACrD;EACF,CAAC;;EAED;EACA,MAAM6B,cAAc,GAAGA,CAACR,KAAK,EAAEC,KAAK,KAAK;IACvC,IAAI,CAAC/B,YAAY,EAAE;IAEnB,MAAMS,KAAK,GAAG,CAAC,IAAIb,MAAM,CAACc,MAAM,CAACD,KAAK,IAAI,EAAE,CAAC,CAAC;IAC9C,MAAM8B,SAAS,GAAG9B,KAAK,CAAC+B,SAAS,CAACH,IAAI,IAAIA,IAAI,CAAClC,EAAE,KAAKH,YAAY,CAACG,EAAE,CAAC;IAEtE,IAAIoC,SAAS,IAAI,CAAC,EAAE;MAClB9B,KAAK,CAAC8B,SAAS,CAAC,GAAG;QACjB,GAAG9B,KAAK,CAAC8B,SAAS,CAAC;QACnB,CAACT,KAAK,GAAGC;MACX,CAAC;;MAED;MACA,IAAID,KAAK,KAAK,WAAW,IAAIA,KAAK,KAAK,YAAY,EAAE;QACnD,MAAMW,KAAK,GAAGX,KAAK,KAAK,WAAW,GAAGY,UAAU,CAACX,KAAK,CAAC,GAAGW,UAAU,CAACjC,KAAK,CAAC8B,SAAS,CAAC,CAAClB,SAAS,CAAC;QAChG,MAAMsB,EAAE,GAAGb,KAAK,KAAK,YAAY,GAAGY,UAAU,CAACX,KAAK,CAAC,GAAGW,UAAU,CAACjC,KAAK,CAAC8B,SAAS,CAAC,CAAChB,UAAU,CAAC;QAE/F,IAAI,CAACqB,KAAK,CAACH,KAAK,CAAC,IAAI,CAACG,KAAK,CAACD,EAAE,CAAC,IAAIA,EAAE,GAAG,CAAC,EAAE;UACzClC,KAAK,CAAC8B,SAAS,CAAC,CAACjB,UAAU,GAAG,CAACmB,KAAK,GAAGE,EAAE,EAAEE,OAAO,CAAC,CAAC,CAAC;QACvD;MACF;MAEAjD,MAAM,CAACsC,aAAa,CAAC,OAAO,EAAEzB,KAAK,CAAC;MACpCR,eAAe,CAACQ,KAAK,CAAC8B,SAAS,CAAC,CAAC;IACnC;EACF,CAAC;;EAED;EACA,MAAMO,gBAAgB,GAAGA,CAACC,UAAU,EAAEC,OAAO,EAAEC,QAAQ,EAAElB,KAAK,KAAK;IACjE,IAAI,CAAC/B,YAAY,EAAE;IAEnB,MAAMS,KAAK,GAAG,CAAC,IAAIb,MAAM,CAACc,MAAM,CAACD,KAAK,IAAI,EAAE,CAAC,CAAC;IAC9C,MAAM8B,SAAS,GAAG9B,KAAK,CAAC+B,SAAS,CAACH,IAAI,IAAIA,IAAI,CAAClC,EAAE,KAAKH,YAAY,CAACG,EAAE,CAAC;IAEtE,IAAIoC,SAAS,IAAI,CAAC,EAAE;MAClB;MACA,IAAI,CAAC9B,KAAK,CAAC8B,SAAS,CAAC,CAACZ,WAAW,EAAE;QACjClB,KAAK,CAAC8B,SAAS,CAAC,CAACZ,WAAW,GAAG,CAAC,CAAC;MACnC;MACA,IAAI,CAAClB,KAAK,CAAC8B,SAAS,CAAC,CAACZ,WAAW,CAACoB,UAAU,CAAC,EAAE;QAC7CtC,KAAK,CAAC8B,SAAS,CAAC,CAACZ,WAAW,CAACoB,UAAU,CAAC,GAAG,CAAC,CAAC;MAC/C;MACA,IAAI,CAACtC,KAAK,CAAC8B,SAAS,CAAC,CAACZ,WAAW,CAACoB,UAAU,CAAC,CAACC,OAAO,CAAC,EAAE;QACtDvC,KAAK,CAAC8B,SAAS,CAAC,CAACZ,WAAW,CAACoB,UAAU,CAAC,CAACC,OAAO,CAAC,GAAG;UAAEjB,KAAK,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAG,CAAC;MAC7E;;MAEA;MACAvB,KAAK,CAAC8B,SAAS,CAAC,CAACZ,WAAW,CAACoB,UAAU,CAAC,CAACC,OAAO,CAAC,CAACC,QAAQ,CAAC,GAAGlB,KAAK;MAEnEnC,MAAM,CAACsC,aAAa,CAAC,OAAO,EAAEzB,KAAK,CAAC;MACpCR,eAAe,CAACQ,KAAK,CAAC8B,SAAS,CAAC,CAAC;IACnC;EACF,CAAC;;EAED;EACA,MAAMW,wBAAwB,GAAIb,IAAI,IAAK;IACzC,IAAI,CAACA,IAAI,IAAI,CAACA,IAAI,CAACV,WAAW,EAAE,OAAO,CAAC;IAExC,IAAIwB,eAAe,GAAG,CAAC;;IAEvB;IACAjD,oBAAoB,CAAC0B,OAAO,CAACC,QAAQ,IAAI;MACvC,IAAIQ,IAAI,CAACV,WAAW,CAACE,QAAQ,CAAC1B,EAAE,CAAC,EAAE;QACjC0B,QAAQ,CAACxB,MAAM,CAACuB,OAAO,CAACE,KAAK,IAAI;UAC/B,IAAIO,IAAI,CAACV,WAAW,CAACE,QAAQ,CAAC1B,EAAE,CAAC,CAAC2B,KAAK,CAAC3B,EAAE,CAAC,EAAE;YAC3CgD,eAAe,IAAIT,UAAU,CAACL,IAAI,CAACV,WAAW,CAACE,QAAQ,CAAC1B,EAAE,CAAC,CAAC2B,KAAK,CAAC3B,EAAE,CAAC,CAAC4B,KAAK,IAAI,CAAC,CAAC;UACnF;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IAEF,OAAOoB,eAAe;EACxB,CAAC;;EAED;EACA,MAAMC,sBAAsB,GAAIf,IAAI,IAAK;IACvC,IAAI,CAACA,IAAI,IAAI,CAACA,IAAI,CAACf,UAAU,EAAE,OAAO,CAAC;IAEvC,MAAM+B,SAAS,GAAGX,UAAU,CAACL,IAAI,CAACf,UAAU,CAAC;IAC7C,IAAIsB,KAAK,CAACS,SAAS,CAAC,EAAE,OAAO,CAAC;IAE9B,MAAMC,sBAAsB,GAAGJ,wBAAwB,CAACb,IAAI,CAAC;IAC7D,MAAMkB,oBAAoB,GAAG,CAAC,GAAID,sBAAsB,GAAG,GAAI;IAE/D,OAAO,CAACD,SAAS,GAAGE,oBAAoB,EAAEV,OAAO,CAAC,CAAC,CAAC;EACtD,CAAC;;EAED;EACA,MAAMW,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAM/C,KAAK,GAAGb,MAAM,CAACc,MAAM,CAACD,KAAK,IAAI,EAAE;IAEvC,IAAIA,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;MACtB,OAAO;QAAE6C,GAAG,EAAE,CAAC;QAAE3C,GAAG,EAAE,CAAC;QAAE4C,OAAO,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC;IAClD;IAEA,MAAMC,cAAc,GAAGnD,KAAK,CAACM,GAAG,CAACsB,IAAI,IAAIK,UAAU,CAACU,sBAAsB,CAACf,IAAI,CAAC,CAAC,CAAC;IAClF,MAAMwB,YAAY,GAAG,CAAC,GAAGD,cAAc,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;IAE9D,MAAMP,GAAG,GAAG5C,IAAI,CAAC4C,GAAG,CAAC,GAAGG,cAAc,CAAC;IACvC,MAAM9C,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,GAAG8C,cAAc,CAAC;IACvC,MAAMK,GAAG,GAAGL,cAAc,CAACM,MAAM,CAAC,CAACH,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC;IACrD,MAAMN,OAAO,GAAGO,GAAG,GAAGL,cAAc,CAAChD,MAAM;;IAE3C;IACA,IAAI+C,MAAM;IACV,IAAIE,YAAY,CAACjD,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;MACjC+C,MAAM,GAAG,CAACE,YAAY,CAACA,YAAY,CAACjD,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGiD,YAAY,CAACA,YAAY,CAACjD,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC;IAClG,CAAC,MAAM;MACL+C,MAAM,GAAGE,YAAY,CAAChD,IAAI,CAACsD,KAAK,CAACN,YAAY,CAACjD,MAAM,GAAG,CAAC,CAAC,CAAC;IAC5D;IAEA,OAAO;MAAE6C,GAAG;MAAE3C,GAAG;MAAE4C,OAAO;MAAEC;IAAO,CAAC;EACtC,CAAC;;EAED;EACAtG,SAAS,CAAC,MAAM;IACd,IAAI,CAACuC,MAAM,CAACc,MAAM,CAACD,KAAK,EAAE;MACxBb,MAAM,CAACsC,aAAa,CAAC,OAAO,EAAE,EAAE,CAAC;IACnC,CAAC,MAAM,IAAItC,MAAM,CAACc,MAAM,CAACD,KAAK,CAACG,MAAM,GAAG,CAAC,IAAI,CAACZ,YAAY,EAAE;MAC1D;MACAC,eAAe,CAACL,MAAM,CAACc,MAAM,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;IACzC;EACF,CAAC,EAAE,CAACb,MAAM,CAACc,MAAM,CAACD,KAAK,CAAC,CAAC;;EAEzB;EACA,MAAM2D,KAAK,GAAGZ,mBAAmB,CAAC,CAAC;EAEnC,oBACEhE,OAAA,CAAChC,KAAK;IAAC6G,SAAS,EAAE,CAAE;IAACC,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAChChF,OAAA,CAACjC,UAAU;MAACkH,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbtF,OAAA,CAACjC,UAAU;MAACkH,OAAO,EAAC,OAAO;MAACM,SAAS;MAAAP,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAGbtF,OAAA,CAAC/B,IAAI;MAACuH,SAAS;MAACC,OAAO,EAAE,CAAE;MAACX,EAAE,EAAE;QAAEY,EAAE,EAAE;MAAE,CAAE;MAAAV,QAAA,gBACxChF,OAAA,CAAC/B,IAAI;QAAC0H,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAb,QAAA,eACvBhF,OAAA,CAAC9B,SAAS;UACR4H,SAAS;UACThF,KAAK,EAAC,0BAA0B;UAChCyB,KAAK,EAAE,IAAIqC,KAAK,CAACX,GAAG,CAACZ,OAAO,CAAC,CAAC,CAAC,EAAG;UAClC0C,UAAU,EAAE;YAAEC,QAAQ,EAAE;UAAK;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACPtF,OAAA,CAAC/B,IAAI;QAAC0H,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAb,QAAA,eACvBhF,OAAA,CAAC9B,SAAS;UACR4H,SAAS;UACThF,KAAK,EAAC,0BAA0B;UAChCyB,KAAK,EAAE,IAAIqC,KAAK,CAACtD,GAAG,CAAC+B,OAAO,CAAC,CAAC,CAAC,EAAG;UAClC0C,UAAU,EAAE;YAAEC,QAAQ,EAAE;UAAK;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACPtF,OAAA,CAAC/B,IAAI;QAAC0H,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAb,QAAA,eACvBhF,OAAA,CAAC9B,SAAS;UACR4H,SAAS;UACThF,KAAK,EAAC,8BAA8B;UACpCyB,KAAK,EAAE,IAAIqC,KAAK,CAACV,OAAO,CAACb,OAAO,CAAC,CAAC,CAAC,EAAG;UACtC0C,UAAU,EAAE;YAAEC,QAAQ,EAAE;UAAK;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACPtF,OAAA,CAAC/B,IAAI;QAAC0H,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAb,QAAA,eACvBhF,OAAA,CAAC9B,SAAS;UACR4H,SAAS;UACThF,KAAK,EAAC,6BAA6B;UACnCyB,KAAK,EAAE,IAAIqC,KAAK,CAACT,MAAM,CAACd,OAAO,CAAC,CAAC,CAAC,EAAG;UACrC0C,UAAU,EAAE;YAAEC,QAAQ,EAAE;UAAK;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEPtF,OAAA,CAAC/B,IAAI;MAACuH,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAT,QAAA,gBAEzBhF,OAAA,CAAC/B,IAAI;QAAC0H,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAb,QAAA,eACvBhF,OAAA,CAAChC,KAAK;UAACiH,OAAO,EAAC,UAAU;UAACH,EAAE,EAAE;YAAEC,CAAC,EAAE,CAAC;YAAEkB,MAAM,EAAE;UAAO,CAAE;UAAAjB,QAAA,gBACrDhF,OAAA,CAAClC,GAAG;YAACgH,EAAE,EAAE;cAAEoB,OAAO,EAAE,MAAM;cAAEC,cAAc,EAAE,eAAe;cAAEC,UAAU,EAAE,QAAQ;cAAEV,EAAE,EAAE;YAAE,CAAE;YAAAV,QAAA,gBACzFhF,OAAA,CAACjC,UAAU;cAACkH,OAAO,EAAC,IAAI;cAAAD,QAAA,EAAC;YAAqB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC3DtF,OAAA,CAAC7B,MAAM;cACL8G,OAAO,EAAC,WAAW;cACnBoB,SAAS,eAAErG,OAAA,CAACP,OAAO;gBAAA0F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cACvBgB,OAAO,EAAEtF,OAAQ;cACjBuF,IAAI,EAAC,OAAO;cAAAvB,QAAA,EACb;YAED;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,EAGL,CAAClF,MAAM,CAACc,MAAM,CAACD,KAAK,IAAI,EAAE,EAAEG,MAAM,KAAK,CAAC,gBACvCpB,OAAA,CAACjC,UAAU;YAACkH,OAAO,EAAC,OAAO;YAACuB,KAAK,EAAC,gBAAgB;YAAC1B,EAAE,EAAE;cAAE2B,SAAS,EAAE,QAAQ;cAAEC,EAAE,EAAE;YAAE,CAAE;YAAA1B,QAAA,EAAC;UAEvF;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,gBAEbtF,OAAA,CAAClC,GAAG;YAACgH,EAAE,EAAE;cAAE6B,SAAS,EAAE,OAAO;cAAEC,SAAS,EAAE;YAAO,CAAE;YAAA5B,QAAA,EAChD,CAAC5E,MAAM,CAACc,MAAM,CAACD,KAAK,IAAI,EAAE,EAAEM,GAAG,CAAEsB,IAAI,iBACpC7C,OAAA,CAACpB,IAAI;cAEHqG,OAAO,EAAC,UAAU;cAClBH,EAAE,EAAE;gBACFY,EAAE,EAAE,CAAC;gBACLmB,MAAM,EAAE,SAAS;gBACjBC,eAAe,EAAEtG,YAAY,IAAIA,YAAY,CAACG,EAAE,KAAKkC,IAAI,CAAClC,EAAE,GAAG,0BAA0B,GAAG;cAC9F,CAAE;cACF2F,OAAO,EAAEA,CAAA,KAAM7F,eAAe,CAACoC,IAAI,CAAE;cAAAmC,QAAA,eAErChF,OAAA,CAACnB,WAAW;gBAACiG,EAAE,EAAE;kBAAEiC,EAAE,EAAE;gBAAE,CAAE;gBAAA/B,QAAA,gBACzBhF,OAAA,CAAClC,GAAG;kBAACgH,EAAE,EAAE;oBAAEoB,OAAO,EAAE,MAAM;oBAAEC,cAAc,EAAE,eAAe;oBAAEC,UAAU,EAAE;kBAAS,CAAE;kBAAApB,QAAA,gBAClFhF,OAAA,CAACjC,UAAU;oBAACkH,OAAO,EAAC,WAAW;oBAACH,EAAE,EAAE;sBAAEkC,UAAU,EAAExG,YAAY,IAAIA,YAAY,CAACG,EAAE,KAAKkC,IAAI,CAAClC,EAAE,GAAG,MAAM,GAAG;oBAAS,CAAE;oBAAAqE,QAAA,EACjHnC,IAAI,CAACnB,IAAI,IAAI,cAAcmB,IAAI,CAAClC,EAAE;kBAAE;oBAAAwE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC3B,CAAC,eACbtF,OAAA,CAACtB,UAAU;oBACT6H,IAAI,EAAC,OAAO;oBACZC,KAAK,EAAC,OAAO;oBACbF,OAAO,EAAGW,CAAC,IAAK;sBACdA,CAAC,CAACC,eAAe,CAAC,CAAC;sBACnBvE,UAAU,CAACE,IAAI,CAAClC,EAAE,CAAC;oBACrB,CAAE;oBAAAqE,QAAA,eAEFhF,OAAA,CAACN,UAAU;sBAACyH,QAAQ,EAAC;oBAAO;sBAAAhC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC,eACNtF,OAAA,CAACjC,UAAU;kBAACkH,OAAO,EAAC,OAAO;kBAACuB,KAAK,EAAC,gBAAgB;kBAAAxB,QAAA,GAC/CnC,IAAI,CAACf,UAAU,GAAG,IAAIe,IAAI,CAACf,UAAU,KAAK,GAAG,EAAE,EAC/Ce,IAAI,CAACd,UAAU,GAAG,MAAMc,IAAI,CAACd,UAAU,CAACqF,cAAc,CAAC,CAAC,KAAK,GAAG,EAAE;gBAAA;kBAAAjC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzD,CAAC,eACbtF,OAAA,CAACjC,UAAU;kBAACkH,OAAO,EAAC,OAAO;kBAACuB,KAAK,EAAC,gBAAgB;kBAACa,MAAM;kBAAArC,QAAA,EACtDnC,IAAI,CAAClB;gBAAO;kBAAAwD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,eACbtF,OAAA,CAAClC,GAAG;kBAACgH,EAAE,EAAE;oBAAEoB,OAAO,EAAE,MAAM;oBAAEC,cAAc,EAAE,eAAe;oBAAEmB,EAAE,EAAE;kBAAE,CAAE;kBAAAtC,QAAA,gBACnEhF,OAAA,CAACjC,UAAU;oBAACkH,OAAO,EAAC,OAAO;oBAACuB,KAAK,EAAC,SAAS;oBAAAxB,QAAA,GAAC,mBAE1C,eAAAhF,OAAA;sBAAMuH,KAAK,EAAE;wBACXf,KAAK,EAAE9C,wBAAwB,CAACb,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,GAC7Ca,wBAAwB,CAACb,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG;sBACrD,CAAE;sBAAAmC,QAAA,EACC,IAAItB,wBAAwB,CAACb,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAGa,wBAAwB,CAACb,IAAI,CAAC;oBAAG;sBAAAsC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAClF,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACG,CAAC,eACbtF,OAAA,CAACjC,UAAU;oBAACkH,OAAO,EAAC,OAAO;oBAACuB,KAAK,EAAC,SAAS;oBAAAxB,QAAA,GAAC,cAC9B,eAAAhF,OAAA;sBAAAgF,QAAA,GAAQ,GAAC,EAACpB,sBAAsB,CAACf,IAAI,CAAC;oBAAA;sBAAAsC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAS,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAClD,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACK;YAAC,GA9CTzC,IAAI,CAAClC,EAAE;cAAAwE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA+CR,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGPtF,OAAA,CAAC/B,IAAI;QAAC0H,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAb,QAAA,eACvBhF,OAAA,CAAChC,KAAK;UAACiH,OAAO,EAAC,UAAU;UAACH,EAAE,EAAE;YAAEC,CAAC,EAAE;UAAE,CAAE;UAAAC,QAAA,EACpCxE,YAAY,gBACXR,OAAA,CAAAE,SAAA;YAAA8E,QAAA,gBACEhF,OAAA,CAACjC,UAAU;cAACkH,OAAO,EAAC,IAAI;cAACC,YAAY;cAAAF,QAAA,GAAC,UAC5B,EAACxE,YAAY,CAACkB,IAAI,IAAI,cAAclB,YAAY,CAACG,EAAE,EAAE;YAAA;cAAAwE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD,CAAC,eAGbtF,OAAA,CAAC/B,IAAI;cAACuH,SAAS;cAACC,OAAO,EAAE,CAAE;cAACX,EAAE,EAAE;gBAAEY,EAAE,EAAE;cAAE,CAAE;cAAAV,QAAA,gBACxChF,OAAA,CAAC/B,IAAI;gBAAC0H,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAACC,EAAE,EAAE,CAAE;gBAAAb,QAAA,eACvBhF,OAAA,CAAC9B,SAAS;kBACR4H,SAAS;kBACThF,KAAK,EAAC,iBAAiB;kBACvByB,KAAK,EAAE/B,YAAY,CAACkB,IAAI,IAAI,EAAG;kBAC/B8F,QAAQ,EAAGP,CAAC,IAAKnE,cAAc,CAAC,MAAM,EAAEmE,CAAC,CAACQ,MAAM,CAAClF,KAAK;gBAAE;kBAAA4C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzD;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACPtF,OAAA,CAAC/B,IAAI;gBAAC0H,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAACC,EAAE,EAAE,CAAE;gBAAAb,QAAA,eACvBhF,OAAA,CAAC9B,SAAS;kBACR4H,SAAS;kBACThF,KAAK,EAAC,eAAe;kBACrByB,KAAK,EAAE/B,YAAY,CAACO,IAAI,IAAI,EAAG;kBAC/ByG,QAAQ,EAAGP,CAAC,IAAKnE,cAAc,CAAC,MAAM,EAAEmE,CAAC,CAACQ,MAAM,CAAClF,KAAK;gBAAE;kBAAA4C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzD;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACPtF,OAAA,CAAC/B,IAAI;gBAAC0H,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAAAZ,QAAA,eAChBhF,OAAA,CAAC9B,SAAS;kBACR4H,SAAS;kBACThF,KAAK,EAAC,SAAS;kBACfyB,KAAK,EAAE/B,YAAY,CAACmB,OAAO,IAAI,EAAG;kBAClC6F,QAAQ,EAAGP,CAAC,IAAKnE,cAAc,CAAC,SAAS,EAAEmE,CAAC,CAACQ,MAAM,CAAClF,KAAK;gBAAE;kBAAA4C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5D;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACPtF,OAAA,CAAC/B,IAAI;gBAAC0H,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAACC,EAAE,EAAE,CAAE;gBAAAb,QAAA,eACvBhF,OAAA,CAAC9B,SAAS;kBACR4H,SAAS;kBACThF,KAAK,EAAC,WAAW;kBACjBC,IAAI,EAAC,MAAM;kBACX2G,eAAe,EAAE;oBAAEC,MAAM,EAAE;kBAAK,CAAE;kBAClCpF,KAAK,EAAE/B,YAAY,CAACoB,QAAQ,IAAI,EAAG;kBACnC4F,QAAQ,EAAGP,CAAC,IAAKnE,cAAc,CAAC,UAAU,EAAEmE,CAAC,CAACQ,MAAM,CAAClF,KAAK;gBAAE;kBAAA4C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7D;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACPtF,OAAA,CAAC/B,IAAI;gBAAC0H,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAACC,EAAE,EAAE,CAAE;gBAAAb,QAAA,eACvBhF,OAAA,CAAC9B,SAAS;kBACR4H,SAAS;kBACThF,KAAK,EAAC,YAAY;kBAClBC,IAAI,EAAC,QAAQ;kBACbgF,UAAU,EAAE;oBAAE6B,cAAc,eAAE5H,OAAA,CAACZ,cAAc;sBAACyI,QAAQ,EAAC,OAAO;sBAAA7C,QAAA,EAAC;oBAAC;sBAAAG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAgB;kBAAE,CAAE;kBACpF/C,KAAK,EAAE/B,YAAY,CAACqB,SAAS,IAAI,EAAG;kBACpC2F,QAAQ,EAAGP,CAAC,IAAKnE,cAAc,CAAC,WAAW,EAAEmE,CAAC,CAACQ,MAAM,CAAClF,KAAK;gBAAE;kBAAA4C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC9D;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACPtF,OAAA,CAAC/B,IAAI;gBAAC0H,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAACC,EAAE,EAAE,CAAE;gBAAAb,QAAA,eACvBhF,OAAA,CAAC9B,SAAS;kBACR4H,SAAS;kBACThF,KAAK,EAAC,aAAa;kBACnBC,IAAI,EAAC,QAAQ;kBACbwB,KAAK,EAAE/B,YAAY,CAACuB,UAAU,IAAI,EAAG;kBACrCyF,QAAQ,EAAGP,CAAC,IAAKnE,cAAc,CAAC,YAAY,EAAEmE,CAAC,CAACQ,MAAM,CAAClF,KAAK;gBAAE;kBAAA4C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/D;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACPtF,OAAA,CAAC/B,IAAI;gBAAC0H,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAACC,EAAE,EAAE,CAAE;gBAAAb,QAAA,eACvBhF,OAAA,CAAC9B,SAAS;kBACR4H,SAAS;kBACThF,KAAK,EAAC,cAAc;kBACpBiF,UAAU,EAAE;oBACV6B,cAAc,eAAE5H,OAAA,CAACZ,cAAc;sBAACyI,QAAQ,EAAC,OAAO;sBAAA7C,QAAA,EAAC;oBAAC;sBAAAG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAgB,CAAC;oBACnEU,QAAQ,EAAE;kBACZ,CAAE;kBACFzD,KAAK,EAAE/B,YAAY,CAACsB,UAAU,IAAI;gBAAG;kBAAAqD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACPtF,OAAA,CAAC/B,IAAI;gBAAC0H,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAACC,EAAE,EAAE,CAAE;gBAAAb,QAAA,eACvBhF,OAAA,CAAC9B,SAAS;kBACR4H,SAAS;kBACThF,KAAK,EAAC,YAAY;kBAClBC,IAAI,EAAC,QAAQ;kBACbwB,KAAK,EAAE/B,YAAY,CAACwB,SAAS,IAAI,EAAG;kBACpCwF,QAAQ,EAAGP,CAAC,IAAKnE,cAAc,CAAC,WAAW,EAAEmE,CAAC,CAACQ,MAAM,CAAClF,KAAK;gBAAE;kBAAA4C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC9D;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACPtF,OAAA,CAAC/B,IAAI;gBAAC0H,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAACC,EAAE,EAAE,CAAE;gBAAAb,QAAA,eACvBhF,OAAA,CAAC9B,SAAS;kBACR4H,SAAS;kBACThF,KAAK,EAAC,sBAAsB;kBAC5BiF,UAAU,EAAE;oBACV6B,cAAc,eAAE5H,OAAA,CAACZ,cAAc;sBAACyI,QAAQ,EAAC,OAAO;sBAAA7C,QAAA,EAAC;oBAAC;sBAAAG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAgB,CAAC;oBACnEU,QAAQ,EAAE;kBACZ,CAAE;kBACFzD,KAAK,EAAEqB,sBAAsB,CAACpD,YAAY;gBAAE;kBAAA2E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7C;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACPtF,OAAA,CAAC/B,IAAI;gBAAC0H,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAAAZ,QAAA,eAChBhF,OAAA,CAAC9B,SAAS;kBACR4H,SAAS;kBACThF,KAAK,EAAC,aAAa;kBACnBgH,SAAS;kBACTC,IAAI,EAAE,CAAE;kBACRxF,KAAK,EAAE/B,YAAY,CAACyB,WAAW,IAAI,EAAG;kBACtCuF,QAAQ,EAAGP,CAAC,IAAKnE,cAAc,CAAC,aAAa,EAAEmE,CAAC,CAACQ,MAAM,CAAClF,KAAK;gBAAE;kBAAA4C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAEPtF,OAAA,CAACrB,OAAO;cAACmG,EAAE,EAAE;gBAAE4B,EAAE,EAAE;cAAE;YAAE;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAG1BtF,OAAA,CAACjC,UAAU;cAACkH,OAAO,EAAC,IAAI;cAACC,YAAY;cAAAF,QAAA,EAAC;YAEtC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbtF,OAAA,CAACjC,UAAU;cAACkH,OAAO,EAAC,OAAO;cAACM,SAAS;cAAAP,QAAA,EAAC;YAEtC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,EAGZ5E,oBAAoB,CAACa,GAAG,CAAEc,QAAQ,iBACjCrC,OAAA,CAACX,SAAS;cAER2I,QAAQ,EAAE1H,gBAAgB,KAAK+B,QAAQ,CAAC1B,EAAG;cAC3C6G,QAAQ,EAAEA,CAAA,KAAMjH,mBAAmB,CAACD,gBAAgB,KAAK+B,QAAQ,CAAC1B,EAAE,GAAG,IAAI,GAAG0B,QAAQ,CAAC1B,EAAE,CAAE;cAC3FmE,EAAE,EAAE;gBAAEY,EAAE,EAAE;cAAE,CAAE;cAAAV,QAAA,gBAEdhF,OAAA,CAACV,gBAAgB;gBAAC2I,UAAU,eAAEjI,OAAA,CAACJ,cAAc;kBAAAuF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBAAAN,QAAA,eAC/ChF,OAAA,CAACjC,UAAU;kBAAAiH,QAAA,EAAE3C,QAAQ,CAACzB;gBAAK;kBAAAuE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAa;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC,eACnBtF,OAAA,CAACT,gBAAgB;gBAAAyF,QAAA,eACfhF,OAAA,CAACzB,cAAc;kBAAAyG,QAAA,eACbhF,OAAA,CAAC5B,KAAK;oBAACmI,IAAI,EAAC,OAAO;oBAAAvB,QAAA,gBACjBhF,OAAA,CAACxB,SAAS;sBAAAwG,QAAA,eACRhF,OAAA,CAACvB,QAAQ;wBAAAuG,QAAA,gBACPhF,OAAA,CAAC1B,SAAS;0BAAA0G,QAAA,EAAC;wBAAU;0BAAAG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAW,CAAC,eACjCtF,OAAA,CAAC1B,SAAS;0BAAC4J,KAAK,EAAC,OAAO;0BAACC,KAAK,EAAC,OAAO;0BAAAnD,QAAA,EAAC;wBAAS;0BAAAG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAW,CAAC,eAC5DtF,OAAA,CAAC1B,SAAS;0BAAA0G,QAAA,EAAC;wBAAK;0BAAAG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAW,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACpB;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACF,CAAC,eACZtF,OAAA,CAAC3B,SAAS;sBAAA2G,QAAA,EACP3C,QAAQ,CAACxB,MAAM,CAACU,GAAG,CAAEe,KAAK,IAAK;wBAAA,IAAA8F,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;wBAC9B;wBACA,MAAMC,eAAe,GAAG,EAAAN,qBAAA,GAAA5H,YAAY,CAAC2B,WAAW,cAAAiG,qBAAA,wBAAAC,sBAAA,GAAxBD,qBAAA,CAA2B/F,QAAQ,CAAC1B,EAAE,CAAC,cAAA0H,sBAAA,wBAAAC,sBAAA,GAAvCD,sBAAA,CAA0C/F,KAAK,CAAC3B,EAAE,CAAC,cAAA2H,sBAAA,uBAAnDA,sBAAA,CAAqD/F,KAAK,KAAI,CAAC;wBACvF,MAAMoG,eAAe,GAAG,EAAAJ,sBAAA,GAAA/H,YAAY,CAAC2B,WAAW,cAAAoG,sBAAA,wBAAAC,sBAAA,GAAxBD,sBAAA,CAA2BlG,QAAQ,CAAC1B,EAAE,CAAC,cAAA6H,sBAAA,wBAAAC,sBAAA,GAAvCD,sBAAA,CAA0ClG,KAAK,CAAC3B,EAAE,CAAC,cAAA8H,sBAAA,uBAAnDA,sBAAA,CAAqDjG,KAAK,KAAI,EAAE;wBAExF,oBACExC,OAAA,CAACvB,QAAQ;0BAAAuG,QAAA,gBACPhF,OAAA,CAAC1B,SAAS;4BAAA0G,QAAA,EAAE1C,KAAK,CAACxB;0BAAK;4BAAAqE,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAY,CAAC,eACpCtF,OAAA,CAAC1B,SAAS;4BAAC4J,KAAK,EAAC,OAAO;4BAAAlD,QAAA,eACtBhF,OAAA,CAAClC,GAAG;8BAACgH,EAAE,EAAE;gCAAEoB,OAAO,EAAE,MAAM;gCAAEE,UAAU,EAAE;8BAAS,CAAE;8BAAApB,QAAA,gBACjDhF,OAAA,CAACR,OAAO;gCAACoB,KAAK,EAAC,gBAAgB;gCAAAoE,QAAA,eAC7BhF,OAAA,CAACtB,UAAU;kCACT6H,IAAI,EAAC,OAAO;kCACZD,OAAO,EAAEA,CAAA,KAAM;oCACb,MAAMsC,QAAQ,GAAG1F,UAAU,CAACwF,eAAe,CAAC,GAAG,CAAC;oCAChDpF,gBAAgB,CAACjB,QAAQ,CAAC1B,EAAE,EAAE2B,KAAK,CAAC3B,EAAE,EAAE,OAAO,EAAEiI,QAAQ,CAAC;kCAC5D,CAAE;kCAAA5D,QAAA,eAEFhF,OAAA,CAACF,iBAAiB;oCAACqH,QAAQ,EAAC;kCAAO;oCAAAhC,QAAA,EAAAC,YAAA;oCAAAC,UAAA;oCAAAC,YAAA;kCAAA,OAAE;gCAAC;kCAAAH,QAAA,EAAAC,YAAA;kCAAAC,UAAA;kCAAAC,YAAA;gCAAA,OAC5B;8BAAC;gCAAAH,QAAA,EAAAC,YAAA;gCAAAC,UAAA;gCAAAC,YAAA;8BAAA,OACN,CAAC,eACVtF,OAAA,CAAC9B,SAAS;gCACRqI,IAAI,EAAC,OAAO;gCACZxF,IAAI,EAAC,QAAQ;gCACbwB,KAAK,EAAEmG,eAAgB;gCACvBlB,QAAQ,EAAGP,CAAC,IAAK3D,gBAAgB,CAACjB,QAAQ,CAAC1B,EAAE,EAAE2B,KAAK,CAAC3B,EAAE,EAAE,OAAO,EAAEsG,CAAC,CAACQ,MAAM,CAAClF,KAAK,CAAE;gCAClFwD,UAAU,EAAE;kCACV8C,YAAY,eAAE7I,OAAA,CAACZ,cAAc;oCAACyI,QAAQ,EAAC,KAAK;oCAAA7C,QAAA,EAAC;kCAAC;oCAAAG,QAAA,EAAAC,YAAA;oCAAAC,UAAA;oCAAAC,YAAA;kCAAA,OAAgB,CAAC;kCAC/DwD,UAAU,EAAE;oCACVvB,KAAK,EAAE;sCAAEd,SAAS,EAAE;oCAAQ,CAAC;oCAC7BsC,IAAI,EAAE;kCACR;gCACF,CAAE;gCACFjE,EAAE,EAAE;kCAAEqD,KAAK,EAAE,MAAM;kCAAE,SAAS,EAAE;oCAAE1B,SAAS,EAAE;kCAAQ;gCAAE;8BAAE;gCAAAtB,QAAA,EAAAC,YAAA;gCAAAC,UAAA;gCAAAC,YAAA;8BAAA,OAC1D,CAAC,eACFtF,OAAA,CAACR,OAAO;gCAACoB,KAAK,EAAC,gBAAgB;gCAAAoE,QAAA,eAC7BhF,OAAA,CAACtB,UAAU;kCACT6H,IAAI,EAAC,OAAO;kCACZD,OAAO,EAAEA,CAAA,KAAM;oCACb,MAAMsC,QAAQ,GAAG1F,UAAU,CAACwF,eAAe,CAAC,GAAG,CAAC;oCAChDpF,gBAAgB,CAACjB,QAAQ,CAAC1B,EAAE,EAAE2B,KAAK,CAAC3B,EAAE,EAAE,OAAO,EAAEiI,QAAQ,CAAC;kCAC5D,CAAE;kCAAA5D,QAAA,eAEFhF,OAAA,CAACH,eAAe;oCAACsH,QAAQ,EAAC;kCAAO;oCAAAhC,QAAA,EAAAC,YAAA;oCAAAC,UAAA;oCAAAC,YAAA;kCAAA,OAAE;gCAAC;kCAAAH,QAAA,EAAAC,YAAA;kCAAAC,UAAA;kCAAAC,YAAA;gCAAA,OAC1B;8BAAC;gCAAAH,QAAA,EAAAC,YAAA;gCAAAC,UAAA;gCAAAC,YAAA;8BAAA,OACN,CAAC;4BAAA;8BAAAH,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OACP;0BAAC;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACG,CAAC,eACZtF,OAAA,CAAC1B,SAAS;4BAAA0G,QAAA,eACRhF,OAAA,CAAC9B,SAAS;8BACR4H,SAAS;8BACTS,IAAI,EAAC,OAAO;8BACZyC,WAAW,EAAC,8BAA8B;8BAC1CzG,KAAK,EAAEoG,eAAgB;8BACvBnB,QAAQ,EAAGP,CAAC,IAAK3D,gBAAgB,CAACjB,QAAQ,CAAC1B,EAAE,EAAE2B,KAAK,CAAC3B,EAAE,EAAE,OAAO,EAAEsG,CAAC,CAACQ,MAAM,CAAClF,KAAK;4BAAE;8BAAA4C,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OACnF;0BAAC;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACO,CAAC;wBAAA,GAlDChD,KAAK,CAAC3B,EAAE;0BAAAwE,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAmDb,CAAC;sBAEf,CAAC;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACO,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACP;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACM;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC;YAAA,GAlFdjD,QAAQ,CAAC1B,EAAE;cAAAwE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAmFP,CACZ,CAAC,eAGFtF,OAAA,CAAClC,GAAG;cAACgH,EAAE,EAAE;gBAAEwC,EAAE,EAAE,CAAC;gBAAEvC,CAAC,EAAE,CAAC;gBAAEkE,OAAO,EAAE,kBAAkB;gBAAEC,YAAY,EAAE;cAAE,CAAE;cAAAlE,QAAA,gBACrEhF,OAAA,CAACjC,UAAU;gBAACkH,OAAO,EAAC,WAAW;gBAACC,YAAY;gBAAAF,QAAA,EAAC;cAE7C;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACbtF,OAAA,CAAC/B,IAAI;gBAACuH,SAAS;gBAACC,OAAO,EAAE,CAAE;gBAAAT,QAAA,gBACzBhF,OAAA,CAAC/B,IAAI;kBAAC0H,IAAI;kBAACC,EAAE,EAAE,EAAG;kBAACC,EAAE,EAAE,CAAE;kBAAAb,QAAA,eACvBhF,OAAA,CAAC9B,SAAS;oBACR4H,SAAS;oBACThF,KAAK,EAAC,mBAAmB;oBACzBiF,UAAU,EAAE;sBACV6B,cAAc,eAAE5H,OAAA,CAACZ,cAAc;wBAACyI,QAAQ,EAAC,OAAO;wBAAA7C,QAAA,EAAC;sBAAC;wBAAAG,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAgB,CAAC;sBACnEU,QAAQ,EAAE;oBACZ,CAAE;oBACFzD,KAAK,EAAE/B,YAAY,CAACsB,UAAU,IAAI;kBAAO;oBAAAqD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC1C;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC,eACPtF,OAAA,CAAC/B,IAAI;kBAAC0H,IAAI;kBAACC,EAAE,EAAE,EAAG;kBAACC,EAAE,EAAE,CAAE;kBAAAb,QAAA,eACvBhF,OAAA,CAAC9B,SAAS;oBACR4H,SAAS;oBACThF,KAAK,EAAC,kBAAkB;oBACxBiF,UAAU,EAAE;sBACV8C,YAAY,eAAE7I,OAAA,CAACZ,cAAc;wBAACyI,QAAQ,EAAC,KAAK;wBAAA7C,QAAA,EAAC;sBAAC;wBAAAG,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAgB,CAAC;sBAC/DU,QAAQ,EAAE;oBACZ,CAAE;oBACFzD,KAAK,EAAEmB,wBAAwB,CAAClD,YAAY;kBAAE;oBAAA2E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/C;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC,eACPtF,OAAA,CAAC/B,IAAI;kBAAC0H,IAAI;kBAACC,EAAE,EAAE,EAAG;kBAACC,EAAE,EAAE,CAAE;kBAAAb,QAAA,eACvBhF,OAAA,CAAC9B,SAAS;oBACR4H,SAAS;oBACThF,KAAK,EAAC,uBAAuB;oBAC7BiF,UAAU,EAAE;sBACV6B,cAAc,eAAE5H,OAAA,CAACZ,cAAc;wBAACyI,QAAQ,EAAC,OAAO;wBAAA7C,QAAA,EAAC;sBAAC;wBAAAG,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAgB,CAAC;sBACnEU,QAAQ,EAAE;oBACZ,CAAE;oBACFzD,KAAK,EAAEqB,sBAAsB,CAACpD,YAAY;kBAAE;oBAAA2E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC7C;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA,eACN,CAAC,gBAEHtF,OAAA,CAAClC,GAAG;YAACgH,EAAE,EAAE;cAAEC,CAAC,EAAE,CAAC;cAAE0B,SAAS,EAAE;YAAS,CAAE;YAAAzB,QAAA,eACrChF,OAAA,CAACjC,UAAU;cAACkH,OAAO,EAAC,OAAO;cAACuB,KAAK,EAAC,gBAAgB;cAAAxB,QAAA,EAAC;YAGnD;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAACjF,EAAA,CArnBIF,eAAe;AAAAgJ,EAAA,GAAfhJ,eAAe;AAunBrB,eAAeA,eAAe;AAAC,IAAAgJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}