{"ast":null,"code":"import React from'react';import{Box,Typography,Paper,Grid,TextField,FormControl,InputLabel,Select,MenuItem,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,IconButton,Divider,Button}from'@mui/material';import{createFieldNameHelper,createChangeHandler}from'../utils/formHelpers';import AddIcon from'@mui/icons-material/Add';import DeleteIcon from'@mui/icons-material/Delete';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const IncomeStatements=_ref=>{let{formik}=_ref;// Create helper functions for this component\nconst fieldName=createFieldNameHelper('income');const handleChange=createChangeHandler(formik);// Ensure values is initialized\nconst values=formik.values||{};const addRentRollEntry=()=>{const rentRoll=[...(formik.values.rentRoll||[])];rentRoll.push({unit:'',tenant:'',leaseStart:'',leaseEnd:'',monthlyRent:'',annualRent:'',rentPSF:''});formik.setFieldValue('rentRoll',rentRoll);};const removeRentRollEntry=index=>{const rentRoll=[...(formik.values.rentRoll||[])];rentRoll.splice(index,1);formik.setFieldValue('rentRoll',rentRoll);};const handleRentRollChange=(index,field,value)=>{const rentRoll=[...(formik.values.rentRoll||[])];rentRoll[index][field]=value;// Calculate annual rent if monthly rent is provided\nif(field==='monthlyRent'){const monthlyRent=parseFloat(value)||0;rentRoll[index].annualRent=(monthlyRent*12).toString();}// Calculate PSF if annual rent and square footage are available\nif(field==='monthlyRent'||field==='squareFeet'){const annualRent=parseFloat(rentRoll[index].annualRent)||0;const squareFeet=parseFloat(rentRoll[index].squareFeet)||0;if(squareFeet>0){rentRoll[index].rentPSF=(annualRent/squareFeet).toFixed(2);}}formik.setFieldValue('rentRoll',rentRoll);};return/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Income Statements & Rent Roll Data\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",paragraph:true,children:\"Enter income statement data and rent roll information for the property.\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"income-period-label\",children:\"Income Period\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"income-period-label\",id:\"incomePeriod\",name:fieldName('incomePeriod'),value:values.incomePeriod||'',onChange:handleChange,label:\"Income Period\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"ttm\",children:\"Trailing Twelve Months\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"annualized\",children:\"Annualized Current Month\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"proforma\",children:\"Pro Forma\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"lastFiscalYear\",children:\"Last Fiscal Year\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"asOfDate\",name:fieldName('asOfDate'),label:\"As of Date\",type:\"date\",value:values.asOfDate||'',onChange:handleChange,InputLabelProps:{shrink:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,sx:{mt:2},children:\"Gross Income\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"baseRent\",name:fieldName('baseRent'),label:\"Base Rental Income\",type:\"number\",value:values.baseRent||'',onChange:handleChange,InputProps:{startAdornment:'$'}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"expenseReimbursements\",name:fieldName('expenseReimbursements'),label:\"Expense Reimbursements\",type:\"number\",value:values.expenseReimbursements||'',onChange:handleChange,InputProps:{startAdornment:'$'}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"percentageRent\",name:fieldName('percentageRent'),label:\"Percentage Rent\",type:\"number\",value:values.percentageRent||'',onChange:handleChange,InputProps:{startAdornment:'$'}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"otherIncome\",name:fieldName('otherIncome'),label:\"Other Income\",type:\"number\",value:values.otherIncome||'',onChange:handleChange,InputProps:{startAdornment:'$'}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,disabled:true,id:\"potentialGrossIncome\",label:\"Potential Gross Income\",type:\"number\",value:(parseFloat(formik.values.baseRent||0)+parseFloat(formik.values.expenseReimbursements||0)+parseFloat(formik.values.percentageRent||0)+parseFloat(formik.values.otherIncome||0)).toFixed(2),InputProps:{startAdornment:'$'}})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Divider,{sx:{my:2}}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Rent Roll\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:addRentRollEntry,children:\"Add Unit\"})]}),/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Unit\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Tenant\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Sq. Ft.\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Lease Start\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Lease End\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Monthly Rent\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Annual Rent\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Rent PSF\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:(formik.values.rentRoll||[]).map((entry,index)=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",value:entry.unit||'',onChange:e=>handleRentRollChange(index,'unit',e.target.value)})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",value:entry.tenant||'',onChange:e=>handleRentRollChange(index,'tenant',e.target.value)})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",type:\"number\",value:entry.squareFeet||'',onChange:e=>handleRentRollChange(index,'squareFeet',e.target.value)})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",type:\"date\",InputLabelProps:{shrink:true},value:entry.leaseStart||'',onChange:e=>handleRentRollChange(index,'leaseStart',e.target.value)})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",type:\"date\",InputLabelProps:{shrink:true},value:entry.leaseEnd||'',onChange:e=>handleRentRollChange(index,'leaseEnd',e.target.value)})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",type:\"number\",value:entry.monthlyRent||'',onChange:e=>handleRentRollChange(index,'monthlyRent',e.target.value),InputProps:{startAdornment:'$'}})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",type:\"number\",disabled:true,value:entry.annualRent||'',InputProps:{startAdornment:'$'}})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",type:\"number\",disabled:true,value:entry.rentPSF||'',InputProps:{startAdornment:'$'}})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>removeRentRollEntry(index),children:/*#__PURE__*/_jsx(DeleteIcon,{})})})]},index))})]})}),(formik.values.rentRoll||[]).length===0&&/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",align:\"center\",sx:{my:2},children:\"No rent roll entries. Click \\\"Add Unit\\\" to add tenants.\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"incomeNotes\",name:fieldName('incomeNotes'),label:\"Additional Income Notes\",multiline:true,rows:3,value:values.incomeNotes||'',onChange:handleChange})})]})]});};export default IncomeStatements;","map":{"version":3,"names":["React","Box","Typography","Paper","Grid","TextField","FormControl","InputLabel","Select","MenuItem","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","Divider","Button","createFieldNameHelper","createChangeHandler","AddIcon","DeleteIcon","jsx","_jsx","jsxs","_jsxs","IncomeStatements","_ref","formik","fieldName","handleChange","values","addRentRollEntry","rentRoll","push","unit","tenant","leaseStart","leaseEnd","monthlyRent","annualRent","rentPSF","setFieldValue","removeRentRollEntry","index","splice","handleRentRollChange","field","value","parseFloat","toString","squareFeet","toFixed","elevation","sx","p","children","variant","gutterBottom","paragraph","container","spacing","item","xs","md","fullWidth","id","labelId","name","incomePeriod","onChange","label","type","asOfDate","InputLabelProps","shrink","mt","baseRent","InputProps","startAdornment","expenseReimbursements","percentageRent","otherIncome","disabled","my","display","justifyContent","alignItems","mb","startIcon","onClick","size","map","entry","e","target","length","color","align","multiline","rows","incomeNotes"],"sources":["C:/Users/sures/Desktop/Valuelyst/client/src/pages/IncomeStatements.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Grid,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  Divider,\n  Button\n} from '@mui/material';\nimport { createFieldNameHelper, createChangeHandler } from '../utils/formHelpers';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst IncomeStatements = ({ formik }) => {\n  // Create helper functions for this component\n  const fieldName = createFieldNameHelper('income');\n  const handleChange = createChangeHandler(formik);\n  \n  // Ensure values is initialized\n  const values = formik.values || {};\n  const addRentRollEntry = () => {\n    const rentRoll = [...(formik.values.rentRoll || [])];\n    rentRoll.push({\n      unit: '',\n      tenant: '',\n      leaseStart: '',\n      leaseEnd: '',\n      monthlyRent: '',\n      annualRent: '',\n      rentPSF: ''\n    });\n    formik.setFieldValue('rentRoll', rentRoll);\n  };\n\n  const removeRentRollEntry = (index) => {\n    const rentRoll = [...(formik.values.rentRoll || [])];\n    rentRoll.splice(index, 1);\n    formik.setFieldValue('rentRoll', rentRoll);\n  };\n\n  const handleRentRollChange = (index, field, value) => {\n    const rentRoll = [...(formik.values.rentRoll || [])];\n    rentRoll[index][field] = value;\n    \n    // Calculate annual rent if monthly rent is provided\n    if (field === 'monthlyRent') {\n      const monthlyRent = parseFloat(value) || 0;\n      rentRoll[index].annualRent = (monthlyRent * 12).toString();\n    }\n    \n    // Calculate PSF if annual rent and square footage are available\n    if (field === 'monthlyRent' || field === 'squareFeet') {\n      const annualRent = parseFloat(rentRoll[index].annualRent) || 0;\n      const squareFeet = parseFloat(rentRoll[index].squareFeet) || 0;\n      if (squareFeet > 0) {\n        rentRoll[index].rentPSF = (annualRent / squareFeet).toFixed(2);\n      }\n    }\n    \n    formik.setFieldValue('rentRoll', rentRoll);\n  };\n\n  return (\n    <Paper elevation={3} sx={{ p: 3 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Income Statements & Rent Roll Data\n      </Typography>\n      <Typography variant=\"body2\" paragraph>\n        Enter income statement data and rent roll information for the property.\n      </Typography>\n\n      <Grid container spacing={3}>\n        {/* Income Period Selection */}\n        <Grid item xs={12} md={6}>\n          <FormControl fullWidth>\n            <InputLabel id=\"income-period-label\">Income Period</InputLabel>\n            <Select\n              labelId=\"income-period-label\"\n              id=\"incomePeriod\"\n              name={fieldName('incomePeriod')}\n              value={values.incomePeriod  || ''}\n              onChange={handleChange}\n              label=\"Income Period\"\n            >\n              <MenuItem value=\"ttm\">Trailing Twelve Months</MenuItem>\n              <MenuItem value=\"annualized\">Annualized Current Month</MenuItem>\n              <MenuItem value=\"proforma\">Pro Forma</MenuItem>\n              <MenuItem value=\"lastFiscalYear\">Last Fiscal Year</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            id=\"asOfDate\"\n            name={fieldName('asOfDate')}\n            label=\"As of Date\"\n            type=\"date\"\n            value={values.asOfDate  || ''}\n            onChange={handleChange}\n            InputLabelProps={{ shrink: true }}\n          />\n        </Grid>\n\n        {/* Gross Income */}\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\n            Gross Income\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            id=\"baseRent\"\n            name={fieldName('baseRent')}\n            label=\"Base Rental Income\"\n            type=\"number\"\n            value={values.baseRent  || ''}\n            onChange={handleChange}\n            InputProps={{ startAdornment: '$' }}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            id=\"expenseReimbursements\"\n            name={fieldName('expenseReimbursements')}\n            label=\"Expense Reimbursements\"\n            type=\"number\"\n            value={values.expenseReimbursements  || ''}\n            onChange={handleChange}\n            InputProps={{ startAdornment: '$' }}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            id=\"percentageRent\"\n            name={fieldName('percentageRent')}\n            label=\"Percentage Rent\"\n            type=\"number\"\n            value={values.percentageRent  || ''}\n            onChange={handleChange}\n            InputProps={{ startAdornment: '$' }}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            id=\"otherIncome\"\n            name={fieldName('otherIncome')}\n            label=\"Other Income\"\n            type=\"number\"\n            value={values.otherIncome  || ''}\n            onChange={handleChange}\n            InputProps={{ startAdornment: '$' }}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            disabled\n            id=\"potentialGrossIncome\"\n            label=\"Potential Gross Income\"\n            type=\"number\"\n            value={\n              (parseFloat(formik.values.baseRent || 0) +\n              parseFloat(formik.values.expenseReimbursements || 0) +\n              parseFloat(formik.values.percentageRent || 0) +\n              parseFloat(formik.values.otherIncome || 0)).toFixed(2)\n            }\n            InputProps={{ startAdornment: '$' }}\n          />\n        </Grid>\n\n        {/* Rent Roll */}\n        <Grid item xs={12}>\n          <Divider sx={{ my: 2 }} />\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n            <Typography variant=\"h6\">\n              Rent Roll\n            </Typography>\n            <Button \n              variant=\"contained\" \n              startIcon={<AddIcon />}\n              onClick={addRentRollEntry}\n            >\n              Add Unit\n            </Button>\n          </Box>\n          \n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Unit</TableCell>\n                  <TableCell>Tenant</TableCell>\n                  <TableCell>Sq. Ft.</TableCell>\n                  <TableCell>Lease Start</TableCell>\n                  <TableCell>Lease End</TableCell>\n                  <TableCell>Monthly Rent</TableCell>\n                  <TableCell>Annual Rent</TableCell>\n                  <TableCell>Rent PSF</TableCell>\n                  <TableCell>Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {(formik.values.rentRoll || []).map((entry, index) => (\n                  <TableRow key={index}>\n                    <TableCell>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        value={entry.unit || ''}\n                        onChange={(e) => handleRentRollChange(index, 'unit', e.target.value)}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        value={entry.tenant || ''}\n                        onChange={(e) => handleRentRollChange(index, 'tenant', e.target.value)}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        type=\"number\"\n                        value={entry.squareFeet || ''}\n                        onChange={(e) => handleRentRollChange(index, 'squareFeet', e.target.value)}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        type=\"date\"\n                        InputLabelProps={{ shrink: true }}\n                        value={entry.leaseStart || ''}\n                        onChange={(e) => handleRentRollChange(index, 'leaseStart', e.target.value)}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        type=\"date\"\n                        InputLabelProps={{ shrink: true }}\n                        value={entry.leaseEnd || ''}\n                        onChange={(e) => handleRentRollChange(index, 'leaseEnd', e.target.value)}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        type=\"number\"\n                        value={entry.monthlyRent || ''}\n                        onChange={(e) => handleRentRollChange(index, 'monthlyRent', e.target.value)}\n                        InputProps={{ startAdornment: '$' }}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        type=\"number\"\n                        disabled\n                        value={entry.annualRent || ''}\n                        InputProps={{ startAdornment: '$' }}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        type=\"number\"\n                        disabled\n                        value={entry.rentPSF || ''}\n                        InputProps={{ startAdornment: '$' }}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => removeRentRollEntry(index)}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          \n          {(formik.values.rentRoll || []).length === 0 && (\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ my: 2 }}>\n              No rent roll entries. Click \"Add Unit\" to add tenants.\n            </Typography>\n          )}\n        </Grid>\n\n        {/* Additional Notes */}\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            id=\"incomeNotes\"\n            name={fieldName('incomeNotes')}\n            label=\"Additional Income Notes\"\n            multiline\n            rows={3}\n            value={values.incomeNotes  || ''}\n            onChange={handleChange}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default IncomeStatements;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}